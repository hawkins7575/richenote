{"version":3,"mappings":"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","names":["f","require$$0","k","l","m","n","p","q","c","a","g","b","d","e","h","reactJsxRuntime_production_min","jsxRuntimeModule","client","_extends","target","i","source","key","Action","PopStateEventType","createBrowserHistory","options","createBrowserLocation","window","globalHistory","pathname","search","hash","createLocation","createBrowserHref","to","createPath","getUrlBasedHistory","invariant","value","message","warning","cond","createKey","getHistoryState","location","index","current","state","parsePath","_ref","path","parsedPath","hashIndex","searchIndex","getLocation","createHref","validateLocation","v5Compat","action","listener","getIndex","handlePop","nextIndex","delta","history","push","historyState","url","error","replace","createURL","base","href","fn","ResultType","matchRoutes","routes","locationArg","basename","matchRoutesImpl","allowPartial","stripBasename","branches","flattenRoutes","rankRouteBranches","matches","decoded","decodePath","matchRouteBranch","parentsMeta","parentPath","flattenRoute","route","relativePath","meta","joinPaths","routesMeta","computeScore","_route$path","exploded","explodeOptionalSegments","segments","first","rest","isOptional","required","restExploded","result","subpath","compareIndexes","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","initialScore","s","score","segment","branch","matchedParams","matchedPathname","end","remainingPathname","match","matchPath","normalizePathname","pattern","matcher","compiledParams","compilePath","pathnameBase","captureGroups","memo","paramName","splatValue","caseSensitive","params","regexpSource","_","v","startIndex","nextChar","resolvePath","fromPathname","toPathname","resolvePathname","normalizeSearch","normalizeHash","getInvalidPathError","char","field","dest","getPathContributingMatches","getResolveToMatches","v7_relativeSplatPath","pathMatches","idx","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","isEmptyPath","from","routePathnameIndex","toSegments","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","isRouteErrorResponse","validMutationMethodsArr","validRequestMethodsArr","DataRouterContext","React.createContext","DataRouterStateContext","NavigationContext","LocationContext","RouteContext","RouteErrorContext","useHref","_temp","relative","useInRouterContext","UNSAFE_invariant","navigator","React.useContext","useResolvedPath","joinedPathname","useLocation","useIsomorphicLayoutEffect","cb","React.useLayoutEffect","useNavigate","isDataRoute","useNavigateStable","useNavigateUnstable","dataRouterContext","future","routePathnamesJson","UNSAFE_getResolveToMatches","activeRef","React.useRef","React.useCallback","_temp2","React.useMemo","useRoutes","useRoutesImpl","dataRouterState","parentMatches","routeMatch","parentParams","parentPathnameBase","locationFromContext","_parsedLocationArg$pa","parsedLocationArg","parentSegments","renderedMatches","_renderMatches","React.createElement","DefaultErrorComponent","useRouteError","stack","preStyles","React.Fragment","defaultErrorElement","RenderErrorBoundary","React.Component","props","errorInfo","RenderedRoute","routeContext","children","_dataRouterState","_future","errors","errorIndex","renderFallback","fallbackIndex","loaderData","needsToRunLoader","outlet","shouldRenderHydrateFallback","errorElement","hydrateFallbackElement","warningOnce","getChildren","DataRouterHook","DataRouterStateHook","useDataRouterContext","hookName","ctx","useDataRouterState","useRouteContext","useCurrentRouteId","thisRoute","_state$errors","routeId","router","id","alreadyWarned$1","logV6DeprecationWarnings","renderFuture","routerFuture","Navigate","_ref4","isStatic","navigate","jsonPath","React.useEffect","Route","_props","Router","_ref5","basenameProp","locationProp","navigationType","staticProp","navigationContext","locationContext","trailingPathname","Routes","_ref6","createRoutesFromChildren","React.Children","element","React.isValidElement","treePath","_objectWithoutPropertiesLoose","excluded","sourceKeys","isModifiedEvent","event","shouldProcessLinkClick","createSearchParams","init","getSearchParamsForLocation","locationSearch","defaultSearchParams","searchParams","_excluded","REACT_ROUTER_VERSION","START_TRANSITION","startTransitionImpl","React","BrowserRouter","historyRef","setStateImpl","React.useState","v7_startTransition","setState","newState","UNSAFE_logV6DeprecationWarnings","isBrowser","ABSOLUTE_URL_REGEX","Link","React.forwardRef","_ref7","ref","onClick","reloadDocument","preventScrollReset","viewTransition","UNSAFE_NavigationContext","absoluteHref","isExternal","currentUrl","targetUrl","internalOnClick","useLinkClickHandler","handleClick","replaceProp","useSearchParams","defaultInit","defaultSearchParamsRef","hasSetSearchParamsRef","setSearchParams","nextInit","navigateOptions","newSearchParams","supabaseUrl","supabaseAnonKey","supabaseInstance","supabase","createClient","StructuredLogger","level","context","logEntry","args","logger","AuthContext","createContext","useAuth","useContext","AuthProvider","user","setUser","useState","session","setSession","loading","setLoading","useEffect","timeoutPromise","reject","sessionPromise","profilePromise","profileTimeoutPromise","profile","profileError","subscription","signUp","data","signIn","signOut","resetPassword","email","getCurrentUser","refreshData","refreshError","supabaseUser","authUser","_a","_b","useMemo","jsx","TenantContext","TenantProvider","tenant","setTenant","isLoading","setIsLoading","setError","switchTenant","tenantId","err","updateTenant","updates","getTenantStats","created","now","hasFeature","feature","canCreateProperty","canInviteUser","isWithinLimits","_resource","existingTenant","queryError","fullTenant","mockTenant","userTenant","newTenant","createError","root","favicon","contextValue","useTenant","r","o","clsx","falsyToString","cx","cva","config","_config_compoundVariants","variants","defaultVariants","getVariantClassNames","variant","variantProp","defaultVariantProp","variantKey","propsWithoutUndefined","acc","param","getCompoundVariantClassNames","cvClass","cvClassName","compoundVariantOptions","CLASS_PART_SEPARATOR","createClassGroupUtils","classMap","createClassMap","conflictingClassGroups","conflictingClassGroupModifiers","className","classParts","getGroupRecursive","getGroupIdForArbitraryProperty","classGroupId","hasPostfixModifier","conflicts","classPartObject","currentClassPart","nextClassPartObject","classGroupFromNextClassPart","classRest","validator","arbitraryPropertyRegex","arbitraryPropertyClassName","property","theme","classGroups","processClassesRecursively","classGroup","classDefinition","classPartObjectToEdit","getPart","isThemeGetter","currentClassPartObject","pathPart","func","createLruCache","maxCacheSize","cacheSize","cache","previousCache","update","IMPORTANT_MODIFIER","MODIFIER_SEPARATOR","MODIFIER_SEPARATOR_LENGTH","createParseClassName","prefix","experimentalParseClassName","parseClassName","modifiers","bracketDepth","parenDepth","modifierStart","postfixModifierPosition","currentCharacter","baseClassNameWithImportantModifier","baseClassName","stripImportantModifier","hasImportantModifier","maybePostfixModifierPosition","fullPrefix","parseClassNameOriginal","createSortModifiers","orderSensitiveModifiers","modifier","sortedModifiers","unsortedModifiers","createConfigUtils","SPLIT_CLASSES_REGEX","mergeClassList","classList","configUtils","getClassGroupId","getConflictingClassGroupIds","sortModifiers","classGroupsInConflict","classNames","originalClassName","variantModifier","modifierId","classId","conflictGroups","group","twJoin","argument","resolvedValue","string","toValue","mix","createTailwindMerge","createConfigFirst","createConfigRest","cacheGet","cacheSet","functionToCall","initTailwindMerge","previousConfig","createConfigCurrent","tailwindMerge","cachedResult","fromTheme","themeGetter","arbitraryValueRegex","arbitraryVariableRegex","fractionRegex","tshirtUnitRegex","lengthUnitRegex","colorFunctionRegex","shadowRegex","imageRegex","isFraction","isNumber","isInteger","isPercent","isTshirtSize","isAny","isLengthOnly","isNever","isShadow","isImage","isAnyNonArbitrary","isArbitraryValue","isArbitraryVariable","isArbitrarySize","getIsArbitraryValue","isLabelSize","isArbitraryLength","isLabelLength","isArbitraryNumber","isLabelNumber","isArbitraryPosition","isLabelPosition","isArbitraryImage","isLabelImage","isArbitraryShadow","isLabelShadow","isArbitraryVariableLength","getIsArbitraryVariable","isArbitraryVariableFamilyName","isLabelFamilyName","isArbitraryVariablePosition","isArbitraryVariableSize","isArbitraryVariableImage","isArbitraryVariableShadow","testLabel","testValue","shouldMatchNoLabel","label","getDefaultConfig","themeColor","themeFont","themeText","themeFontWeight","themeTracking","themeLeading","themeBreakpoint","themeContainer","themeSpacing","themeRadius","themeShadow","themeInsetShadow","themeTextShadow","themeDropShadow","themeBlur","themePerspective","themeAspect","themeEase","themeAnimate","scaleBreak","scalePosition","scalePositionWithArbitrary","scaleOverflow","scaleOverscroll","scaleUnambiguousSpacing","scaleInset","scaleGridTemplateColsRows","scaleGridColRowStartAndEnd","scaleGridColRowStartOrEnd","scaleGridAutoColsRows","scaleAlignPrimaryAxis","scaleAlignSecondaryAxis","scaleMargin","scaleSizing","scaleColor","scaleBgPosition","scaleBgRepeat","scaleBgSize","scaleGradientStopPosition","scaleRadius","scaleBorderWidth","scaleLineStyle","scaleBlendMode","scaleMaskImagePosition","scaleBlur","scaleRotate","scaleScale","scaleSkew","scaleTranslate","twMerge","cn","inputs","buttonVariants","Button","size","fullWidth","leftIcon","rightIcon","disabled","jsxs","Fragment","inputVariants","Input","helperText","inputId","finalVariant","selectVariants","Select","placeholder","selectId","option","ChevronDown","Modal","isOpen","onClose","title","closable","handleEscape","sizeClasses","modal","X","createPortal","cardVariants","Card","padding","clickable","CardHeader","CardTitle","CardContent","badgeVariants","Badge","PropertyStatusBadge","status","variantMap","Loading","text","fullScreen","spinner","InstallPrompt","deferredPrompt","setDeferredPrompt","showInstallPrompt","setShowInstallPrompt","isInstalled","setIsInstalled","handleBeforeInstallPrompt","handleAppInstalled","checkIfInstalled","handleInstallClick","outcome","handleDismiss","Monitor","Download","InstallButton","isSupported","setIsSupported","userAgent","isIOS","isAndroid","SignUpForm","onBackToLogin","showPassword","setShowPassword","showConfirmPassword","setShowConfirmPassword","success","setSuccess","formData","setFormData","handleSubmit","handleInputChange","name","prev","ArrowLeft","CheckCircle","AlertCircle","User","Building","Mail","Lock","EyeOff","Eye","LoginPage","isSignUp","setIsSignUp","isResetPassword","setIsResetPassword","AuthGuard","fallback","handleForceSignOut","UserMenu","setIsOpen","menuRef","useRef","handleClickOutside","handleSignOut","Settings","LogOut","AppLayout","sidebarOpen","setSidebarOpen","navigation","Home","Calendar","Users","BookOpen","Plus","item","isCurrent","_c","_d","ErrorBoundary","DESCRIPTION_PATTERNS","FACILITY_KEYWORDS","DEFAULT_VALUES","ERROR_MESSAGES","parseCache","parseStructuredDescription","desc","cleanDescription","landlord_name","landlord_phone","exit_date","detailed_address","parking","elevator","is_vacant","landlordMatch","landlordText","nameMatch","phoneMatch","exitMatch","vacantMatch","facilityMatch","facilityText","addressMatch","firstKey","transformDbRowToProperty","parsedInfo","getProperties","userId","filters","userProfile","userError","userName","recoveredProfile","actualTenantId","query","getProperty","propertyId","createProperty","propertyData","structuredDescription","landlordInfo","exitInfo","facilities","facilityInfo","addressInfo","statusInfo","dbData","transformedData","updateProperty","existingData","existingInfo","newStructuredDescription","statusMatch","deleteProperty","getPropertyStats","completedCount","togglePropertyFavorite","currentProperty","ServiceError","__super","__publicField","ScheduleService","startDate","endDate","date","startOfDay","endOfDay","cleanedFormData","scheduleData","currentAuthUser","currentUserId","currentUser","existingSchedule","fetchError","cleanedUpdates","updateData","limit","today","tomorrow","allSchedules","schedules","stats","schedule","scheduleService","propertyService","realService","useProperties","properties","setProperties","fetchProperties","useCallback","createNewProperty","newProperty","updateExistingProperty","updatedProperty","deleteExistingProperty","usePropertyStats","setStats","StatCard","change","Icon","color","ScheduleSummary","emptyMessage","onViewAll","categoryInfo","MapPin","Tag","CalendarIcon","formatTime","dateString","allDay","formatDate","truncateTitle","maxLength","ChevronRight","categoryData","Clock","extractNeighborhood","address","parts","dong","part","gu","formatPrice","transaction_type","price","deposit","monthly_rent","formatMoney","depositStr","rentStr","amount","eok","man","formatArea","area","pyeong","PropertyCard","neighborhood","DollarSign","useMobileDetection","detection","setDetection","detectMobile","width","height","isMobileWidth","isMobileUA","isTouchDevice","isPortraitOrientation","mediaQueryMatch","isHighDPR","isSmallScreen","isChromeAndroid","isExplicitMobile","mobileScore","sum","finalIsMobile","detectionDetails","useIsMobile","isMobile","PropertyDetailModal","onEdit","onDelete","formatRooms","rooms","handleEditClick","handleDeleteClick","Edit","Trash2","Car","ChevronUp","PROPERTY_TYPES","TRANSACTION_TYPES","PROPERTY_STATUS","PropertyEditForm","onSubmit","setErrors","isSubmitting","setIsSubmitting","validateForm","newErrors","errorMessage","type","Save","sendInvitationEmail","getTeamMembers","members","getTeamInvitations","invitations","inviterIds","inv","inviters","inviterMap","inviter","inviteTeamMember","invitationData","existingMember","existingInvitation","invitation","inviteError","emailError","addExistingMember","memberData","targetUser","targetError","updatedMember","updateError","updateMemberRole","memberId","newRole","removeMember","memberToRemove","memberError","tenantError","cancelInvitation","invitationId","searchUsers","users","updateMemberInfo","updateMemberStatus","newStatus","getTeamActivityLogs","logs","userIds","log","userMap","DashboardPage","statsLoading","statsError","refreshProperties","teamMemberCount","setTeamMemberCount","teamLoading","setTeamLoading","todaySchedules","setTodaySchedules","upcomingSchedules","setUpcomingSchedules","schedulesLoading","setSchedulesLoading","selectedProperty","setSelectedProperty","isModalOpen","setIsModalOpen","editFormOpen","setEditFormOpen","editLoading","setEditLoading","editingProperty","setEditingProperty","teamService.getTeamMembers","todayData","upcomingData","handleViewAllSchedules","handlePropertyClick","handleCloseModal","handleEditProperty","handleOpenEditForm","handleConfirmDelete","dashboardStats","TrendingUp","recentProperties","stat","ROOM_OPTIONS","PropertyCreateForm","propertyTypeOptions","transactionTypeOptions","statusOptions","isValid","FileText","PropertiesPageNew","searchTerm","setSearchTerm","debouncedSearchTerm","setDebouncedSearchTerm","isComposing","setIsComposing","selectedTransactionType","setSelectedTransactionType","selectedPropertyType","setSelectedPropertyType","selectedPropertyStatus","setSelectedPropertyStatus","viewMode","setViewMode","deleteConfirmOpen","setDeleteConfirmOpen","createFormOpen","setCreateFormOpen","createLoading","setCreateLoading","detailModalProperty","setDetailModalProperty","timer","sortedProperties","propertyStatusOptions","getSearchPlaceholder","activeFilters","getActiveFilters","handleDeleteProperty","resetFilters","handleCreateProperty","Search","filter","Grid","AlignLeft","PropertyList","onView","ScheduleForm","initialData","selectedDate","authLoading","startTime","endTime","currentHour","currentMinute","startDateTime","endDateTime","_e","handleChange","categoryOptions","priorityOptions","ScheduleDetailModal","isDeleting","setIsDeleting","priorityInfo","formatDateTime","handleDelete","priorityData","statusData","SchedulePage","currentDate","setCurrentDate","view","setView","setSelectedDate","showCreateModal","setShowCreateModal","showFilterModal","setShowFilterModal","showDetailModal","setShowDetailModal","selectedSchedule","setSelectedSchedule","editingSchedule","setEditingSchedule","setSchedules","selectedCategory","setSelectedCategory","categoryColors","categoryLabels","handleScheduleSubmit","handleScheduleClick","handleScheduleEdit","handleScheduleDelete","scheduleId","handleCloseCreateModal","renderMonthCalendar","year","month","firstDay","lastDay","days","weeks","day","week","weekIndex","dayIndex","isToday","isCurrentMonth","daySchedules","renderAgendaView","filteredSchedules","Filter","newDate","ChevronLeft","Grid3X3","List","ROLE_LABELS","STATUS_LABELS","INVITATION_STATUS_LABELS","MemberEditModal","member","onUpdate","onRoleChange","onStatusChange","currentUserRole","canEdit","activeTab","setActiveTab","editData","setEditData","handleInfoUpdate","handleRoleChange","handleStatusChange","getRoleIcon","role","Crown","Shield","canChangeRole","targetRole","canChangeStatus","Phone","ACTION_LABELS","TeamActivityLog","setLogs","expandedLog","setExpandedLog","loadActivityLogs","formatTimeAgo","diffInSeconds","getActionDescription","baseAction","Activity","InviteLinkModal","inviteData","copied","setCopied","handleCopyLink","handleEmailShare","subject","getRoleLabel","body","mailtoUrl","Check","Copy","TeamManagement","setMembers","setInvitations","showInviteModal","setShowInviteModal","inviteType","setInviteType","inviteEmail","setInviteEmail","inviteRole","setInviteRole","inviteMessage","setInviteMessage","searchQuery","setSearchQuery","searchResults","setSearchResults","selectedUser","setSelectedUser","memberRole","setMemberRole","actionLoading","setActionLoading","selectedMember","setSelectedMember","showEditModal","setShowEditModal","showActivityLog","setShowActivityLog","memberMenuOpen","setMemberMenuOpen","showInviteLinkModal","setShowInviteLinkModal","inviteLinkData","setInviteLinkData","showDeleteConfirm","setShowDeleteConfirm","memberToDelete","setMemberToDelete","loadTeamData","membersData","invitationsData","teamService.getTeamInvitations","handleEmailInvite","teamService.inviteTeamMember","resetInviteForm","handleAddExistingMember","teamService.addExistingMember","resetAddMemberForm","handleSearchUsers","results","teamService.searchUsers","handleRemoveMemberClick","memberName","handleConfirmRemoveMember","teamService.removeMember","handleCancelInvitation","teamService.cancelInvitation","handleEditMember","handleMemberInfoUpdate","teamService.updateMemberInfo","handleMemberRoleChange","teamService.updateMemberRole","handleMemberStatusChange","teamService.updateMemberStatus","canManageTeam","UserPlus","MoreVertical","TeamPage","importProperties","createdBy","importedProperties","validationError","validatePropertyData","formatAsCSV","includeFields","fieldLabels","headers","rows","formatFieldValue","row","formatAsJSON","exportData","exportItem","fieldId","requiredFields","numericFields","validPropertyTypes","validTransactionTypes","validateFileSize","file","maxSizeMB","maxSizeBytes","validateFileFormat","allowedTypes","allowedExtensions","ext","generateTemplateCSV","cell","REQUIRED_FIELDS","FIELD_MAPPING","DataImportModal","onImportComplete","tenantLoading","tenantContext","fileInputRef","step","setStep","setFile","parsedData","setParsedData","importResult","setImportResult","handleFileSelect","selectedFile","parseFile","parseCSV","parseTSV","dataRows","parsed","parsePropertyRow","lines","line","inQuotes","rowNumber","header","mappedField","numValue","boolValue","isValidDate","handleImport","validProperties","downloadTemplate","__vitePreload","dataService","csvContent","blob","link","resetModal","handleClose","renderContent","Upload","invalidProperties","DEFAULT_EXPORT_OPTIONS","AVAILABLE_FIELDS","DataExportModal","exportOptions","setExportOptions","updateExportOptions","getFilteredProperties","createdAt","lastMonth","downloadFile","content","filename","mimeType","handleExport","filteredProperties","timestamp","format","SettingsPage","resetModalOpen","setResetModalOpen","resetLoading","setResetLoading","importModalOpen","setImportModalOpen","exportModalOpen","setExportModalOpen","tabs","CreditCard","Palette","Bell","planOptions","handleResetSampleData","deleteError","handleImportComplete","renderTabContent","RefreshCw","plan","tab","UserGuidePage","activeSection","setActiveSection","sections","Building2","renderSectionContent","MonitorIcon","section","InvitationAccept","setInvitation","processing","setProcessing","token","loadInvitation","tenantResponse","inviterResponse","invitationWithDetails","handleAccept","handleDecline","App","TenantRoutes","ReactDOM"],"ignoreList":[0,1,2,3,4,5,10,11,12],"sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/react-dom/client.js","../../node_modules/@remix-run/router/dist/router.js","../../node_modules/react-router/dist/index.js","../../node_modules/react-router-dom/dist/index.js","../../src/services/supabase.ts","../../src/utils/logger.ts","../../src/contexts/AuthContext.tsx","../../src/contexts/TenantContext.tsx","../../node_modules/clsx/dist/clsx.mjs","../../node_modules/class-variance-authority/dist/index.mjs","../../node_modules/tailwind-merge/dist/bundle-mjs.mjs","../../src/utils/cn.ts","../../src/components/ui/Button.tsx","../../src/components/ui/Input.tsx","../../src/components/ui/Select.tsx","../../src/components/ui/Modal.tsx","../../src/components/ui/Card.tsx","../../src/components/ui/Badge.tsx","../../src/components/ui/Loading.tsx","../../src/components/ui/InstallPrompt.tsx","../../src/components/auth/SignUpForm.tsx","../../src/components/auth/LoginPage.tsx","../../src/components/auth/AuthGuard.tsx","../../src/components/layout/UserMenu.tsx","../../src/components/layout/AppLayout.tsx","../../src/components/common/ErrorBoundary.tsx","../../src/constants/propertyConstants.ts","../../src/utils/propertyParsing.ts","../../src/services/propertyService.ts","../../src/lib/supabase.ts","../../src/utils/serviceError.ts","../../src/services/scheduleService.ts","../../src/services/index.ts","../../src/hooks/useProperties.ts","../../src/components/dashboard/StatCard.tsx","../../src/components/dashboard/ScheduleSummary.tsx","../../src/utils/propertyUtils.ts","../../src/components/property/PropertyCard.tsx","../../src/hooks/useMobileDetection.ts","../../src/components/property/PropertyDetailModal.tsx","../../src/components/forms/PropertyEditForm.tsx","../../src/services/teamService.ts","../../src/pages/DashboardPage.tsx","../../src/components/forms/PropertyCreateForm.tsx","../../src/pages/PropertiesPageNew.tsx","../../src/components/schedule/ScheduleForm.tsx","../../src/components/schedule/ScheduleDetailModal.tsx","../../src/pages/SchedulePage.tsx","../../src/types/team.ts","../../src/components/team/MemberEditModal.tsx","../../src/components/team/TeamActivityLog.tsx","../../src/components/team/InviteLinkModal.tsx","../../src/components/team/TeamManagement.tsx","../../src/pages/TeamPage.tsx","../../src/services/dataService.ts","../../src/components/data/DataImportModal.tsx","../../src/components/data/DataExportModal.tsx","../../src/pages/SettingsPage.tsx","../../src/pages/UserGuidePage.tsx","../../src/components/team/InvitationAccept.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","/**\n * @remix-run/router v1.23.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Actions represent the type of change to a location value.\n */\nvar Action;\n(function (Action) {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Action[\"Pop\"] = \"POP\";\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Action[\"Push\"] = \"PUSH\";\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Action[\"Replace\"] = \"REPLACE\";\n})(Action || (Action = {}));\nconst PopStateEventType = \"popstate\";\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nfunction createMemoryHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  let {\n    initialEntries = [\"/\"],\n    initialIndex,\n    v5Compat = false\n  } = options;\n  let entries; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) => createMemoryLocation(entry, typeof entry === \"string\" ? null : entry.state, index === 0 ? \"default\" : undefined));\n  let index = clampIndex(initialIndex == null ? entries.length - 1 : initialIndex);\n  let action = Action.Pop;\n  let listener = null;\n  function clampIndex(n) {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation() {\n    return entries[index];\n  }\n  function createMemoryLocation(to, state, key) {\n    if (state === void 0) {\n      state = null;\n    }\n    let location = createLocation(entries ? getCurrentLocation().pathname : \"/\", to, state, key);\n    warning(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in memory history: \" + JSON.stringify(to));\n    return location;\n  }\n  function createHref(to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  let history = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation(to) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\"\n      };\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 1\n        });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 0\n        });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta\n        });\n      }\n    },\n    listen(fn) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    }\n  };\n  return history;\n}\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nfunction createBrowserHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  function createBrowserLocation(window, globalHistory) {\n    let {\n      pathname,\n      search,\n      hash\n    } = window.location;\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    },\n    // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n  function createBrowserHref(window, to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  return getUrlBasedHistory(createBrowserLocation, createBrowserHref, null, options);\n}\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nfunction createHashHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  function createHashLocation(window, globalHistory) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\"\n    } = parsePath(window.location.hash.substr(1));\n    // Hash URL should always have a leading / just like window.location.pathname\n    // does, so if an app ends up at a route like /#something then we add a\n    // leading slash so all of our path-matching behaves the same as if it would\n    // in a browser router.  This is particularly important when there exists a\n    // root splat route (<Route path=\"*\">) since that matches internally against\n    // \"/*\" and we'd expect /#something to 404 in a hash router app.\n    if (!pathname.startsWith(\"/\") && !pathname.startsWith(\".\")) {\n      pathname = \"/\" + pathname;\n    }\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    },\n    // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n  function createHashHref(window, to) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n  function validateHashLocation(location, to) {\n    warning(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in hash history.push(\" + JSON.stringify(to) + \")\");\n  }\n  return getUrlBasedHistory(createHashLocation, createHashHref, validateHashLocation, options);\n}\nfunction invariant(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience, so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location, index) {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index\n  };\n}\n/**\n * Creates a Location object with a unique key from the given Path\n */\nfunction createLocation(current, to, state, key) {\n  if (state === void 0) {\n    state = null;\n  }\n  let location = _extends({\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\"\n  }, typeof to === \"string\" ? parsePath(to) : to, {\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: to && to.key || key || createKey()\n  });\n  return location;\n}\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nfunction createPath(_ref) {\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\"\n  } = _ref;\n  if (search && search !== \"?\") pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\") pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nfunction parsePath(path) {\n  let parsedPath = {};\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n  return parsedPath;\n}\nfunction getUrlBasedHistory(getLocation, createHref, validateLocation, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  let {\n    window = document.defaultView,\n    v5Compat = false\n  } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener = null;\n  let index = getIndex();\n  // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState(_extends({}, globalHistory.state, {\n      idx: index\n    }), \"\");\n  }\n  function getIndex() {\n    let state = globalHistory.state || {\n      idx: null\n    };\n    return state.idx;\n  }\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({\n        action,\n        location: history.location,\n        delta\n      });\n    }\n  }\n  function push(to, state) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // If the exception is because `state` can't be serialized, let that throw\n      // outwards just like a replace call would so the dev knows the cause\n      // https://html.spec.whatwg.org/multipage/nav-history-apis.html#shared-history-push/replace-state-steps\n      // https://html.spec.whatwg.org/multipage/structured-data.html#structuredserializeinternal\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 1\n      });\n    }\n  }\n  function replace(to, state) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 0\n      });\n    }\n  }\n  function createURL(to) {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base = window.location.origin !== \"null\" ? window.location.origin : window.location.href;\n    let href = typeof to === \"string\" ? to : createPath(to);\n    // Treating this as a full URL will strip any trailing spaces so we need to\n    // pre-encode them since they might be part of a matching splat param from\n    // an ancestor route\n    href = href.replace(/ $/, \"%20\");\n    invariant(base, \"No window.location.(origin|href) available to create URL for href: \" + href);\n    return new URL(href, base);\n  }\n  let history = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    }\n  };\n  return history;\n}\n//#endregion\n\nvar ResultType;\n(function (ResultType) {\n  ResultType[\"data\"] = \"data\";\n  ResultType[\"deferred\"] = \"deferred\";\n  ResultType[\"redirect\"] = \"redirect\";\n  ResultType[\"error\"] = \"error\";\n})(ResultType || (ResultType = {}));\nconst immutableRouteKeys = new Set([\"lazy\", \"caseSensitive\", \"path\", \"id\", \"index\", \"children\"]);\nfunction isIndexRoute(route) {\n  return route.index === true;\n}\n// Walk the route tree generating unique IDs where necessary, so we are working\n// solely with AgnosticDataRouteObject's within the Router\nfunction convertRoutesToDataRoutes(routes, mapRouteProperties, parentPath, manifest) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n  if (manifest === void 0) {\n    manifest = {};\n  }\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, String(index)];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(route.index !== true || !route.children, \"Cannot specify children on an index route\");\n    invariant(!manifest[id], \"Found a route id collision on id \\\"\" + id + \"\\\".  Route \" + \"id's must be globally unique within Data Router usages\");\n    if (isIndexRoute(route)) {\n      let indexRoute = _extends({}, route, mapRouteProperties(route), {\n        id\n      });\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute = _extends({}, route, mapRouteProperties(route), {\n        id,\n        children: undefined\n      });\n      manifest[id] = pathOrLayoutRoute;\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(route.children, mapRouteProperties, treePath, manifest);\n      }\n      return pathOrLayoutRoute;\n    }\n  });\n}\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/v6/utils/match-routes\n */\nfunction matchRoutes(routes, locationArg, basename) {\n  if (basename === void 0) {\n    basename = \"/\";\n  }\n  return matchRoutesImpl(routes, locationArg, basename, false);\n}\nfunction matchRoutesImpl(routes, locationArg, basename, allowPartial) {\n  let location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n  if (pathname == null) {\n    return null;\n  }\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    // Incoming pathnames are generally encoded from either window.location\n    // or from router.navigate, but we want to match against the unencoded\n    // paths in the route definitions.  Memory router locations won't be\n    // encoded here but there also shouldn't be anything to decode so this\n    // should be a safe operation.  This avoids needing matchRoutes to be\n    // history-aware.\n    let decoded = decodePath(pathname);\n    matches = matchRouteBranch(branches[i], decoded, allowPartial);\n  }\n  return matches;\n}\nfunction convertRouteMatchToUiMatch(match, loaderData) {\n  let {\n    route,\n    pathname,\n    params\n  } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle\n  };\n}\nfunction flattenRoutes(routes, branches, parentsMeta, parentPath) {\n  if (branches === void 0) {\n    branches = [];\n  }\n  if (parentsMeta === void 0) {\n    parentsMeta = [];\n  }\n  if (parentPath === void 0) {\n    parentPath = \"\";\n  }\n  let flattenRoute = (route, index, relativePath) => {\n    let meta = {\n      relativePath: relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route\n    };\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(meta.relativePath.startsWith(parentPath), \"Absolute route path \\\"\" + meta.relativePath + \"\\\" nested under path \" + (\"\\\"\" + parentPath + \"\\\" is not valid. An absolute child route path \") + \"must start with the combined path of all its parent routes.\");\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n    // Add the children before adding this route to the array, so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n      // Our types know better, but runtime JS may not!\n      // @ts-expect-error\n      route.index !== true, \"Index routes must not have child routes. Please remove \" + (\"all child routes from route path \\\"\" + path + \"\\\".\"));\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta\n    });\n  };\n  routes.forEach((route, index) => {\n    var _route$path;\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !((_route$path = route.path) != null && _route$path.includes(\"?\"))) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n  return branches;\n}\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\nfunction explodeOptionalSegments(path) {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n  let [first, ...rest] = segments;\n  // Optional path segments are denoted by a trailing `?`\n  let isOptional = first.endsWith(\"?\");\n  // Compute the corresponding required segment: `foo?` -> `foo`\n  let required = first.replace(/\\?$/, \"\");\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n  let result = [];\n  // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children, so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explode _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n  result.push(...restExploded.map(subpath => subpath === \"\" ? required : [required, subpath].join(\"/\")));\n  // Then, if this is an optional value, add all child versions without\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n  // for absolute paths, ensure `/` instead of empty segment\n  return result.map(exploded => path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded);\n}\nfunction rankRouteBranches(branches) {\n  branches.sort((a, b) => a.score !== b.score ? b.score - a.score // Higher score first\n  : compareIndexes(a.routesMeta.map(meta => meta.childrenIndex), b.routesMeta.map(meta => meta.childrenIndex)));\n}\nconst paramRe = /^:[\\w-]+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = s => s === \"*\";\nfunction computeScore(path, index) {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n  return segments.filter(s => !isSplat(s)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue), initialScore);\n}\nfunction compareIndexes(a, b) {\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n  return siblings ?\n  // If two routes are siblings, we should try to match the earlier sibling\n  // first. This allows people to have fine-grained control over the matching\n  // behavior by simply putting routes with identical paths in the order they\n  // want them tried.\n  a[a.length - 1] - b[b.length - 1] :\n  // Otherwise, it doesn't really make sense to rank non-siblings by index,\n  // so they sort equally.\n  0;\n}\nfunction matchRouteBranch(branch, pathname, allowPartial) {\n  if (allowPartial === void 0) {\n    allowPartial = false;\n  }\n  let {\n    routesMeta\n  } = branch;\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath({\n      path: meta.relativePath,\n      caseSensitive: meta.caseSensitive,\n      end\n    }, remainingPathname);\n    let route = meta.route;\n    if (!match && end && allowPartial && !routesMeta[routesMeta.length - 1].route.index) {\n      match = matchPath({\n        path: meta.relativePath,\n        caseSensitive: meta.caseSensitive,\n        end: false\n      }, remainingPathname);\n    }\n    if (!match) {\n      return null;\n    }\n    Object.assign(matchedParams, match.params);\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(joinPaths([matchedPathname, match.pathnameBase])),\n      route\n    });\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n  return matches;\n}\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/v6/utils/generate-path\n */\nfunction generatePath(originalPath, params) {\n  if (params === void 0) {\n    params = {};\n  }\n  let path = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(false, \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n    path = path.replace(/\\*$/, \"/*\");\n  }\n  // ensure `/` is added at the beginning if the path is absolute\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n  const stringify = p => p == null ? \"\" : typeof p === \"string\" ? p : String(p);\n  const segments = path.split(/\\/+/).map((segment, index, array) => {\n    const isLastSegment = index === array.length - 1;\n    // only apply the splat if it's the last segment\n    if (isLastSegment && segment === \"*\") {\n      const star = \"*\";\n      // Apply the splat\n      return stringify(params[star]);\n    }\n    const keyMatch = segment.match(/^:([\\w-]+)(\\??)$/);\n    if (keyMatch) {\n      const [, key, optional] = keyMatch;\n      let param = params[key];\n      invariant(optional === \"?\" || param != null, \"Missing \\\":\" + key + \"\\\" param\");\n      return stringify(param);\n    }\n    // Remove any optional markers from optional static segments\n    return segment.replace(/\\?$/g, \"\");\n  })\n  // Remove empty segments\n  .filter(segment => !!segment);\n  return prefix + segments.join(\"/\");\n}\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/v6/utils/match-path\n */\nfunction matchPath(pattern, pathname) {\n  if (typeof pattern === \"string\") {\n    pattern = {\n      path: pattern,\n      caseSensitive: false,\n      end: true\n    };\n  }\n  let [matcher, compiledParams] = compilePath(pattern.path, pattern.caseSensitive, pattern.end);\n  let match = pathname.match(matcher);\n  if (!match) return null;\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params = compiledParams.reduce((memo, _ref, index) => {\n    let {\n      paramName,\n      isOptional\n    } = _ref;\n    // We need to compute the pathnameBase here using the raw splat value\n    // instead of using params[\"*\"] later because it will be decoded then\n    if (paramName === \"*\") {\n      let splatValue = captureGroups[index] || \"\";\n      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\n    }\n    const value = captureGroups[index];\n    if (isOptional && !value) {\n      memo[paramName] = undefined;\n    } else {\n      memo[paramName] = (value || \"\").replace(/%2F/g, \"/\");\n    }\n    return memo;\n  }, {});\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern\n  };\n}\nfunction compilePath(path, caseSensitive, end) {\n  if (caseSensitive === void 0) {\n    caseSensitive = false;\n  }\n  if (end === void 0) {\n    end = true;\n  }\n  warning(path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"), \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n  let params = [];\n  let regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n  .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n  .replace(/[\\\\.*+^${}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n  .replace(/\\/:([\\w-]+)(\\?)?/g, (_, paramName, isOptional) => {\n    params.push({\n      paramName,\n      isOptional: isOptional != null\n    });\n    return isOptional ? \"/?([^\\\\/]+)?\" : \"/([^\\\\/]+)\";\n  });\n  if (path.endsWith(\"*\")) {\n    params.push({\n      paramName: \"*\"\n    });\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" // Already matched the initial /, just match the rest\n    : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex, so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else ;\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n  return [matcher, params];\n}\nfunction decodePath(value) {\n  try {\n    return value.split(\"/\").map(v => decodeURIComponent(v).replace(/\\//g, \"%2F\")).join(\"/\");\n  } catch (error) {\n    warning(false, \"The URL path \\\"\" + value + \"\\\" could not be decoded because it is is a \" + \"malformed URL segment. This is probably due to a bad percent \" + (\"encoding (\" + error + \").\"));\n    return value;\n  }\n}\n/**\n * @private\n */\nfunction stripBasename(pathname, basename) {\n  if (basename === \"/\") return pathname;\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\") ? basename.length - 1 : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n  return pathname.slice(startIndex) || \"/\";\n}\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/v6/utils/resolve-path\n */\nfunction resolvePath(to, fromPathname) {\n  if (fromPathname === void 0) {\n    fromPathname = \"/\";\n  }\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\"\n  } = typeof to === \"string\" ? parsePath(to) : to;\n  let pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash)\n  };\n}\nfunction resolvePathname(relativePath, fromPathname) {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n  relativeSegments.forEach(segment => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\nfunction getInvalidPathError(char, field, dest, path) {\n  return \"Cannot include a '\" + char + \"' character in a manually specified \" + (\"`to.\" + field + \"` field [\" + JSON.stringify(path) + \"].  Please separate it out to the \") + (\"`to.\" + dest + \"` field. Alternatively you may provide the full path as \") + \"a string in <Link to=\\\"...\\\"> and the router will parse it for you.\";\n}\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nfunction getPathContributingMatches(matches) {\n  return matches.filter((match, index) => index === 0 || match.route.path && match.route.path.length > 0);\n}\n// Return the array of pathnames for the current route matches - used to\n// generate the routePathnames input for resolveTo()\nfunction getResolveToMatches(matches, v7_relativeSplatPath) {\n  let pathMatches = getPathContributingMatches(matches);\n  // When v7_relativeSplatPath is enabled, use the full pathname for the leaf\n  // match so we include splat values for \".\" links.  See:\n  // https://github.com/remix-run/react-router/issues/11052#issuecomment-1836589329\n  if (v7_relativeSplatPath) {\n    return pathMatches.map((match, idx) => idx === pathMatches.length - 1 ? match.pathname : match.pathnameBase);\n  }\n  return pathMatches.map(match => match.pathnameBase);\n}\n/**\n * @private\n */\nfunction resolveTo(toArg, routePathnames, locationPathname, isPathRelative) {\n  if (isPathRelative === void 0) {\n    isPathRelative = false;\n  }\n  let to;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = _extends({}, toArg);\n    invariant(!to.pathname || !to.pathname.includes(\"?\"), getInvalidPathError(\"?\", \"pathname\", \"search\", to));\n    invariant(!to.pathname || !to.pathname.includes(\"#\"), getInvalidPathError(\"#\", \"pathname\", \"hash\", to));\n    invariant(!to.search || !to.search.includes(\"#\"), getInvalidPathError(\"#\", \"search\", \"hash\", to));\n  }\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n  let from;\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n    // With relative=\"route\" (the default), each leading .. segment means\n    // \"go up one route\" instead of \"go up one URL segment\".  This is a key\n    // difference from how <a href> works and a major reason we call this a\n    // \"to\" value instead of a \"href\".\n    if (!isPathRelative && toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n      to.pathname = toSegments.join(\"/\");\n    }\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n  let path = resolvePath(to, from);\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash = toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (!path.pathname.endsWith(\"/\") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {\n    path.pathname += \"/\";\n  }\n  return path;\n}\n/**\n * @private\n */\nfunction getToPathname(to) {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || to.pathname === \"\" ? \"/\" : typeof to === \"string\" ? parsePath(to).pathname : to.pathname;\n}\n/**\n * @private\n */\nconst joinPaths = paths => paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n/**\n * @private\n */\nconst normalizePathname = pathname => pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n/**\n * @private\n */\nconst normalizeSearch = search => !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\n/**\n * @private\n */\nconst normalizeHash = hash => !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n *\n * @deprecated The `json` method is deprecated in favor of returning raw objects.\n * This method will be removed in v7.\n */\nconst json = function json(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n  return new Response(JSON.stringify(data), _extends({}, responseInit, {\n    headers\n  }));\n};\nclass DataWithResponseInit {\n  constructor(data, init) {\n    this.type = \"DataWithResponseInit\";\n    this.data = data;\n    this.init = init || null;\n  }\n}\n/**\n * Create \"responses\" that contain `status`/`headers` without forcing\n * serialization into an actual `Response` - used by Remix single fetch\n */\nfunction data(data, init) {\n  return new DataWithResponseInit(data, typeof init === \"number\" ? {\n    status: init\n  } : init);\n}\nclass AbortedDeferredError extends Error {}\nclass DeferredData {\n  constructor(data, responseInit) {\n    this.pendingKeysSet = new Set();\n    this.subscribers = new Set();\n    this.deferredKeys = [];\n    invariant(data && typeof data === \"object\" && !Array.isArray(data), \"defer() only accepts plain objects\");\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject;\n    this.abortPromise = new Promise((_, r) => reject = r);\n    this.controller = new AbortController();\n    let onAbort = () => reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () => this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n    this.data = Object.entries(data).reduce((acc, _ref2) => {\n      let [key, value] = _ref2;\n      return Object.assign(acc, {\n        [key]: this.trackPromise(key, value)\n      });\n    }, {});\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n    this.init = responseInit;\n  }\n  trackPromise(key, value) {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key);\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise = Promise.race([value, this.abortPromise]).then(data => this.onSettle(promise, key, undefined, data), error => this.onSettle(promise, key, error));\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n    Object.defineProperty(promise, \"_tracked\", {\n      get: () => true\n    });\n    return promise;\n  }\n  onSettle(promise, key, error, data) {\n    if (this.controller.signal.aborted && error instanceof AbortedDeferredError) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      return Promise.reject(error);\n    }\n    this.pendingKeysSet.delete(key);\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n    // If the promise was resolved/rejected with undefined, we'll throw an error as you\n    // should always resolve with a value or null\n    if (error === undefined && data === undefined) {\n      let undefinedError = new Error(\"Deferred data for key \\\"\" + key + \"\\\" resolved/rejected with `undefined`, \" + \"you must resolve/reject with a value or `null`.\");\n      Object.defineProperty(promise, \"_error\", {\n        get: () => undefinedError\n      });\n      this.emit(false, key);\n      return Promise.reject(undefinedError);\n    }\n    if (data === undefined) {\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n    Object.defineProperty(promise, \"_data\", {\n      get: () => data\n    });\n    this.emit(false, key);\n    return data;\n  }\n  emit(aborted, settledKey) {\n    this.subscribers.forEach(subscriber => subscriber(aborted, settledKey));\n  }\n  subscribe(fn) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n  async resolveData(signal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise(resolve => {\n        this.subscribe(aborted => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n  get unwrappedData() {\n    invariant(this.data !== null && this.done, \"Can only unwrap data on initialized and settled deferreds\");\n    return Object.entries(this.data).reduce((acc, _ref3) => {\n      let [key, value] = _ref3;\n      return Object.assign(acc, {\n        [key]: unwrapTrackedPromise(value)\n      });\n    }, {});\n  }\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n}\nfunction isTrackedPromise(value) {\n  return value instanceof Promise && value._tracked === true;\n}\nfunction unwrapTrackedPromise(value) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\n/**\n * @deprecated The `defer` method is deprecated in favor of returning raw\n * objects. This method will be removed in v7.\n */\nconst defer = function defer(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  return new DeferredData(data, responseInit);\n};\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst redirect = function redirect(url, init) {\n  if (init === void 0) {\n    init = 302;\n  }\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = {\n      status: responseInit\n    };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n  return new Response(null, _extends({}, responseInit, {\n    headers\n  }));\n};\n/**\n * A redirect response that will force a document reload to the new location.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst redirectDocument = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Reload-Document\", \"true\");\n  return response;\n};\n/**\n * A redirect response that will perform a `history.replaceState` instead of a\n * `history.pushState` for client-side navigation redirects.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst replace = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Replace\", \"true\");\n  return response;\n};\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n *\n * We don't export the class for public use since it's an implementation\n * detail, but we export the interface above so folks can build their own\n * abstractions around instances via isRouteErrorResponse()\n */\nclass ErrorResponseImpl {\n  constructor(status, statusText, data, internal) {\n    if (internal === void 0) {\n      internal = false;\n    }\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n}\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\nfunction isRouteErrorResponse(error) {\n  return error != null && typeof error.status === \"number\" && typeof error.statusText === \"string\" && typeof error.internal === \"boolean\" && \"data\" in error;\n}\n\nconst validMutationMethodsArr = [\"post\", \"put\", \"patch\", \"delete\"];\nconst validMutationMethods = new Set(validMutationMethodsArr);\nconst validRequestMethodsArr = [\"get\", ...validMutationMethodsArr];\nconst validRequestMethods = new Set(validRequestMethodsArr);\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\nconst IDLE_NAVIGATION = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined\n};\nconst IDLE_FETCHER = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined\n};\nconst IDLE_BLOCKER = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined\n};\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nconst defaultMapRouteProperties = route => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary)\n});\nconst TRANSITIONS_STORAGE_KEY = \"remix-router-transitions\";\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a router and listen to history POP navigations\n */\nfunction createRouter(init) {\n  const routerWindow = init.window ? init.window : typeof window !== \"undefined\" ? window : undefined;\n  const isBrowser = typeof routerWindow !== \"undefined\" && typeof routerWindow.document !== \"undefined\" && typeof routerWindow.document.createElement !== \"undefined\";\n  const isServer = !isBrowser;\n  invariant(init.routes.length > 0, \"You must provide a non-empty routes array to createRouter\");\n  let mapRouteProperties;\n  if (init.mapRouteProperties) {\n    mapRouteProperties = init.mapRouteProperties;\n  } else if (init.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = init.detectErrorBoundary;\n    mapRouteProperties = route => ({\n      hasErrorBoundary: detectErrorBoundary(route)\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  // Routes keyed by ID\n  let manifest = {};\n  // Routes in tree format for matching\n  let dataRoutes = convertRoutesToDataRoutes(init.routes, mapRouteProperties, undefined, manifest);\n  let inFlightDataRoutes;\n  let basename = init.basename || \"/\";\n  let dataStrategyImpl = init.dataStrategy || defaultDataStrategy;\n  let patchRoutesOnNavigationImpl = init.patchRoutesOnNavigation;\n  // Config driven behavior flags\n  let future = _extends({\n    v7_fetcherPersist: false,\n    v7_normalizeFormMethod: false,\n    v7_partialHydration: false,\n    v7_prependBasename: false,\n    v7_relativeSplatPath: false,\n    v7_skipActionErrorRevalidation: false\n  }, init.future);\n  // Cleanup function for history\n  let unlistenHistory = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n  let initialScrollRestored = init.hydrationData != null;\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialMatchesIsFOW = false;\n  let initialErrors = null;\n  if (initialMatches == null && !patchRoutesOnNavigationImpl) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname\n    });\n    let {\n      matches,\n      route\n    } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = {\n      [route.id]: error\n    };\n  }\n  // In SPA apps, if the user provided a patchRoutesOnNavigation implementation and\n  // our initial match is a splat route, clear them out so we run through lazy\n  // discovery on hydration in case there's a more accurate lazy route match.\n  // In SSR apps (with `hydrationData`), we expect that the server will send\n  // up the proper matched routes so we don't want to run lazy discovery on\n  // initial hydration and want to hydrate into the splat route.\n  if (initialMatches && !init.hydrationData) {\n    let fogOfWar = checkFogOfWar(initialMatches, dataRoutes, init.history.location.pathname);\n    if (fogOfWar.active) {\n      initialMatches = null;\n    }\n  }\n  let initialized;\n  if (!initialMatches) {\n    initialized = false;\n    initialMatches = [];\n    // If partial hydration and fog of war is enabled, we will be running\n    // `patchRoutesOnNavigation` during hydration so include any partial matches as\n    // the initial matches so we can properly render `HydrateFallback`'s\n    if (future.v7_partialHydration) {\n      let fogOfWar = checkFogOfWar(null, dataRoutes, init.history.location.pathname);\n      if (fogOfWar.active && fogOfWar.matches) {\n        initialMatchesIsFOW = true;\n        initialMatches = fogOfWar.matches;\n      }\n    }\n  } else if (initialMatches.some(m => m.route.lazy)) {\n    // All initialMatches need to be loaded before we're ready.  If we have lazy\n    // functions around still then we'll need to run them in initialize()\n    initialized = false;\n  } else if (!initialMatches.some(m => m.route.loader)) {\n    // If we've got no loaders to run, then we're good to go\n    initialized = true;\n  } else if (future.v7_partialHydration) {\n    // If partial hydration is enabled, we're initialized so long as we were\n    // provided with hydrationData for every route with a loader, and no loaders\n    // were marked for explicit hydration\n    let loaderData = init.hydrationData ? init.hydrationData.loaderData : null;\n    let errors = init.hydrationData ? init.hydrationData.errors : null;\n    // If errors exist, don't consider routes below the boundary\n    if (errors) {\n      let idx = initialMatches.findIndex(m => errors[m.route.id] !== undefined);\n      initialized = initialMatches.slice(0, idx + 1).every(m => !shouldLoadRouteOnHydration(m.route, loaderData, errors));\n    } else {\n      initialized = initialMatches.every(m => !shouldLoadRouteOnHydration(m.route, loaderData, errors));\n    }\n  } else {\n    // Without partial hydration - we're initialized if we were provided any\n    // hydrationData - which is expected to be complete\n    initialized = init.hydrationData != null;\n  }\n  let router;\n  let state = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: init.hydrationData && init.hydrationData.loaderData || {},\n    actionData: init.hydrationData && init.hydrationData.actionData || null,\n    errors: init.hydrationData && init.hydrationData.errors || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map()\n  };\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction = Action.Pop;\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n  // AbortController for the active navigation\n  let pendingNavigationController;\n  // Should the current navigation enable document.startViewTransition?\n  let pendingViewTransitionEnabled = false;\n  // Store applied view transitions so we can apply them on POP\n  let appliedViewTransitions = new Map();\n  // Cleanup function for persisting applied transitions to sessionStorage\n  let removePageHideEventListener = null;\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidator()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes = [];\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads = new Set();\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map();\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map();\n  // Fetchers that triggered redirect navigations\n  let fetchRedirectIds = new Set();\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map();\n  // Ref-count mounted fetchers so we know when it's ok to clean them up\n  let activeFetchers = new Map();\n  // Fetchers that have requested a delete when using v7_fetcherPersist,\n  // they'll be officially removed after they return to idle\n  let deletedFetchers = new Set();\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map();\n  // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n  let blockerFunctions = new Map();\n  // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n  let unblockBlockerHistoryUpdate = undefined;\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(_ref => {\n      let {\n        action: historyAction,\n        location,\n        delta\n      } = _ref;\n      // Ignore this event if it was just us resetting the URL from a\n      // blocked POP navigation\n      if (unblockBlockerHistoryUpdate) {\n        unblockBlockerHistoryUpdate();\n        unblockBlockerHistoryUpdate = undefined;\n        return;\n      }\n      warning(blockerFunctions.size === 0 || delta != null, \"You are trying to use a blocker on a POP navigation to a location \" + \"that was not created by @remix-run/router. This will fail silently in \" + \"production. This can happen if you are navigating outside the router \" + \"via `window.history.pushState`/`window.location.hash` instead of using \" + \"router navigation APIs.  This can also happen if you are using \" + \"createHashRouter and the user manually changes the URL.\");\n      let blockerKey = shouldBlockNavigation({\n        currentLocation: state.location,\n        nextLocation: location,\n        historyAction\n      });\n      if (blockerKey && delta != null) {\n        // Restore the URL to match the current UI, but don't update router state\n        let nextHistoryUpdatePromise = new Promise(resolve => {\n          unblockBlockerHistoryUpdate = resolve;\n        });\n        init.history.go(delta * -1);\n        // Put the blocker into a blocked state\n        updateBlocker(blockerKey, {\n          state: \"blocked\",\n          location,\n          proceed() {\n            updateBlocker(blockerKey, {\n              state: \"proceeding\",\n              proceed: undefined,\n              reset: undefined,\n              location\n            });\n            // Re-do the same POP navigation we just blocked, after the url\n            // restoration is also complete.  See:\n            // https://github.com/remix-run/react-router/issues/11613\n            nextHistoryUpdatePromise.then(() => init.history.go(delta));\n          },\n          reset() {\n            let blockers = new Map(state.blockers);\n            blockers.set(blockerKey, IDLE_BLOCKER);\n            updateState({\n              blockers\n            });\n          }\n        });\n        return;\n      }\n      return startNavigation(historyAction, location);\n    });\n    if (isBrowser) {\n      // FIXME: This feels gross.  How can we cleanup the lines between\n      // scrollRestoration/appliedTransitions persistance?\n      restoreAppliedTransitions(routerWindow, appliedViewTransitions);\n      let _saveAppliedTransitions = () => persistAppliedTransitions(routerWindow, appliedViewTransitions);\n      routerWindow.addEventListener(\"pagehide\", _saveAppliedTransitions);\n      removePageHideEventListener = () => routerWindow.removeEventListener(\"pagehide\", _saveAppliedTransitions);\n    }\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    // Note we don't do any handling of lazy here.  For SPA's it'll get handled\n    // in the normal navigation flow.  For SSR it's expected that lazy modules are\n    // resolved prior to router creation since we can't go into a fallbackElement\n    // UI for SSR'd apps\n    if (!state.initialized) {\n      startNavigation(Action.Pop, state.location, {\n        initialHydration: true\n      });\n    }\n    return router;\n  }\n  // Clean up a router and it's side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    if (removePageHideEventListener) {\n      removePageHideEventListener();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n  // Subscribe to state updates for the router\n  function subscribe(fn) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n  // Update our state and notify the calling context of the change\n  function updateState(newState, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    state = _extends({}, state, newState);\n    // Prep fetcher cleanup so we can tell the UI which fetcher data entries\n    // can be removed\n    let completedFetchers = [];\n    let deletedFetchersKeys = [];\n    if (future.v7_fetcherPersist) {\n      state.fetchers.forEach((fetcher, key) => {\n        if (fetcher.state === \"idle\") {\n          if (deletedFetchers.has(key)) {\n            // Unmounted from the UI and can be totally removed\n            deletedFetchersKeys.push(key);\n          } else {\n            // Returned to idle but still mounted in the UI, so semi-remains for\n            // revalidations and such\n            completedFetchers.push(key);\n          }\n        }\n      });\n    }\n    // Remove any lingering deleted fetchers that have already been removed\n    // from state.fetchers\n    deletedFetchers.forEach(key => {\n      if (!state.fetchers.has(key) && !fetchControllers.has(key)) {\n        deletedFetchersKeys.push(key);\n      }\n    });\n    // Iterate over a local copy so that if flushSync is used and we end up\n    // removing and adding a new subscriber due to the useCallback dependencies,\n    // we don't get ourselves into a loop calling the new subscriber immediately\n    [...subscribers].forEach(subscriber => subscriber(state, {\n      deletedFetchers: deletedFetchersKeys,\n      viewTransitionOpts: opts.viewTransitionOpts,\n      flushSync: opts.flushSync === true\n    }));\n    // Remove idle fetchers from state since we only care about in-flight fetchers.\n    if (future.v7_fetcherPersist) {\n      completedFetchers.forEach(key => state.fetchers.delete(key));\n      deletedFetchersKeys.forEach(key => deleteFetcher(key));\n    } else {\n      // We already called deleteFetcher() on these, can remove them from this\n      // Set now that we've handed the keys off to the data layer\n      deletedFetchersKeys.forEach(key => deletedFetchers.delete(key));\n    }\n  }\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(location, newState, _temp) {\n    var _location$state, _location$state2;\n    let {\n      flushSync\n    } = _temp === void 0 ? {} : _temp;\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === \"loading\" && ((_location$state = location.state) == null ? void 0 : _location$state._isRedirect) !== true;\n    let actionData;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    }\n    // Always preserve any existing loaderData from re-used routes\n    let loaderData = newState.loaderData ? mergeLoaderData(state.loaderData, newState.loaderData, newState.matches || [], newState.errors) : state.loaderData;\n    // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n    // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n    let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && ((_location$state2 = location.state) == null ? void 0 : _location$state2._isRedirect) !== true;\n    // Commit any in-flight routes at the end of the HMR revalidation \"navigation\"\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = undefined;\n    }\n    if (isUninterruptedRevalidation) ; else if (pendingAction === Action.Pop) ; else if (pendingAction === Action.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === Action.Replace) {\n      init.history.replace(location, location.state);\n    }\n    let viewTransitionOpts;\n    // On POP, enable transitions if they were enabled on the original navigation\n    if (pendingAction === Action.Pop) {\n      // Forward takes precedence so they behave like the original navigation\n      let priorPaths = appliedViewTransitions.get(state.location.pathname);\n      if (priorPaths && priorPaths.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: state.location,\n          nextLocation: location\n        };\n      } else if (appliedViewTransitions.has(location.pathname)) {\n        // If we don't have a previous forward nav, assume we're popping back to\n        // the new location and enable if that location previously enabled\n        viewTransitionOpts = {\n          currentLocation: location,\n          nextLocation: state.location\n        };\n      }\n    } else if (pendingViewTransitionEnabled) {\n      // Store the applied transition on PUSH/REPLACE\n      let toPaths = appliedViewTransitions.get(state.location.pathname);\n      if (toPaths) {\n        toPaths.add(location.pathname);\n      } else {\n        toPaths = new Set([location.pathname]);\n        appliedViewTransitions.set(state.location.pathname, toPaths);\n      }\n      viewTransitionOpts = {\n        currentLocation: state.location,\n        nextLocation: location\n      };\n    }\n    updateState(_extends({}, newState, {\n      actionData,\n      loaderData,\n      historyAction: pendingAction,\n      location,\n      initialized: true,\n      navigation: IDLE_NAVIGATION,\n      revalidation: \"idle\",\n      restoreScrollPosition: getSavedScrollPosition(location, newState.matches || state.matches),\n      preventScrollReset,\n      blockers\n    }), {\n      viewTransitionOpts,\n      flushSync: flushSync === true\n    });\n    // Reset stateful navigation vars\n    pendingAction = Action.Pop;\n    pendingPreventScrollReset = false;\n    pendingViewTransitionEnabled = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n  }\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(to, opts) {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, to, future.v7_relativeSplatPath, opts == null ? void 0 : opts.fromRouteId, opts == null ? void 0 : opts.relative);\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, false, normalizedPath, opts);\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n    // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n    nextLocation = _extends({}, nextLocation, init.history.encodeLocation(nextLocation));\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n    let historyAction = Action.Push;\n    if (userReplace === true) {\n      historyAction = Action.Replace;\n    } else if (userReplace === false) ; else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = Action.Replace;\n    }\n    let preventScrollReset = opts && \"preventScrollReset\" in opts ? opts.preventScrollReset === true : undefined;\n    let flushSync = (opts && opts.flushSync) === true;\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction\n    });\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation\n          });\n          // Send the same navigation through\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey, IDLE_BLOCKER);\n          updateState({\n            blockers\n          });\n        }\n      });\n      return;\n    }\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n      enableViewTransition: opts && opts.viewTransition,\n      flushSync\n    });\n  }\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({\n      revalidation: \"loading\"\n    });\n    // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n    // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true\n      });\n      return;\n    }\n    // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(pendingAction || state.historyAction, state.navigation.location, {\n      overrideNavigation: state.navigation,\n      // Proxy through any rending view transition\n      enableViewTransition: pendingViewTransitionEnabled === true\n    });\n  }\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(historyAction, location, opts) {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true;\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = opts != null && opts.initialHydration && state.matches && state.matches.length > 0 && !initialMatchesIsFOW ?\n    // `matchRoutes()` has already been called if we're in here via `router.initialize()`\n    state.matches : matchRoutes(routesToUse, location, basename);\n    let flushSync = (opts && opts.flushSync) === true;\n    // Short circuit if it's only a hash change and not a revalidation or\n    // mutation submission.\n    //\n    // Ignore on initial page loads because since the initial hydration will always\n    // be \"same hash\".  For example, on /page#hash and submit a <Form method=\"post\">\n    // which will default to a navigation to /page\n    if (matches && state.initialized && !isRevalidationRequired && isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {\n      completeNavigation(location, {\n        matches\n      }, {\n        flushSync\n      });\n      return;\n    }\n    let fogOfWar = checkFogOfWar(matches, routesToUse, location.pathname);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let {\n        error,\n        notFoundMatches,\n        route\n      } = handleNavigational404(location.pathname);\n      completeNavigation(location, {\n        matches: notFoundMatches,\n        loaderData: {},\n        errors: {\n          [route.id]: error\n        }\n      }, {\n        flushSync\n      });\n      return;\n    }\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(init.history, location, pendingNavigationController.signal, opts && opts.submission);\n    let pendingActionResult;\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingActionResult = [findNearestBoundary(matches).route.id, {\n        type: ResultType.error,\n        error: opts.pendingError\n      }];\n    } else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {\n      // Call action if we received an action submission\n      let actionResult = await handleAction(request, location, opts.submission, matches, fogOfWar.active, {\n        replace: opts.replace,\n        flushSync\n      });\n      if (actionResult.shortCircuited) {\n        return;\n      }\n      // If we received a 404 from handleAction, it's because we couldn't lazily\n      // discover the destination route so we don't want to call loaders\n      if (actionResult.pendingActionResult) {\n        let [routeId, result] = actionResult.pendingActionResult;\n        if (isErrorResult(result) && isRouteErrorResponse(result.error) && result.error.status === 404) {\n          pendingNavigationController = null;\n          completeNavigation(location, {\n            matches: actionResult.matches,\n            loaderData: {},\n            errors: {\n              [routeId]: result.error\n            }\n          });\n          return;\n        }\n      }\n      matches = actionResult.matches || matches;\n      pendingActionResult = actionResult.pendingActionResult;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n      flushSync = false;\n      // No need to do fog of war matching again on loader execution\n      fogOfWar.active = false;\n      // Create a GET request for the loaders\n      request = createClientSideRequest(init.history, request.url, request.signal);\n    }\n    // Call loaders\n    let {\n      shortCircuited,\n      matches: updatedMatches,\n      loaderData,\n      errors\n    } = await handleLoaders(request, location, matches, fogOfWar.active, loadingNavigation, opts && opts.submission, opts && opts.fetcherSubmission, opts && opts.replace, opts && opts.initialHydration === true, flushSync, pendingActionResult);\n    if (shortCircuited) {\n      return;\n    }\n    // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n    completeNavigation(location, _extends({\n      matches: updatedMatches || matches\n    }, getActionDataForCommit(pendingActionResult), {\n      loaderData,\n      errors\n    }));\n  }\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(request, location, submission, matches, isFogOfWar, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    interruptActiveLoads();\n    // Put us in a submitting state\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({\n      navigation\n    }, {\n      flushSync: opts.flushSync === true\n    });\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(matches, location.pathname, request.signal);\n      if (discoverResult.type === \"aborted\") {\n        return {\n          shortCircuited: true\n        };\n      } else if (discoverResult.type === \"error\") {\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          pendingActionResult: [boundaryId, {\n            type: ResultType.error,\n            error: discoverResult.error\n          }]\n        };\n      } else if (!discoverResult.matches) {\n        let {\n          notFoundMatches,\n          error,\n          route\n        } = handleNavigational404(location.pathname);\n        return {\n          matches: notFoundMatches,\n          pendingActionResult: [route.id, {\n            type: ResultType.error,\n            error\n          }]\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    // Call our action and get the result\n    let result;\n    let actionMatch = getTargetMatch(matches, location);\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id\n        })\n      };\n    } else {\n      let results = await callDataStrategy(\"action\", state, request, [actionMatch], matches, null);\n      result = results[actionMatch.route.id];\n      if (request.signal.aborted) {\n        return {\n          shortCircuited: true\n        };\n      }\n    }\n    if (isRedirectResult(result)) {\n      let replace;\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        let location = normalizeRedirectLocation(result.response.headers.get(\"Location\"), new URL(request.url), basename);\n        replace = location === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(request, result, true, {\n        submission,\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    }\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      // By default, all submissions to the current location are REPLACE\n      // navigations, but if the action threw an error that'll be rendered in\n      // an errorElement, we fall back to PUSH so that the user can use the\n      // back button to get back to the pre-submission form location to try\n      // again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = Action.Push;\n      }\n      return {\n        matches,\n        pendingActionResult: [boundaryMatch.route.id, result]\n      };\n    }\n    return {\n      matches,\n      pendingActionResult: [actionMatch.route.id, result]\n    };\n  }\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(request, location, matches, isFogOfWar, overrideNavigation, submission, fetcherSubmission, replace, initialHydration, flushSync, pendingActionResult) {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation = overrideNavigation || getLoadingNavigation(location, submission);\n    // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n    let activeSubmission = submission || fetcherSubmission || getSubmissionFromNavigation(loadingNavigation);\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    // If we have partialHydration enabled, then don't update the state for the\n    // initial data load since it's not a \"navigation\"\n    let shouldUpdateNavigationState = !isUninterruptedRevalidation && (!future.v7_partialHydration || !initialHydration);\n    // When fog of war is enabled, we enter our `loading` state earlier so we\n    // can discover new routes during the `loading` state.  We skip this if\n    // we've already run actions since we would have done our matching already.\n    // If the children() function threw then, we want to proceed with the\n    // partial matches it discovered.\n    if (isFogOfWar) {\n      if (shouldUpdateNavigationState) {\n        let actionData = getUpdatedActionData(pendingActionResult);\n        updateState(_extends({\n          navigation: loadingNavigation\n        }, actionData !== undefined ? {\n          actionData\n        } : {}), {\n          flushSync\n        });\n      }\n      let discoverResult = await discoverRoutes(matches, location.pathname, request.signal);\n      if (discoverResult.type === \"aborted\") {\n        return {\n          shortCircuited: true\n        };\n      } else if (discoverResult.type === \"error\") {\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          loaderData: {},\n          errors: {\n            [boundaryId]: discoverResult.error\n          }\n        };\n      } else if (!discoverResult.matches) {\n        let {\n          error,\n          notFoundMatches,\n          route\n        } = handleNavigational404(location.pathname);\n        return {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error\n          }\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, activeSubmission, location, future.v7_partialHydration && initialHydration === true, future.v7_skipActionErrorRevalidation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionResult);\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(routeId => !(matches && matches.some(m => m.route.id === routeId)) || matchesToLoad && matchesToLoad.some(m => m.route.id === routeId));\n    pendingNavigationLoadId = ++incrementingLoadId;\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      let updatedFetchers = markFetchRedirectsDone();\n      completeNavigation(location, _extends({\n        matches,\n        loaderData: {},\n        // Commit pending error if we're short circuiting\n        errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? {\n          [pendingActionResult[0]]: pendingActionResult[1].error\n        } : null\n      }, getActionDataForCommit(pendingActionResult), updatedFetchers ? {\n        fetchers: new Map(state.fetchers)\n      } : {}), {\n        flushSync\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    if (shouldUpdateNavigationState) {\n      let updates = {};\n      if (!isFogOfWar) {\n        // Only update navigation/actionNData if we didn't already do it above\n        updates.navigation = loadingNavigation;\n        let actionData = getUpdatedActionData(pendingActionResult);\n        if (actionData !== undefined) {\n          updates.actionData = actionData;\n        }\n      }\n      if (revalidatingFetchers.length > 0) {\n        updates.fetchers = getUpdatedRevalidatingFetchers(revalidatingFetchers);\n      }\n      updateState(updates, {\n        flushSync\n      });\n    }\n    revalidatingFetchers.forEach(rf => {\n      abortFetcher(rf.key);\n      if (rf.controller) {\n        // Fetchers use an independent AbortController so that aborting a fetcher\n        // (via deleteFetcher) does not abort the triggering navigation that\n        // triggered the revalidation\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n    // Proxy navigation abort through to revalidation fetchers\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(f => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n    let {\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state, matches, matchesToLoad, revalidatingFetchers, request);\n    if (request.signal.aborted) {\n      return {\n        shortCircuited: true\n      };\n    }\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n    revalidatingFetchers.forEach(rf => fetchControllers.delete(rf.key));\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect(loaderResults);\n    if (redirect) {\n      await startRedirectNavigation(request, redirect.result, true, {\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    redirect = findRedirect(fetcherResults);\n    if (redirect) {\n      // If this redirect came from a fetcher make sure we mark it in\n      // fetchRedirectIds so it doesn't get revalidated on the next set of\n      // loader executions\n      fetchRedirectIds.add(redirect.key);\n      await startRedirectNavigation(request, redirect.result, true, {\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    // Process and commit output from loaders\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, matches, loaderResults, pendingActionResult, revalidatingFetchers, fetcherResults, activeDeferreds);\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe(aborted => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n    // Preserve SSR errors during partial hydration\n    if (future.v7_partialHydration && initialHydration && state.errors) {\n      errors = _extends({}, state.errors, errors);\n    }\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n    return _extends({\n      matches,\n      loaderData,\n      errors\n    }, shouldUpdateFetchers ? {\n      fetchers: new Map(state.fetchers)\n    } : {});\n  }\n  function getUpdatedActionData(pendingActionResult) {\n    if (pendingActionResult && !isErrorResult(pendingActionResult[1])) {\n      // This is cast to `any` currently because `RouteData`uses any and it\n      // would be a breaking change to use any.\n      // TODO: v7 - change `RouteData` to use `unknown` instead of `any`\n      return {\n        [pendingActionResult[0]]: pendingActionResult[1].data\n      };\n    } else if (state.actionData) {\n      if (Object.keys(state.actionData).length === 0) {\n        return null;\n      } else {\n        return state.actionData;\n      }\n    }\n  }\n  function getUpdatedRevalidatingFetchers(revalidatingFetchers) {\n    revalidatingFetchers.forEach(rf => {\n      let fetcher = state.fetchers.get(rf.key);\n      let revalidatingFetcher = getLoadingFetcher(undefined, fetcher ? fetcher.data : undefined);\n      state.fetchers.set(rf.key, revalidatingFetcher);\n    });\n    return new Map(state.fetchers);\n  }\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(key, routeId, href, opts) {\n    if (isServer) {\n      throw new Error(\"router.fetch() was called during the server render, but it shouldn't be. \" + \"You are likely calling a useFetcher() method in the body of your component. \" + \"Try moving it to a useEffect or a callback.\");\n    }\n    abortFetcher(key);\n    let flushSync = (opts && opts.flushSync) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, href, future.v7_relativeSplatPath, routeId, opts == null ? void 0 : opts.relative);\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n    let fogOfWar = checkFogOfWar(matches, routesToUse, normalizedPath);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n    if (!matches) {\n      setFetcherError(key, routeId, getInternalRouterError(404, {\n        pathname: normalizedPath\n      }), {\n        flushSync\n      });\n      return;\n    }\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, true, normalizedPath, opts);\n    if (error) {\n      setFetcherError(key, routeId, error, {\n        flushSync\n      });\n      return;\n    }\n    let match = getTargetMatch(matches, path);\n    let preventScrollReset = (opts && opts.preventScrollReset) === true;\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(key, routeId, path, match, matches, fogOfWar.active, flushSync, preventScrollReset, submission);\n      return;\n    }\n    // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, {\n      routeId,\n      path\n    });\n    handleFetcherLoader(key, routeId, path, match, matches, fogOfWar.active, flushSync, preventScrollReset, submission);\n  }\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(key, routeId, path, match, requestMatches, isFogOfWar, flushSync, preventScrollReset, submission) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n    function detectAndHandle405Error(m) {\n      if (!m.route.action && !m.route.lazy) {\n        let error = getInternalRouterError(405, {\n          method: submission.formMethod,\n          pathname: path,\n          routeId: routeId\n        });\n        setFetcherError(key, routeId, error, {\n          flushSync\n        });\n        return true;\n      }\n      return false;\n    }\n    if (!isFogOfWar && detectAndHandle405Error(match)) {\n      return;\n    }\n    // Put this fetcher into it's submitting state\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {\n      flushSync\n    });\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal, submission);\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(requestMatches, new URL(fetchRequest.url).pathname, fetchRequest.signal, key);\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, {\n          flushSync\n        });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(key, routeId, getInternalRouterError(404, {\n          pathname: path\n        }), {\n          flushSync\n        });\n        return;\n      } else {\n        requestMatches = discoverResult.matches;\n        match = getTargetMatch(requestMatches, path);\n        if (detectAndHandle405Error(match)) {\n          return;\n        }\n      }\n    }\n    // Call the action for the fetcher\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let actionResults = await callDataStrategy(\"action\", state, fetchRequest, [match], requestMatches, key);\n    let actionResult = actionResults[match.route.id];\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n    // When using v7_fetcherPersist, we don't want errors bubbling up to the UI\n    // or redirects processed for unmounted fetchers so we just revert them to\n    // idle\n    if (future.v7_fetcherPersist && deletedFetchers.has(key)) {\n      if (isRedirectResult(actionResult) || isErrorResult(actionResult)) {\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      }\n      // Let SuccessResult's fall through for revalidation\n    } else {\n      if (isRedirectResult(actionResult)) {\n        fetchControllers.delete(key);\n        if (pendingNavigationLoadId > originatingLoadId) {\n          // A new navigation was kicked off after our action started, so that\n          // should take precedence over this redirect navigation.  We already\n          // set isRevalidationRequired so all loaders for the new route should\n          // fire unless opted out via shouldRevalidate\n          updateFetcherState(key, getDoneFetcher(undefined));\n          return;\n        } else {\n          fetchRedirectIds.add(key);\n          updateFetcherState(key, getLoadingFetcher(submission));\n          return startRedirectNavigation(fetchRequest, actionResult, false, {\n            fetcherSubmission: submission,\n            preventScrollReset\n          });\n        }\n      }\n      // Process any non-redirect errors thrown\n      if (isErrorResult(actionResult)) {\n        setFetcherError(key, routeId, actionResult.error);\n        return;\n      }\n    }\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    }\n    // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(init.history, nextLocation, abortController.signal);\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches = state.navigation.state !== \"idle\" ? matchRoutes(routesToUse, state.navigation.location, basename) : state.matches;\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, submission, nextLocation, false, future.v7_skipActionErrorRevalidation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, [match.route.id, actionResult]);\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n    revalidatingFetchers.filter(rf => rf.key !== key).forEach(rf => {\n      let staleKey = rf.key;\n      let existingFetcher = state.fetchers.get(staleKey);\n      let revalidatingFetcher = getLoadingFetcher(undefined, existingFetcher ? existingFetcher.data : undefined);\n      state.fetchers.set(staleKey, revalidatingFetcher);\n      abortFetcher(staleKey);\n      if (rf.controller) {\n        fetchControllers.set(staleKey, rf.controller);\n      }\n    });\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(rf => abortFetcher(rf.key));\n    abortController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    let {\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state, matches, matchesToLoad, revalidatingFetchers, revalidationRequest);\n    if (abortController.signal.aborted) {\n      return;\n    }\n    abortController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach(r => fetchControllers.delete(r.key));\n    let redirect = findRedirect(loaderResults);\n    if (redirect) {\n      return startRedirectNavigation(revalidationRequest, redirect.result, false, {\n        preventScrollReset\n      });\n    }\n    redirect = findRedirect(fetcherResults);\n    if (redirect) {\n      // If this redirect came from a fetcher make sure we mark it in\n      // fetchRedirectIds so it doesn't get revalidated on the next set of\n      // loader executions\n      fetchRedirectIds.add(redirect.key);\n      return startRedirectNavigation(revalidationRequest, redirect.result, false, {\n        preventScrollReset\n      });\n    }\n    // Process and commit output from loaders\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, matches, loaderResults, undefined, revalidatingFetchers, fetcherResults, activeDeferreds);\n    // Since we let revalidations complete even if the submitting fetcher was\n    // deleted, only put it back to idle if it hasn't been deleted\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n    abortStaleFetchLoads(loadId);\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (state.navigation.state === \"loading\" && loadId > pendingNavigationLoadId) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers)\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(state.loaderData, loaderData, matches, errors),\n        fetchers: new Map(state.fetchers)\n      });\n      isRevalidationRequired = false;\n    }\n  }\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(key, routeId, path, match, matches, isFogOfWar, flushSync, preventScrollReset, submission) {\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getLoadingFetcher(submission, existingFetcher ? existingFetcher.data : undefined), {\n      flushSync\n    });\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal);\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(matches, new URL(fetchRequest.url).pathname, fetchRequest.signal, key);\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, {\n          flushSync\n        });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(key, routeId, getInternalRouterError(404, {\n          pathname: path\n        }), {\n          flushSync\n        });\n        return;\n      } else {\n        matches = discoverResult.matches;\n        match = getTargetMatch(matches, path);\n      }\n    }\n    // Call the loader for this fetcher route match\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let results = await callDataStrategy(\"loader\", state, fetchRequest, [match], matches, key);\n    let result = results[match.route.id];\n    // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result = (await resolveDeferredData(result, fetchRequest.signal, true)) || result;\n    }\n    // We can delete this so long as we weren't aborted by our our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n    // We don't want errors bubbling up or redirects followed for unmounted\n    // fetchers, so short circuit here if it was removed from the UI\n    if (deletedFetchers.has(key)) {\n      updateFetcherState(key, getDoneFetcher(undefined));\n      return;\n    }\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        // A new navigation was kicked off after our loader started, so that\n        // should take precedence over this redirect navigation\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(fetchRequest, result, false, {\n          preventScrollReset\n        });\n        return;\n      }\n    }\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      setFetcherError(key, routeId, result.error);\n      return;\n    }\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n    // Put the fetcher back into an idle state\n    updateFetcherState(key, getDoneFetcher(result.data));\n  }\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(request, redirect, isNavigation, _temp2) {\n    let {\n      submission,\n      fetcherSubmission,\n      preventScrollReset,\n      replace\n    } = _temp2 === void 0 ? {} : _temp2;\n    if (redirect.response.headers.has(\"X-Remix-Revalidate\")) {\n      isRevalidationRequired = true;\n    }\n    let location = redirect.response.headers.get(\"Location\");\n    invariant(location, \"Expected a Location header on the redirect Response\");\n    location = normalizeRedirectLocation(location, new URL(request.url), basename);\n    let redirectLocation = createLocation(state.location, location, {\n      _isRedirect: true\n    });\n    if (isBrowser) {\n      let isDocumentReload = false;\n      if (redirect.response.headers.has(\"X-Remix-Reload-Document\")) {\n        // Hard reload if the response contained X-Remix-Reload-Document\n        isDocumentReload = true;\n      } else if (ABSOLUTE_URL_REGEX.test(location)) {\n        const url = init.history.createURL(location);\n        isDocumentReload =\n        // Hard reload if it's an absolute URL to a new origin\n        url.origin !== routerWindow.location.origin ||\n        // Hard reload if it's an absolute URL that does not match our basename\n        stripBasename(url.pathname, basename) == null;\n      }\n      if (isDocumentReload) {\n        if (replace) {\n          routerWindow.location.replace(location);\n        } else {\n          routerWindow.location.assign(location);\n        }\n        return;\n      }\n    }\n    // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n    let redirectHistoryAction = replace === true || redirect.response.headers.has(\"X-Remix-Replace\") ? Action.Replace : Action.Push;\n    // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n    let {\n      formMethod,\n      formAction,\n      formEncType\n    } = state.navigation;\n    if (!submission && !fetcherSubmission && formMethod && formAction && formEncType) {\n      submission = getSubmissionFromNavigation(state.navigation);\n    }\n    // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n    let activeSubmission = submission || fetcherSubmission;\n    if (redirectPreserveMethodStatusCodes.has(redirect.response.status) && activeSubmission && isMutationMethod(activeSubmission.formMethod)) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: _extends({}, activeSubmission, {\n          formAction: location\n        }),\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : undefined\n      });\n    } else {\n      // If we have a navigation submission, we will preserve it through the\n      // redirect navigation\n      let overrideNavigation = getLoadingNavigation(redirectLocation, submission);\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation,\n        // Send fetcher submissions through for shouldRevalidate\n        fetcherSubmission,\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : undefined\n      });\n    }\n  }\n  // Utility wrapper for calling dataStrategy client-side without having to\n  // pass around the manifest, mapRouteProperties, etc.\n  async function callDataStrategy(type, state, request, matchesToLoad, matches, fetcherKey) {\n    let results;\n    let dataResults = {};\n    try {\n      results = await callDataStrategyImpl(dataStrategyImpl, type, state, request, matchesToLoad, matches, fetcherKey, manifest, mapRouteProperties);\n    } catch (e) {\n      // If the outer dataStrategy method throws, just return the error for all\n      // matches - and it'll naturally bubble to the root\n      matchesToLoad.forEach(m => {\n        dataResults[m.route.id] = {\n          type: ResultType.error,\n          error: e\n        };\n      });\n      return dataResults;\n    }\n    for (let [routeId, result] of Object.entries(results)) {\n      if (isRedirectDataStrategyResultResult(result)) {\n        let response = result.result;\n        dataResults[routeId] = {\n          type: ResultType.redirect,\n          response: normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename, future.v7_relativeSplatPath)\n        };\n      } else {\n        dataResults[routeId] = await convertDataStrategyResultToDataResult(result);\n      }\n    }\n    return dataResults;\n  }\n  async function callLoadersAndMaybeResolveData(state, matches, matchesToLoad, fetchersToLoad, request) {\n    let currentMatches = state.matches;\n    // Kick off loaders and fetchers in parallel\n    let loaderResultsPromise = callDataStrategy(\"loader\", state, request, matchesToLoad, matches, null);\n    let fetcherResultsPromise = Promise.all(fetchersToLoad.map(async f => {\n      if (f.matches && f.match && f.controller) {\n        let results = await callDataStrategy(\"loader\", state, createClientSideRequest(init.history, f.path, f.controller.signal), [f.match], f.matches, f.key);\n        let result = results[f.match.route.id];\n        // Fetcher results are keyed by fetcher key from here on out, not routeId\n        return {\n          [f.key]: result\n        };\n      } else {\n        return Promise.resolve({\n          [f.key]: {\n            type: ResultType.error,\n            error: getInternalRouterError(404, {\n              pathname: f.path\n            })\n          }\n        });\n      }\n    }));\n    let loaderResults = await loaderResultsPromise;\n    let fetcherResults = (await fetcherResultsPromise).reduce((acc, r) => Object.assign(acc, r), {});\n    await Promise.all([resolveNavigationDeferredResults(matches, loaderResults, request.signal, currentMatches, state.loaderData), resolveFetcherDeferredResults(matches, fetcherResults, fetchersToLoad)]);\n    return {\n      loaderResults,\n      fetcherResults\n    };\n  }\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.add(key);\n      }\n      abortFetcher(key);\n    });\n  }\n  function updateFetcherState(key, fetcher, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    state.fetchers.set(key, fetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    }, {\n      flushSync: (opts && opts.flushSync) === true\n    });\n  }\n  function setFetcherError(key, routeId, error, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState({\n      errors: {\n        [boundaryMatch.route.id]: error\n      },\n      fetchers: new Map(state.fetchers)\n    }, {\n      flushSync: (opts && opts.flushSync) === true\n    });\n  }\n  function getFetcher(key) {\n    activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);\n    // If this fetcher was previously marked for deletion, unmark it since we\n    // have a new instance\n    if (deletedFetchers.has(key)) {\n      deletedFetchers.delete(key);\n    }\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n  function deleteFetcher(key) {\n    let fetcher = state.fetchers.get(key);\n    // Don't abort the controller if this is a deletion of a fetcher.submit()\n    // in it's loading phase since - we don't want to abort the corresponding\n    // revalidation and want them to complete and land\n    if (fetchControllers.has(key) && !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    // If we opted into the flag we can clear this now since we're calling\n    // deleteFetcher() at the end of updateState() and we've already handed the\n    // deleted fetcher keys off to the data layer.\n    // If not, we're eagerly calling deleteFetcher() and we need to keep this\n    // Set populated until the next updateState call, and we'll clear\n    // `deletedFetchers` then\n    if (future.v7_fetcherPersist) {\n      deletedFetchers.delete(key);\n    }\n    cancelledFetcherLoads.delete(key);\n    state.fetchers.delete(key);\n  }\n  function deleteFetcherAndUpdateState(key) {\n    let count = (activeFetchers.get(key) || 0) - 1;\n    if (count <= 0) {\n      activeFetchers.delete(key);\n      deletedFetchers.add(key);\n      if (!future.v7_fetcherPersist) {\n        deleteFetcher(key);\n      }\n    } else {\n      activeFetchers.set(key, count);\n    }\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n  }\n  function abortFetcher(key) {\n    let controller = fetchControllers.get(key);\n    if (controller) {\n      controller.abort();\n      fetchControllers.delete(key);\n    }\n  }\n  function markFetchersDone(keys) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n  function markFetchRedirectsDone() {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, \"Expected fetcher: \" + key);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n  function abortStaleFetchLoads(landedId) {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, \"Expected fetcher: \" + key);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n  function getBlocker(key, fn) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n    return blocker;\n  }\n  function deleteBlocker(key) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n  // Utility function to update blockers, ensuring valid state transitions\n  function updateBlocker(key, newBlocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n    invariant(blocker.state === \"unblocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"proceeding\" || blocker.state === \"blocked\" && newBlocker.state === \"unblocked\" || blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\", \"Invalid blocker state transition: \" + blocker.state + \" -> \" + newBlocker.state);\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({\n      blockers\n    });\n  }\n  function shouldBlockNavigation(_ref2) {\n    let {\n      currentLocation,\n      nextLocation,\n      historyAction\n    } = _ref2;\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n    // We ony support a single active blocker at the moment since we don't have\n    // any compelling use cases for multi-blocker yet\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    }\n    // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n    if (blockerFunction({\n      currentLocation,\n      nextLocation,\n      historyAction\n    })) {\n      return blockerKey;\n    }\n  }\n  function handleNavigational404(pathname) {\n    let error = getInternalRouterError(404, {\n      pathname\n    });\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let {\n      matches,\n      route\n    } = getShortCircuitMatches(routesToUse);\n    // Cancel all pending deferred on 404s since we don't keep any routes\n    cancelActiveDeferreds();\n    return {\n      notFoundMatches: matches,\n      route,\n      error\n    };\n  }\n  function cancelActiveDeferreds(predicate) {\n    let cancelledRouteIds = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(positions, getPosition, getKey) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || null;\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({\n          restoreScrollPosition: y\n        });\n      }\n    }\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n  function getScrollKey(location, matches) {\n    if (getScrollRestorationKey) {\n      let key = getScrollRestorationKey(location, matches.map(m => convertRouteMatchToUiMatch(m, state.loaderData)));\n      return key || location.key;\n    }\n    return location.key;\n  }\n  function saveScrollPosition(location, matches) {\n    if (savedScrollPositions && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n  function getSavedScrollPosition(location, matches) {\n    if (savedScrollPositions) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n  function checkFogOfWar(matches, routesToUse, pathname) {\n    if (patchRoutesOnNavigationImpl) {\n      if (!matches) {\n        let fogMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\n        return {\n          active: true,\n          matches: fogMatches || []\n        };\n      } else {\n        if (Object.keys(matches[0].params).length > 0) {\n          // If we matched a dynamic param or a splat, it might only be because\n          // we haven't yet discovered other routes that would match with a\n          // higher score.  Call patchRoutesOnNavigation just to be sure\n          let partialMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\n          return {\n            active: true,\n            matches: partialMatches\n          };\n        }\n      }\n    }\n    return {\n      active: false,\n      matches: null\n    };\n  }\n  async function discoverRoutes(matches, pathname, signal, fetcherKey) {\n    if (!patchRoutesOnNavigationImpl) {\n      return {\n        type: \"success\",\n        matches\n      };\n    }\n    let partialMatches = matches;\n    while (true) {\n      let isNonHMR = inFlightDataRoutes == null;\n      let routesToUse = inFlightDataRoutes || dataRoutes;\n      let localManifest = manifest;\n      try {\n        await patchRoutesOnNavigationImpl({\n          signal,\n          path: pathname,\n          matches: partialMatches,\n          fetcherKey,\n          patch: (routeId, children) => {\n            if (signal.aborted) return;\n            patchRoutesImpl(routeId, children, routesToUse, localManifest, mapRouteProperties);\n          }\n        });\n      } catch (e) {\n        return {\n          type: \"error\",\n          error: e,\n          partialMatches\n        };\n      } finally {\n        // If we are not in the middle of an HMR revalidation and we changed the\n        // routes, provide a new identity so when we `updateState` at the end of\n        // this navigation/fetch `router.routes` will be a new identity and\n        // trigger a re-run of memoized `router.routes` dependencies.\n        // HMR will already update the identity and reflow when it lands\n        // `inFlightDataRoutes` in `completeNavigation`\n        if (isNonHMR && !signal.aborted) {\n          dataRoutes = [...dataRoutes];\n        }\n      }\n      if (signal.aborted) {\n        return {\n          type: \"aborted\"\n        };\n      }\n      let newMatches = matchRoutes(routesToUse, pathname, basename);\n      if (newMatches) {\n        return {\n          type: \"success\",\n          matches: newMatches\n        };\n      }\n      let newPartialMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\n      // Avoid loops if the second pass results in the same partial matches\n      if (!newPartialMatches || partialMatches.length === newPartialMatches.length && partialMatches.every((m, i) => m.route.id === newPartialMatches[i].route.id)) {\n        return {\n          type: \"success\",\n          matches: null\n        };\n      }\n      partialMatches = newPartialMatches;\n    }\n  }\n  function _internalSetRoutes(newRoutes) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(newRoutes, mapRouteProperties, undefined, manifest);\n  }\n  function patchRoutes(routeId, children) {\n    let isNonHMR = inFlightDataRoutes == null;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties);\n    // If we are not in the middle of an HMR revalidation and we changed the\n    // routes, provide a new identity and trigger a reflow via `updateState`\n    // to re-run memoized `router.routes` dependencies.\n    // HMR will already update the identity and reflow when it lands\n    // `inFlightDataRoutes` in `completeNavigation`\n    if (isNonHMR) {\n      dataRoutes = [...dataRoutes];\n      updateState({});\n    }\n  }\n  router = {\n    get basename() {\n      return basename;\n    },\n    get future() {\n      return future;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    get window() {\n      return routerWindow;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: to => init.history.createHref(to),\n    encodeLocation: to => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher: deleteFetcherAndUpdateState,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    patchRoutes,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes\n  };\n  return router;\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\nconst UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\nfunction createStaticHandler(routes, opts) {\n  invariant(routes.length > 0, \"You must provide a non-empty routes array to createStaticHandler\");\n  let manifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties;\n  if (opts != null && opts.mapRouteProperties) {\n    mapRouteProperties = opts.mapRouteProperties;\n  } else if (opts != null && opts.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = opts.detectErrorBoundary;\n    mapRouteProperties = route => ({\n      hasErrorBoundary: detectErrorBoundary(route)\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  // Config driven behavior flags\n  let future = _extends({\n    v7_relativeSplatPath: false,\n    v7_throwAbortReason: false\n  }, opts ? opts.future : null);\n  let dataRoutes = convertRoutesToDataRoutes(routes, mapRouteProperties, undefined, manifest);\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   *\n   * - `opts.requestContext` is an optional server context that will be passed\n   *   to actions/loaders in the `context` parameter\n   * - `opts.skipLoaderErrorBubbling` is an optional parameter that will prevent\n   *   the bubbling of errors which allows single-fetch-type implementations\n   *   where the client will handle the bubbling and we may need to return data\n   *   for the handling route\n   */\n  async function query(request, _temp3) {\n    let {\n      requestContext,\n      skipLoaderErrorBubbling,\n      dataStrategy\n    } = _temp3 === void 0 ? {} : _temp3;\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, {\n        method\n      });\n      let {\n        matches: methodNotAllowedMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n      let {\n        matches: notFoundMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    let result = await queryImpl(request, location, matches, requestContext, dataStrategy || null, skipLoaderErrorBubbling === true, null);\n    if (isResponse(result)) {\n      return result;\n    }\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return _extends({\n      location,\n      basename\n    }, result);\n  }\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   *\n   * - `opts.routeId` allows you to specify the specific route handler to call.\n   *   If not provided the handler will determine the proper route by matching\n   *   against `request.url`\n   * - `opts.requestContext` is an optional server context that will be passed\n   *    to actions/loaders in the `context` parameter\n   */\n  async function queryRoute(request, _temp4) {\n    let {\n      routeId,\n      requestContext,\n      dataStrategy\n    } = _temp4 === void 0 ? {} : _temp4;\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, {\n        method\n      });\n    } else if (!matches) {\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n    let match = routeId ? matches.find(m => m.route.id === routeId) : getTargetMatch(matches, location);\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n    let result = await queryImpl(request, location, matches, requestContext, dataStrategy || null, false, match);\n    if (isResponse(result)) {\n      return result;\n    }\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    }\n    // Pick off the right state value to return\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n    if (result.loaderData) {\n      var _result$activeDeferre;\n      let data = Object.values(result.loaderData)[0];\n      if ((_result$activeDeferre = result.activeDeferreds) != null && _result$activeDeferre[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n      return data;\n    }\n    return undefined;\n  }\n  async function queryImpl(request, location, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch) {\n    invariant(request.signal, \"query()/queryRoute() requests must contain an AbortController signal\");\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(request, matches, routeMatch || getTargetMatch(matches, location), requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch != null);\n        return result;\n      }\n      let result = await loadRouteData(request, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch);\n      return isResponse(result) ? result : _extends({}, result, {\n        actionData: null,\n        actionHeaders: {}\n      });\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction for a\n      // `queryRoute` call, we throw the `DataStrategyResult` to bail out early\n      // and then return or throw the raw Response here accordingly\n      if (isDataStrategyResult(e) && isResponse(e.result)) {\n        if (e.type === ResultType.error) {\n          throw e.result;\n        }\n        return e.result;\n      }\n      // Redirects are always returned since they don't propagate to catch\n      // boundaries\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n  async function submit(request, matches, actionMatch, requestContext, dataStrategy, skipLoaderErrorBubbling, isRouteRequest) {\n    let result;\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error\n      };\n    } else {\n      let results = await callDataStrategy(\"action\", request, [actionMatch], matches, isRouteRequest, requestContext, dataStrategy);\n      result = results[actionMatch.route.id];\n      if (request.signal.aborted) {\n        throwStaticHandlerAbortedError(request, isRouteRequest, future);\n      }\n    }\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.response.status,\n        headers: {\n          Location: result.response.headers.get(\"Location\")\n        }\n      });\n    }\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error\n      };\n    }\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: {\n          [actionMatch.route.id]: result.data\n        },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    // Create a GET request for the loaders\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal\n    });\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = skipLoaderErrorBubbling ? actionMatch : findNearestBoundary(matches, actionMatch.route.id);\n      let context = await loadRouteData(loaderRequest, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, null, [boundaryMatch.route.id, result]);\n      // action status codes take precedence over loader status codes\n      return _extends({}, context, {\n        statusCode: isRouteErrorResponse(result.error) ? result.error.status : result.statusCode != null ? result.statusCode : 500,\n        actionData: null,\n        actionHeaders: _extends({}, result.headers ? {\n          [actionMatch.route.id]: result.headers\n        } : {})\n      });\n    }\n    let context = await loadRouteData(loaderRequest, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, null);\n    return _extends({}, context, {\n      actionData: {\n        [actionMatch.route.id]: result.data\n      }\n    }, result.statusCode ? {\n      statusCode: result.statusCode\n    } : {}, {\n      actionHeaders: result.headers ? {\n        [actionMatch.route.id]: result.headers\n      } : {}\n    });\n  }\n  async function loadRouteData(request, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch, pendingActionResult) {\n    let isRouteRequest = routeMatch != null;\n    // Short circuit if we have no loaders to run (queryRoute())\n    if (isRouteRequest && !(routeMatch != null && routeMatch.route.loader) && !(routeMatch != null && routeMatch.route.lazy)) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch == null ? void 0 : routeMatch.route.id\n      });\n    }\n    let requestMatches = routeMatch ? [routeMatch] : pendingActionResult && isErrorResult(pendingActionResult[1]) ? getLoaderMatchesUntilBoundary(matches, pendingActionResult[0]) : matches;\n    let matchesToLoad = requestMatches.filter(m => m.route.loader || m.route.lazy);\n    // Short circuit if we have no loaders to run (query())\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce((acc, m) => Object.assign(acc, {\n          [m.route.id]: null\n        }), {}),\n        errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? {\n          [pendingActionResult[0]]: pendingActionResult[1].error\n        } : null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    let results = await callDataStrategy(\"loader\", request, matchesToLoad, matches, isRouteRequest, requestContext, dataStrategy);\n    if (request.signal.aborted) {\n      throwStaticHandlerAbortedError(request, isRouteRequest, future);\n    }\n    // Process and commit output from loaders\n    let activeDeferreds = new Map();\n    let context = processRouteLoaderData(matches, results, pendingActionResult, activeDeferreds, skipLoaderErrorBubbling);\n    // Add a null for any non-loader matches for proper revalidation on the client\n    let executedLoaders = new Set(matchesToLoad.map(match => match.route.id));\n    matches.forEach(match => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n    return _extends({}, context, {\n      matches,\n      activeDeferreds: activeDeferreds.size > 0 ? Object.fromEntries(activeDeferreds.entries()) : null\n    });\n  }\n  // Utility wrapper for calling dataStrategy server-side without having to\n  // pass around the manifest, mapRouteProperties, etc.\n  async function callDataStrategy(type, request, matchesToLoad, matches, isRouteRequest, requestContext, dataStrategy) {\n    let results = await callDataStrategyImpl(dataStrategy || defaultDataStrategy, type, null, request, matchesToLoad, matches, null, manifest, mapRouteProperties, requestContext);\n    let dataResults = {};\n    await Promise.all(matches.map(async match => {\n      if (!(match.route.id in results)) {\n        return;\n      }\n      let result = results[match.route.id];\n      if (isRedirectDataStrategyResultResult(result)) {\n        let response = result.result;\n        // Throw redirects and let the server handle them with an HTTP redirect\n        throw normalizeRelativeRoutingRedirectResponse(response, request, match.route.id, matches, basename, future.v7_relativeSplatPath);\n      }\n      if (isResponse(result.result) && isRouteRequest) {\n        // For SSR single-route requests, we want to hand Responses back\n        // directly without unwrapping\n        throw result;\n      }\n      dataResults[match.route.id] = await convertDataStrategyResultToDataResult(result);\n    }));\n    return dataResults;\n  }\n  return {\n    dataRoutes,\n    query,\n    queryRoute\n  };\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nfunction getStaticContextFromError(routes, context, error) {\n  let newContext = _extends({}, context, {\n    statusCode: isRouteErrorResponse(error) ? error.status : 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error\n    }\n  });\n  return newContext;\n}\nfunction throwStaticHandlerAbortedError(request, isRouteRequest, future) {\n  if (future.v7_throwAbortReason && request.signal.reason !== undefined) {\n    throw request.signal.reason;\n  }\n  let method = isRouteRequest ? \"queryRoute\" : \"query\";\n  throw new Error(method + \"() call aborted: \" + request.method + \" \" + request.url);\n}\nfunction isSubmissionNavigation(opts) {\n  return opts != null && (\"formData\" in opts && opts.formData != null || \"body\" in opts && opts.body !== undefined);\n}\nfunction normalizeTo(location, matches, basename, prependBasename, to, v7_relativeSplatPath, fromRouteId, relative) {\n  let contextualMatches;\n  let activeRouteMatch;\n  if (fromRouteId) {\n    // Grab matches up to the calling route so our route-relative logic is\n    // relative to the correct source route\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n  // Resolve the relative path\n  let path = resolveTo(to ? to : \".\", getResolveToMatches(contextualMatches, v7_relativeSplatPath), stripBasename(location.pathname, basename) || location.pathname, relative === \"path\");\n  // When `to` is not specified we inherit search/hash from the current\n  // location, unlike when to=\".\" and we just inherit the path.\n  // See https://github.com/remix-run/remix/issues/927\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n  // Account for `?index` params when routing to the current location\n  if ((to == null || to === \"\" || to === \".\") && activeRouteMatch) {\n    let nakedIndex = hasNakedIndexQuery(path.search);\n    if (activeRouteMatch.route.index && !nakedIndex) {\n      // Add one when we're targeting an index route\n      path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n    } else if (!activeRouteMatch.route.index && nakedIndex) {\n      // Remove existing ones when we're not\n      let params = new URLSearchParams(path.search);\n      let indexValues = params.getAll(\"index\");\n      params.delete(\"index\");\n      indexValues.filter(v => v).forEach(v => params.append(\"index\", v));\n      let qs = params.toString();\n      path.search = qs ? \"?\" + qs : \"\";\n    }\n  }\n  // If we're operating within a basename, prepend it to the pathname.  If\n  // this is a root navigation, then just use the raw basename which allows\n  // the basename to have full control over the presence of a trailing slash\n  // on root actions\n  if (prependBasename && basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(normalizeFormMethod, isFetcher, path, opts) {\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return {\n      path\n    };\n  }\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, {\n        method: opts.formMethod\n      })\n    };\n  }\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, {\n      type: \"invalid-body\"\n    })\n  });\n  // Create a Submission on non-GET navigations\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = normalizeFormMethod ? rawFormMethod.toUpperCase() : rawFormMethod.toLowerCase();\n  let formAction = stripHashFromPath(path);\n  if (opts.body !== undefined) {\n    if (opts.formEncType === \"text/plain\") {\n      // text only support POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      let text = typeof opts.body === \"string\" ? opts.body : opts.body instanceof FormData || opts.body instanceof URLSearchParams ?\n      // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n      Array.from(opts.body.entries()).reduce((acc, _ref3) => {\n        let [name, value] = _ref3;\n        return \"\" + acc + name + \"=\" + value + \"\\n\";\n      }, \"\") : String(opts.body);\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: undefined,\n          json: undefined,\n          text\n        }\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      // json only supports POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      try {\n        let json = typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: undefined,\n            json,\n            text: undefined\n          }\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n  invariant(typeof FormData === \"function\", \"FormData is not available in this environment\");\n  let searchParams;\n  let formData;\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n  let submission = {\n    formMethod,\n    formAction,\n    formEncType: opts && opts.formEncType || \"application/x-www-form-urlencoded\",\n    formData,\n    json: undefined,\n    text: undefined\n  };\n  if (isMutationMethod(submission.formMethod)) {\n    return {\n      path,\n      submission\n    };\n  }\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  // On GET navigation submissions we can drop the ?index param from the\n  // resulting location since all loaders will run.  But fetcher GET submissions\n  // only run a single loader so we need to preserve any incoming ?index params\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = \"?\" + searchParams;\n  return {\n    path: createPath(parsedPath),\n    submission\n  };\n}\n// Filter out all routes at/below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(matches, boundaryId, includeBoundary) {\n  if (includeBoundary === void 0) {\n    includeBoundary = false;\n  }\n  let index = matches.findIndex(m => m.route.id === boundaryId);\n  if (index >= 0) {\n    return matches.slice(0, includeBoundary ? index + 1 : index);\n  }\n  return matches;\n}\nfunction getMatchesToLoad(history, state, matches, submission, location, initialHydration, skipActionErrorRevalidation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionResult) {\n  let actionResult = pendingActionResult ? isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : pendingActionResult[1].data : undefined;\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryMatches = matches;\n  if (initialHydration && state.errors) {\n    // On initial hydration, only consider matches up to _and including_ the boundary.\n    // This is inclusive to handle cases where a server loader ran successfully,\n    // a child server loader bubbled up to this route, but this route has\n    // `clientLoader.hydrate` so we want to still run the `clientLoader` so that\n    // we have a complete version of `loaderData`\n    boundaryMatches = getLoaderMatchesUntilBoundary(matches, Object.keys(state.errors)[0], true);\n  } else if (pendingActionResult && isErrorResult(pendingActionResult[1])) {\n    // If an action threw an error, we call loaders up to, but not including the\n    // boundary\n    boundaryMatches = getLoaderMatchesUntilBoundary(matches, pendingActionResult[0]);\n  }\n  // Don't revalidate loaders by default after action 4xx/5xx responses\n  // when the flag is enabled.  They can still opt-into revalidation via\n  // `shouldRevalidate` via `actionResult`\n  let actionStatus = pendingActionResult ? pendingActionResult[1].statusCode : undefined;\n  let shouldSkipRevalidation = skipActionErrorRevalidation && actionStatus && actionStatus >= 400;\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    let {\n      route\n    } = match;\n    if (route.lazy) {\n      // We haven't loaded this route yet so we don't know if it's got a loader!\n      return true;\n    }\n    if (route.loader == null) {\n      return false;\n    }\n    if (initialHydration) {\n      return shouldLoadRouteOnHydration(route, state.loaderData, state.errors);\n    }\n    // Always call the loader on new route instances and pending defer cancellations\n    if (isNewLoader(state.loaderData, state.matches[index], match) || cancelledDeferredRoutes.some(id => id === match.route.id)) {\n      return true;\n    }\n    // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n    return shouldRevalidateLoader(match, _extends({\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params\n    }, submission, {\n      actionResult,\n      actionStatus,\n      defaultShouldRevalidate: shouldSkipRevalidation ? false :\n      // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n      isRevalidationRequired || currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search ||\n      // Search params affect all loaders\n      currentUrl.search !== nextUrl.search || isNewRouteInstance(currentRouteMatch, nextRouteMatch)\n    }));\n  });\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers = [];\n  fetchLoadMatches.forEach((f, key) => {\n    // Don't revalidate:\n    //  - on initial hydration (shouldn't be any fetchers then anyway)\n    //  - if fetcher won't be present in the subsequent render\n    //    - no longer matches the URL (v7_fetcherPersist=false)\n    //    - was unmounted but persisted due to v7_fetcherPersist=true\n    if (initialHydration || !matches.some(m => m.route.id === f.routeId) || deletedFetchers.has(key)) {\n      return;\n    }\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n    // If the fetcher path no longer matches, push it in with null matches so\n    // we can trigger a 404 in callLoadersAndMaybeResolveData.  Note this is\n    // currently only a use-case for Remix HMR where the route tree can change\n    // at runtime and remove a route previously loaded via a fetcher\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        controller: null\n      });\n      return;\n    }\n    // Revalidating fetchers are decoupled from the route matches since they\n    // load from a static href.  They revalidate based on explicit revalidation\n    // (submission, useRevalidator, or X-Remix-Revalidate)\n    let fetcher = state.fetchers.get(key);\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n    let shouldRevalidate = false;\n    if (fetchRedirectIds.has(key)) {\n      // Never trigger a revalidation of an actively redirecting fetcher\n      shouldRevalidate = false;\n    } else if (cancelledFetcherLoads.has(key)) {\n      // Always mark for revalidation if the fetcher was cancelled\n      cancelledFetcherLoads.delete(key);\n      shouldRevalidate = true;\n    } else if (fetcher && fetcher.state !== \"idle\" && fetcher.data === undefined) {\n      // If the fetcher hasn't ever completed loading yet, then this isn't a\n      // revalidation, it would just be a brand new load if an explicit\n      // revalidation is required\n      shouldRevalidate = isRevalidationRequired;\n    } else {\n      // Otherwise fall back on any user-defined shouldRevalidate, defaulting\n      // to explicit revalidations only\n      shouldRevalidate = shouldRevalidateLoader(fetcherMatch, _extends({\n        currentUrl,\n        currentParams: state.matches[state.matches.length - 1].params,\n        nextUrl,\n        nextParams: matches[matches.length - 1].params\n      }, submission, {\n        actionResult,\n        actionStatus,\n        defaultShouldRevalidate: shouldSkipRevalidation ? false : isRevalidationRequired\n      }));\n    }\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController()\n      });\n    }\n  });\n  return [navigationMatches, revalidatingFetchers];\n}\nfunction shouldLoadRouteOnHydration(route, loaderData, errors) {\n  // We dunno if we have a loader - gotta find out!\n  if (route.lazy) {\n    return true;\n  }\n  // No loader, nothing to initialize\n  if (!route.loader) {\n    return false;\n  }\n  let hasData = loaderData != null && loaderData[route.id] !== undefined;\n  let hasError = errors != null && errors[route.id] !== undefined;\n  // Don't run if we error'd during SSR\n  if (!hasData && hasError) {\n    return false;\n  }\n  // Explicitly opting-in to running on hydration\n  if (typeof route.loader === \"function\" && route.loader.hydrate === true) {\n    return true;\n  }\n  // Otherwise, run if we're not yet initialized with anything\n  return !hasData && !hasError;\n}\nfunction isNewLoader(currentLoaderData, currentMatch, match) {\n  let isNew =\n  // [a] -> [a, b]\n  !currentMatch ||\n  // [a, b] -> [a, c]\n  match.route.id !== currentMatch.route.id;\n  // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n  // Always load if this is a net-new route or we don't yet have data\n  return isNew || isMissingData;\n}\nfunction isNewRouteInstance(currentMatch, match) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    currentPath != null && currentPath.endsWith(\"*\") && currentMatch.params[\"*\"] !== match.params[\"*\"]\n  );\n}\nfunction shouldRevalidateLoader(loaderMatch, arg) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n  return arg.defaultShouldRevalidate;\n}\nfunction patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties) {\n  var _childrenToPatch;\n  let childrenToPatch;\n  if (routeId) {\n    let route = manifest[routeId];\n    invariant(route, \"No route found to patch children into: routeId = \" + routeId);\n    if (!route.children) {\n      route.children = [];\n    }\n    childrenToPatch = route.children;\n  } else {\n    childrenToPatch = routesToUse;\n  }\n  // Don't patch in routes we already know about so that `patch` is idempotent\n  // to simplify user-land code. This is useful because we re-call the\n  // `patchRoutesOnNavigation` function for matched routes with params.\n  let uniqueChildren = children.filter(newRoute => !childrenToPatch.some(existingRoute => isSameRoute(newRoute, existingRoute)));\n  let newRoutes = convertRoutesToDataRoutes(uniqueChildren, mapRouteProperties, [routeId || \"_\", \"patch\", String(((_childrenToPatch = childrenToPatch) == null ? void 0 : _childrenToPatch.length) || \"0\")], manifest);\n  childrenToPatch.push(...newRoutes);\n}\nfunction isSameRoute(newRoute, existingRoute) {\n  // Most optimal check is by id\n  if (\"id\" in newRoute && \"id\" in existingRoute && newRoute.id === existingRoute.id) {\n    return true;\n  }\n  // Second is by pathing differences\n  if (!(newRoute.index === existingRoute.index && newRoute.path === existingRoute.path && newRoute.caseSensitive === existingRoute.caseSensitive)) {\n    return false;\n  }\n  // Pathless layout routes are trickier since we need to check children.\n  // If they have no children then they're the same as far as we can tell\n  if ((!newRoute.children || newRoute.children.length === 0) && (!existingRoute.children || existingRoute.children.length === 0)) {\n    return true;\n  }\n  // Otherwise, we look to see if every child in the new route is already\n  // represented in the existing route's children\n  return newRoute.children.every((aChild, i) => {\n    var _existingRoute$childr;\n    return (_existingRoute$childr = existingRoute.children) == null ? void 0 : _existingRoute$childr.some(bChild => isSameRoute(aChild, bChild));\n  });\n}\n/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */\nasync function loadLazyRouteModule(route, mapRouteProperties, manifest) {\n  if (!route.lazy) {\n    return;\n  }\n  let lazyRoute = await route.lazy();\n  // If the lazy route function was executed and removed by another parallel\n  // call then we can return - first lazy() to finish wins because the return\n  // value of lazy is expected to be static\n  if (!route.lazy) {\n    return;\n  }\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n  // Update the route in place.  This should be safe because there's no way\n  // we could yet be sitting on this route as we can't get there without\n  // resolving lazy() first.\n  //\n  // This is different than the HMR \"update\" use-case where we may actively be\n  // on the route being updated.  The main concern boils down to \"does this\n  // mutation affect any ongoing navigations or any current state.matches\n  // values?\".  If not, it should be safe to update in place.\n  let routeUpdates = {};\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue = routeToUpdate[lazyRouteProperty];\n    let isPropertyStaticallyDefined = staticRouteValue !== undefined &&\n    // This property isn't static since it should always be updated based\n    // on the route updates\n    lazyRouteProperty !== \"hasErrorBoundary\";\n    warning(!isPropertyStaticallyDefined, \"Route \\\"\" + routeToUpdate.id + \"\\\" has a static property \\\"\" + lazyRouteProperty + \"\\\" \" + \"defined but its lazy function is also returning a value for this property. \" + (\"The lazy route property \\\"\" + lazyRouteProperty + \"\\\" will be ignored.\"));\n    if (!isPropertyStaticallyDefined && !immutableRouteKeys.has(lazyRouteProperty)) {\n      routeUpdates[lazyRouteProperty] = lazyRoute[lazyRouteProperty];\n    }\n  }\n  // Mutate the route with the provided updates.  Do this first so we pass\n  // the updated version to mapRouteProperties\n  Object.assign(routeToUpdate, routeUpdates);\n  // Mutate the `hasErrorBoundary` property on the route based on the route\n  // updates and remove the `lazy` function so we don't resolve the lazy\n  // route again.\n  Object.assign(routeToUpdate, _extends({}, mapRouteProperties(routeToUpdate), {\n    lazy: undefined\n  }));\n}\n// Default implementation of `dataStrategy` which fetches all loaders in parallel\nasync function defaultDataStrategy(_ref4) {\n  let {\n    matches\n  } = _ref4;\n  let matchesToLoad = matches.filter(m => m.shouldLoad);\n  let results = await Promise.all(matchesToLoad.map(m => m.resolve()));\n  return results.reduce((acc, result, i) => Object.assign(acc, {\n    [matchesToLoad[i].route.id]: result\n  }), {});\n}\nasync function callDataStrategyImpl(dataStrategyImpl, type, state, request, matchesToLoad, matches, fetcherKey, manifest, mapRouteProperties, requestContext) {\n  let loadRouteDefinitionsPromises = matches.map(m => m.route.lazy ? loadLazyRouteModule(m.route, mapRouteProperties, manifest) : undefined);\n  let dsMatches = matches.map((match, i) => {\n    let loadRoutePromise = loadRouteDefinitionsPromises[i];\n    let shouldLoad = matchesToLoad.some(m => m.route.id === match.route.id);\n    // `resolve` encapsulates route.lazy(), executing the loader/action,\n    // and mapping return values/thrown errors to a `DataStrategyResult`.  Users\n    // can pass a callback to take fine-grained control over the execution\n    // of the loader/action\n    let resolve = async handlerOverride => {\n      if (handlerOverride && request.method === \"GET\" && (match.route.lazy || match.route.loader)) {\n        shouldLoad = true;\n      }\n      return shouldLoad ? callLoaderOrAction(type, request, match, loadRoutePromise, handlerOverride, requestContext) : Promise.resolve({\n        type: ResultType.data,\n        result: undefined\n      });\n    };\n    return _extends({}, match, {\n      shouldLoad,\n      resolve\n    });\n  });\n  // Send all matches here to allow for a middleware-type implementation.\n  // handler will be a no-op for unneeded routes and we filter those results\n  // back out below.\n  let results = await dataStrategyImpl({\n    matches: dsMatches,\n    request,\n    params: matches[0].params,\n    fetcherKey,\n    context: requestContext\n  });\n  // Wait for all routes to load here but 'swallow the error since we want\n  // it to bubble up from the `await loadRoutePromise` in `callLoaderOrAction` -\n  // called from `match.resolve()`\n  try {\n    await Promise.all(loadRouteDefinitionsPromises);\n  } catch (e) {\n    // No-op\n  }\n  return results;\n}\n// Default logic for calling a loader/action is the user has no specified a dataStrategy\nasync function callLoaderOrAction(type, request, match, loadRoutePromise, handlerOverride, staticContext) {\n  let result;\n  let onReject;\n  let runHandler = handler => {\n    // Setup a promise we can race against so that abort signals short circuit\n    let reject;\n    // This will never resolve so safe to type it as Promise<DataStrategyResult> to\n    // satisfy the function return value\n    let abortPromise = new Promise((_, r) => reject = r);\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n    let actualHandler = ctx => {\n      if (typeof handler !== \"function\") {\n        return Promise.reject(new Error(\"You cannot call the handler for a route which defines a boolean \" + (\"\\\"\" + type + \"\\\" [routeId: \" + match.route.id + \"]\")));\n      }\n      return handler({\n        request,\n        params: match.params,\n        context: staticContext\n      }, ...(ctx !== undefined ? [ctx] : []));\n    };\n    let handlerPromise = (async () => {\n      try {\n        let val = await (handlerOverride ? handlerOverride(ctx => actualHandler(ctx)) : actualHandler());\n        return {\n          type: \"data\",\n          result: val\n        };\n      } catch (e) {\n        return {\n          type: \"error\",\n          result: e\n        };\n      }\n    })();\n    return Promise.race([handlerPromise, abortPromise]);\n  };\n  try {\n    let handler = match.route[type];\n    // If we have a route.lazy promise, await that first\n    if (loadRoutePromise) {\n      if (handler) {\n        // Run statically defined handler in parallel with lazy()\n        let handlerError;\n        let [value] = await Promise.all([\n        // If the handler throws, don't let it immediately bubble out,\n        // since we need to let the lazy() execution finish so we know if this\n        // route has a boundary that can handle the error\n        runHandler(handler).catch(e => {\n          handlerError = e;\n        }), loadRoutePromise]);\n        if (handlerError !== undefined) {\n          throw handlerError;\n        }\n        result = value;\n      } else {\n        // Load lazy route module, then run any returned handler\n        await loadRoutePromise;\n        handler = match.route[type];\n        if (handler) {\n          // Handler still runs even if we got interrupted to maintain consistency\n          // with un-abortable behavior of handler execution on non-lazy or\n          // previously-lazy-loaded routes\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id\n          });\n        } else {\n          // lazy() route has no loader to run.  Short circuit here so we don't\n          // hit the invariant below that errors on returning undefined.\n          return {\n            type: ResultType.data,\n            result: undefined\n          };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n    invariant(result.result !== undefined, \"You defined \" + (type === \"action\" ? \"an action\" : \"a loader\") + \" for route \" + (\"\\\"\" + match.route.id + \"\\\" but didn't return anything from your `\" + type + \"` \") + \"function. Please return a value or `null`.\");\n  } catch (e) {\n    // We should already be catching and converting normal handler executions to\n    // DataStrategyResults and returning them, so anything that throws here is an\n    // unexpected error we still need to wrap\n    return {\n      type: ResultType.error,\n      result: e\n    };\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n  return result;\n}\nasync function convertDataStrategyResultToDataResult(dataStrategyResult) {\n  let {\n    result,\n    type\n  } = dataStrategyResult;\n  if (isResponse(result)) {\n    let data;\n    try {\n      let contentType = result.headers.get(\"Content-Type\");\n      // Check between word boundaries instead of startsWith() due to the last\n      // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n      if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n        if (result.body == null) {\n          data = null;\n        } else {\n          data = await result.json();\n        }\n      } else {\n        data = await result.text();\n      }\n    } catch (e) {\n      return {\n        type: ResultType.error,\n        error: e\n      };\n    }\n    if (type === ResultType.error) {\n      return {\n        type: ResultType.error,\n        error: new ErrorResponseImpl(result.status, result.statusText, data),\n        statusCode: result.status,\n        headers: result.headers\n      };\n    }\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers\n    };\n  }\n  if (type === ResultType.error) {\n    if (isDataWithResponseInit(result)) {\n      var _result$init3, _result$init4;\n      if (result.data instanceof Error) {\n        var _result$init, _result$init2;\n        return {\n          type: ResultType.error,\n          error: result.data,\n          statusCode: (_result$init = result.init) == null ? void 0 : _result$init.status,\n          headers: (_result$init2 = result.init) != null && _result$init2.headers ? new Headers(result.init.headers) : undefined\n        };\n      }\n      // Convert thrown data() to ErrorResponse instances\n      return {\n        type: ResultType.error,\n        error: new ErrorResponseImpl(((_result$init3 = result.init) == null ? void 0 : _result$init3.status) || 500, undefined, result.data),\n        statusCode: isRouteErrorResponse(result) ? result.status : undefined,\n        headers: (_result$init4 = result.init) != null && _result$init4.headers ? new Headers(result.init.headers) : undefined\n      };\n    }\n    return {\n      type: ResultType.error,\n      error: result,\n      statusCode: isRouteErrorResponse(result) ? result.status : undefined\n    };\n  }\n  if (isDeferredData(result)) {\n    var _result$init5, _result$init6;\n    return {\n      type: ResultType.deferred,\n      deferredData: result,\n      statusCode: (_result$init5 = result.init) == null ? void 0 : _result$init5.status,\n      headers: ((_result$init6 = result.init) == null ? void 0 : _result$init6.headers) && new Headers(result.init.headers)\n    };\n  }\n  if (isDataWithResponseInit(result)) {\n    var _result$init7, _result$init8;\n    return {\n      type: ResultType.data,\n      data: result.data,\n      statusCode: (_result$init7 = result.init) == null ? void 0 : _result$init7.status,\n      headers: (_result$init8 = result.init) != null && _result$init8.headers ? new Headers(result.init.headers) : undefined\n    };\n  }\n  return {\n    type: ResultType.data,\n    data: result\n  };\n}\n// Support relative routing in internal redirects\nfunction normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename, v7_relativeSplatPath) {\n  let location = response.headers.get(\"Location\");\n  invariant(location, \"Redirects returned/thrown from loaders/actions must have a Location header\");\n  if (!ABSOLUTE_URL_REGEX.test(location)) {\n    let trimmedMatches = matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1);\n    location = normalizeTo(new URL(request.url), trimmedMatches, basename, true, location, v7_relativeSplatPath);\n    response.headers.set(\"Location\", location);\n  }\n  return response;\n}\nfunction normalizeRedirectLocation(location, currentUrl, basename) {\n  if (ABSOLUTE_URL_REGEX.test(location)) {\n    // Strip off the protocol+origin for same-origin + same-basename absolute redirects\n    let normalizedLocation = location;\n    let url = normalizedLocation.startsWith(\"//\") ? new URL(currentUrl.protocol + normalizedLocation) : new URL(normalizedLocation);\n    let isSameBasename = stripBasename(url.pathname, basename) != null;\n    if (url.origin === currentUrl.origin && isSameBasename) {\n      return url.pathname + url.search + url.hash;\n    }\n  }\n  return location;\n}\n// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction createClientSideRequest(history, location, signal, submission) {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init = {\n    signal\n  };\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let {\n      formMethod,\n      formEncType\n    } = submission;\n    // Didn't think we needed this but it turns out unlike other methods, patch\n    // won't be properly normalized to uppercase and results in a 405 error.\n    // See: https://fetch.spec.whatwg.org/#concept-method\n    init.method = formMethod.toUpperCase();\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({\n        \"Content-Type\": formEncType\n      });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.text;\n    } else if (formEncType === \"application/x-www-form-urlencoded\" && submission.formData) {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.formData;\n    }\n  }\n  return new Request(url, init);\n}\nfunction convertFormDataToSearchParams(formData) {\n  let searchParams = new URLSearchParams();\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n  return searchParams;\n}\nfunction convertSearchParamsToFormData(searchParams) {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\nfunction processRouteLoaderData(matches, results, pendingActionResult, activeDeferreds, skipLoaderErrorBubbling) {\n  // Fill in loaderData/errors from our loaders\n  let loaderData = {};\n  let errors = null;\n  let statusCode;\n  let foundError = false;\n  let loaderHeaders = {};\n  let pendingError = pendingActionResult && isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : undefined;\n  // Process loader results into state.loaderData/state.errors\n  matches.forEach(match => {\n    if (!(match.route.id in results)) {\n      return;\n    }\n    let id = match.route.id;\n    let result = results[id];\n    invariant(!isRedirectResult(result), \"Cannot handle redirect results in processLoaderData\");\n    if (isErrorResult(result)) {\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError !== undefined) {\n        error = pendingError;\n        pendingError = undefined;\n      }\n      errors = errors || {};\n      if (skipLoaderErrorBubbling) {\n        errors[id] = error;\n      } else {\n        // Look upwards from the matched route for the closest ancestor error\n        // boundary, defaulting to the root match.  Prefer higher error values\n        // if lower errors bubble to the same boundary\n        let boundaryMatch = findNearestBoundary(matches, id);\n        if (errors[boundaryMatch.route.id] == null) {\n          errors[boundaryMatch.route.id] = error;\n        }\n      }\n      // Clear our any prior loaderData for the throwing route\n      loaderData[id] = undefined;\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n        // Error status codes always override success status codes, but if all\n        // loaders are successful we take the deepest status code.\n        if (result.statusCode != null && result.statusCode !== 200 && !foundError) {\n          statusCode = result.statusCode;\n        }\n        if (result.headers) {\n          loaderHeaders[id] = result.headers;\n        }\n      } else {\n        loaderData[id] = result.data;\n        // Error status codes always override success status codes, but if all\n        // loaders are successful we take the deepest status code.\n        if (result.statusCode && result.statusCode !== 200 && !foundError) {\n          statusCode = result.statusCode;\n        }\n        if (result.headers) {\n          loaderHeaders[id] = result.headers;\n        }\n      }\n    }\n  });\n  // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n  if (pendingError !== undefined && pendingActionResult) {\n    errors = {\n      [pendingActionResult[0]]: pendingError\n    };\n    loaderData[pendingActionResult[0]] = undefined;\n  }\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders\n  };\n}\nfunction processLoaderData(state, matches, results, pendingActionResult, revalidatingFetchers, fetcherResults, activeDeferreds) {\n  let {\n    loaderData,\n    errors\n  } = processRouteLoaderData(matches, results, pendingActionResult, activeDeferreds, false // This method is only called client side so we always want to bubble\n  );\n  // Process results from our revalidating fetchers\n  revalidatingFetchers.forEach(rf => {\n    let {\n      key,\n      match,\n      controller\n    } = rf;\n    let result = fetcherResults[key];\n    invariant(result, \"Did not find corresponding fetcher result\");\n    // Process fetcher non-redirect errors\n    if (controller && controller.signal.aborted) {\n      // Nothing to do for aborted fetchers\n      return;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match == null ? void 0 : match.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = _extends({}, errors, {\n          [boundaryMatch.route.id]: result.error\n        });\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  });\n  return {\n    loaderData,\n    errors\n  };\n}\nfunction mergeLoaderData(loaderData, newLoaderData, matches, errors) {\n  let mergedLoaderData = _extends({}, newLoaderData);\n  for (let match of matches) {\n    let id = match.route.id;\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      }\n    } else if (loaderData[id] !== undefined && match.route.loader) {\n      // Preserve existing keys not included in newLoaderData and where a loader\n      // wasn't removed by HMR\n      mergedLoaderData[id] = loaderData[id];\n    }\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\nfunction getActionDataForCommit(pendingActionResult) {\n  if (!pendingActionResult) {\n    return {};\n  }\n  return isErrorResult(pendingActionResult[1]) ? {\n    // Clear out prior actionData on errors\n    actionData: {}\n  } : {\n    actionData: {\n      [pendingActionResult[0]]: pendingActionResult[1].data\n    }\n  };\n}\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(matches, routeId) {\n  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1) : [...matches];\n  return eligibleMatches.reverse().find(m => m.route.hasErrorBoundary === true) || matches[0];\n}\nfunction getShortCircuitMatches(routes) {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route = routes.length === 1 ? routes[0] : routes.find(r => r.index || !r.path || r.path === \"/\") || {\n    id: \"__shim-error-route__\"\n  };\n  return {\n    matches: [{\n      params: {},\n      pathname: \"\",\n      pathnameBase: \"\",\n      route\n    }],\n    route\n  };\n}\nfunction getInternalRouterError(status, _temp5) {\n  let {\n    pathname,\n    routeId,\n    method,\n    type,\n    message\n  } = _temp5 === void 0 ? {} : _temp5;\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide a `loader` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = \"Route \\\"\" + routeId + \"\\\" does not match URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = \"No route matches URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method.toUpperCase() + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide an `action` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (method) {\n      errorMessage = \"Invalid request method \\\"\" + method.toUpperCase() + \"\\\"\";\n    }\n  }\n  return new ErrorResponseImpl(status || 500, statusText, new Error(errorMessage), true);\n}\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(results) {\n  let entries = Object.entries(results);\n  for (let i = entries.length - 1; i >= 0; i--) {\n    let [key, result] = entries[i];\n    if (isRedirectResult(result)) {\n      return {\n        key,\n        result\n      };\n    }\n  }\n}\nfunction stripHashFromPath(path) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath(_extends({}, parsedPath, {\n    hash: \"\"\n  }));\n}\nfunction isHashChangeOnly(a, b) {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n  if (a.hash === \"\") {\n    // /page -> /page#hash\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    // /page#hash -> /page#hash\n    return true;\n  } else if (b.hash !== \"\") {\n    // /page#hash -> /page#other\n    return true;\n  }\n  // If the hash is removed the browser will re-perform a request to the server\n  // /page#hash -> /page\n  return false;\n}\nfunction isDataStrategyResult(result) {\n  return result != null && typeof result === \"object\" && \"type\" in result && \"result\" in result && (result.type === ResultType.data || result.type === ResultType.error);\n}\nfunction isRedirectDataStrategyResultResult(result) {\n  return isResponse(result.result) && redirectStatusCodes.has(result.result.status);\n}\nfunction isDeferredResult(result) {\n  return result.type === ResultType.deferred;\n}\nfunction isErrorResult(result) {\n  return result.type === ResultType.error;\n}\nfunction isRedirectResult(result) {\n  return (result && result.type) === ResultType.redirect;\n}\nfunction isDataWithResponseInit(value) {\n  return typeof value === \"object\" && value != null && \"type\" in value && \"data\" in value && \"init\" in value && value.type === \"DataWithResponseInit\";\n}\nfunction isDeferredData(value) {\n  let deferred = value;\n  return deferred && typeof deferred === \"object\" && typeof deferred.data === \"object\" && typeof deferred.subscribe === \"function\" && typeof deferred.cancel === \"function\" && typeof deferred.resolveData === \"function\";\n}\nfunction isResponse(value) {\n  return value != null && typeof value.status === \"number\" && typeof value.statusText === \"string\" && typeof value.headers === \"object\" && typeof value.body !== \"undefined\";\n}\nfunction isRedirectResponse(result) {\n  if (!isResponse(result)) {\n    return false;\n  }\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\nfunction isValidMethod(method) {\n  return validRequestMethods.has(method.toLowerCase());\n}\nfunction isMutationMethod(method) {\n  return validMutationMethods.has(method.toLowerCase());\n}\nasync function resolveNavigationDeferredResults(matches, results, signal, currentMatches, currentLoaderData) {\n  let entries = Object.entries(results);\n  for (let index = 0; index < entries.length; index++) {\n    let [routeId, result] = entries[index];\n    let match = matches.find(m => (m == null ? void 0 : m.route.id) === routeId);\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n    let currentMatch = currentMatches.find(m => m.route.id === match.route.id);\n    let isRevalidatingLoader = currentMatch != null && !isNewRouteInstance(currentMatch, match) && (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n    if (isDeferredResult(result) && isRevalidatingLoader) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      await resolveDeferredData(result, signal, false).then(result => {\n        if (result) {\n          results[routeId] = result;\n        }\n      });\n    }\n  }\n}\nasync function resolveFetcherDeferredResults(matches, results, revalidatingFetchers) {\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let {\n      key,\n      routeId,\n      controller\n    } = revalidatingFetchers[index];\n    let result = results[key];\n    let match = matches.find(m => (m == null ? void 0 : m.route.id) === routeId);\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n    if (isDeferredResult(result)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      invariant(controller, \"Expected an AbortController for revalidating fetcher deferred result\");\n      await resolveDeferredData(result, controller.signal, true).then(result => {\n        if (result) {\n          results[key] = result;\n        }\n      });\n    }\n  }\n}\nasync function resolveDeferredData(result, signal, unwrap) {\n  if (unwrap === void 0) {\n    unwrap = false;\n  }\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e\n      };\n    }\n  }\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data\n  };\n}\nfunction hasNakedIndexQuery(search) {\n  return new URLSearchParams(search).getAll(\"index\").some(v => v === \"\");\n}\nfunction getTargetMatch(matches, location) {\n  let search = typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || \"\")) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  }\n  // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\nfunction getSubmissionFromNavigation(navigation) {\n  let {\n    formMethod,\n    formAction,\n    formEncType,\n    text,\n    formData,\n    json\n  } = navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json: undefined,\n      text\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: undefined,\n      text: undefined\n    };\n  } else if (json !== undefined) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json,\n      text: undefined\n    };\n  }\n}\nfunction getLoadingNavigation(location, submission) {\n  if (submission) {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text\n    };\n    return navigation;\n  } else {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined\n    };\n    return navigation;\n  }\n}\nfunction getSubmittingNavigation(location, submission) {\n  let navigation = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text\n  };\n  return navigation;\n}\nfunction getLoadingFetcher(submission, data) {\n  if (submission) {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data\n    };\n    return fetcher;\n  } else {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n      data\n    };\n    return fetcher;\n  }\n}\nfunction getSubmittingFetcher(submission, existingFetcher) {\n  let fetcher = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : undefined\n  };\n  return fetcher;\n}\nfunction getDoneFetcher(data) {\n  let fetcher = {\n    state: \"idle\",\n    formMethod: undefined,\n    formAction: undefined,\n    formEncType: undefined,\n    formData: undefined,\n    json: undefined,\n    text: undefined,\n    data\n  };\n  return fetcher;\n}\nfunction restoreAppliedTransitions(_window, transitions) {\n  try {\n    let sessionPositions = _window.sessionStorage.getItem(TRANSITIONS_STORAGE_KEY);\n    if (sessionPositions) {\n      let json = JSON.parse(sessionPositions);\n      for (let [k, v] of Object.entries(json || {})) {\n        if (v && Array.isArray(v)) {\n          transitions.set(k, new Set(v || []));\n        }\n      }\n    }\n  } catch (e) {\n    // no-op, use default empty object\n  }\n}\nfunction persistAppliedTransitions(_window, transitions) {\n  if (transitions.size > 0) {\n    let json = {};\n    for (let [k, v] of transitions) {\n      json[k] = [...v];\n    }\n    try {\n      _window.sessionStorage.setItem(TRANSITIONS_STORAGE_KEY, JSON.stringify(json));\n    } catch (error) {\n      warning(false, \"Failed to save applied view transitions in sessionStorage (\" + error + \").\");\n    }\n  }\n}\n//#endregion\n\nexport { AbortedDeferredError, Action, IDLE_BLOCKER, IDLE_FETCHER, IDLE_NAVIGATION, UNSAFE_DEFERRED_SYMBOL, DeferredData as UNSAFE_DeferredData, ErrorResponseImpl as UNSAFE_ErrorResponseImpl, convertRouteMatchToUiMatch as UNSAFE_convertRouteMatchToUiMatch, convertRoutesToDataRoutes as UNSAFE_convertRoutesToDataRoutes, decodePath as UNSAFE_decodePath, getResolveToMatches as UNSAFE_getResolveToMatches, invariant as UNSAFE_invariant, warning as UNSAFE_warning, createBrowserHistory, createHashHistory, createMemoryHistory, createPath, createRouter, createStaticHandler, data, defer, generatePath, getStaticContextFromError, getToPathname, isDataWithResponseInit, isDeferredData, isRouteErrorResponse, joinPaths, json, matchPath, matchRoutes, normalizePathname, parsePath, redirect, redirectDocument, replace, resolvePath, resolveTo, stripBasename };\n//# sourceMappingURL=router.js.map\n","/**\n * React Router v6.30.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { UNSAFE_invariant, joinPaths, matchPath, UNSAFE_decodePath, UNSAFE_getResolveToMatches, UNSAFE_warning, resolveTo, parsePath, matchRoutes, Action, UNSAFE_convertRouteMatchToUiMatch, stripBasename, IDLE_BLOCKER, isRouteErrorResponse, createMemoryHistory, AbortedDeferredError, createRouter } from '@remix-run/router';\nexport { AbortedDeferredError, Action as NavigationType, createPath, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, redirectDocument, replace, resolvePath } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nconst DataRouterContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterContext.displayName = \"DataRouter\";\n}\nconst DataRouterStateContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\nconst AwaitContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  AwaitContext.displayName = \"Await\";\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level `<Router>` API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\n\nconst NavigationContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  NavigationContext.displayName = \"Navigation\";\n}\nconst LocationContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  LocationContext.displayName = \"Location\";\n}\nconst RouteContext = /*#__PURE__*/React.createContext({\n  outlet: null,\n  matches: [],\n  isDataRoute: false\n});\nif (process.env.NODE_ENV !== \"production\") {\n  RouteContext.displayName = \"Route\";\n}\nconst RouteErrorContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/v6/hooks/use-href\n */\nfunction useHref(to, _temp) {\n  let {\n    relative\n  } = _temp === void 0 ? {} : _temp;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useHref() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    basename,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    hash,\n    pathname,\n    search\n  } = useResolvedPath(to, {\n    relative\n  });\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname = pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n  return navigator.createHref({\n    pathname: joinedPathname,\n    search,\n    hash\n  });\n}\n\n/**\n * Returns true if this component is a descendant of a `<Router>`.\n *\n * @see https://reactrouter.com/v6/hooks/use-in-router-context\n */\nfunction useInRouterContext() {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/v6/hooks/use-location\n */\nfunction useLocation() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useLocation() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/v6/hooks/use-navigation-type\n */\nfunction useNavigationType() {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * `<NavLink>`.\n *\n * @see https://reactrouter.com/v6/hooks/use-match\n */\nfunction useMatch(pattern) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useMatch() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    pathname\n  } = useLocation();\n  return React.useMemo(() => matchPath(pattern, UNSAFE_decodePath(pathname)), [pathname, pattern]);\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\n\nconst navigateEffectWarning = \"You should call navigate() in a React.useEffect(), not when \" + \"your component is first rendered.\";\n\n// Mute warnings for calls to useNavigate in SSR environments\nfunction useIsomorphicLayoutEffect(cb) {\n  let isStatic = React.useContext(NavigationContext).static;\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n\n/**\n * Returns an imperative method for changing the location. Used by `<Link>`s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/v6/hooks/use-navigate\n */\nfunction useNavigate() {\n  let {\n    isDataRoute\n  } = React.useContext(RouteContext);\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\nfunction useNavigateUnstable() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useNavigate() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let dataRouterContext = React.useContext(DataRouterContext);\n  let {\n    basename,\n    future,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getResolveToMatches(matches, future.v7_relativeSplatPath));\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0;\n\n    // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our history listener yet\n    if (!activeRef.current) return;\n    if (typeof to === \"number\") {\n      navigator.go(to);\n      return;\n    }\n    let path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, options.relative === \"path\");\n\n    // If we're operating within a basename, prepend it to the pathname prior\n    // to handing off to history (but only if we're not in a data router,\n    // otherwise it'll prepend the basename inside of the router).\n    // If this is a root navigation, then we navigate to the raw basename\n    // which allows the basename to have full control over the presence of a\n    // trailing slash on root links\n    if (dataRouterContext == null && basename !== \"/\") {\n      path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n    }\n    (!!options.replace ? navigator.replace : navigator.push)(path, options.state, options);\n  }, [basename, navigator, routePathnamesJson, locationPathname, dataRouterContext]);\n  return navigate;\n}\nconst OutletContext = /*#__PURE__*/React.createContext(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/v6/hooks/use-outlet-context\n */\nfunction useOutletContext() {\n  return React.useContext(OutletContext);\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by `<Outlet>` to render child routes.\n *\n * @see https://reactrouter.com/v6/hooks/use-outlet\n */\nfunction useOutlet(context) {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return /*#__PURE__*/React.createElement(OutletContext.Provider, {\n      value: context\n    }, outlet);\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/v6/hooks/use-params\n */\nfunction useParams() {\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? routeMatch.params : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/v6/hooks/use-resolved-path\n */\nfunction useResolvedPath(to, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    future\n  } = React.useContext(NavigationContext);\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getResolveToMatches(matches, future.v7_relativeSplatPath));\n  return React.useMemo(() => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, relative === \"path\"), [to, routePathnamesJson, locationPathname, relative]);\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an `<Outlet>` to render their child route's\n * element.\n *\n * @see https://reactrouter.com/v6/hooks/use-routes\n */\nfunction useRoutes(routes, locationArg) {\n  return useRoutesImpl(routes, locationArg);\n}\n\n// Internal implementation with accept optional param for RouterProvider usage\nfunction useRoutesImpl(routes, locationArg, dataRouterState, future) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useRoutes() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches: parentMatches\n  } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n  if (process.env.NODE_ENV !== \"production\") {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(parentPathname, !parentRoute || parentPath.endsWith(\"*\"), \"You rendered descendant <Routes> (or called `useRoutes()`) at \" + (\"\\\"\" + parentPathname + \"\\\" (under <Route path=\\\"\" + parentPath + \"\\\">) but the \") + \"parent route path has no trailing \\\"*\\\". This means if you navigate \" + \"deeper, the parent won't match anymore and therefore the child \" + \"routes will never render.\\n\\n\" + (\"Please change the parent <Route path=\\\"\" + parentPath + \"\\\"> to <Route \") + (\"path=\\\"\" + (parentPath === \"/\" ? \"*\" : parentPath + \"/*\") + \"\\\">.\"));\n  }\n  let locationFromContext = useLocation();\n  let location;\n  if (locationArg) {\n    var _parsedLocationArg$pa;\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    !(parentPathnameBase === \"/\" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, \" + \"the location pathname must begin with the portion of the URL pathname that was \" + (\"matched by all parent routes. The current pathname base is \\\"\" + parentPathnameBase + \"\\\" \") + (\"but pathname \\\"\" + parsedLocationArg.pathname + \"\\\" was given in the `location` prop.\")) : UNSAFE_invariant(false) : void 0;\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n  let pathname = location.pathname || \"/\";\n  let remainingPathname = pathname;\n  if (parentPathnameBase !== \"/\") {\n    // Determine the remaining pathname by removing the # of URL segments the\n    // parentPathnameBase has, instead of removing based on character count.\n    // This is because we can't guarantee that incoming/outgoing encodings/\n    // decodings will match exactly.\n    // We decode paths before matching on a per-segment basis with\n    // decodeURIComponent(), but we re-encode pathnames via `new URL()` so they\n    // match what `window.location.pathname` would reflect.  Those don't 100%\n    // align when it comes to encoded URI characters such as % and &.\n    //\n    // So we may end up with:\n    //   pathname:           \"/descendant/a%25b/match\"\n    //   parentPathnameBase: \"/descendant/a%b\"\n    //\n    // And the direct substring removal approach won't work :/\n    let parentSegments = parentPathnameBase.replace(/^\\//, \"\").split(\"/\");\n    let segments = pathname.replace(/^\\//, \"\").split(\"/\");\n    remainingPathname = \"/\" + segments.slice(parentSegments.length).join(\"/\");\n  }\n  let matches = matchRoutes(routes, {\n    pathname: remainingPathname\n  });\n  if (process.env.NODE_ENV !== \"production\") {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(parentRoute || matches != null, \"No routes matched location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \") : void 0;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(matches == null || matches[matches.length - 1].route.element !== undefined || matches[matches.length - 1].route.Component !== undefined || matches[matches.length - 1].route.lazy !== undefined, \"Matched leaf route at location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \" + \"does not have an element or Component. This means it will render an <Outlet /> with a \" + \"null value by default resulting in an \\\"empty\\\" page.\") : void 0;\n  }\n  let renderedMatches = _renderMatches(matches && matches.map(match => Object.assign({}, match, {\n    params: Object.assign({}, parentParams, match.params),\n    pathname: joinPaths([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathname).pathname : match.pathname]),\n    pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathnameBase).pathname : match.pathnameBase])\n  })), parentMatches, dataRouterState, future);\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return /*#__PURE__*/React.createElement(LocationContext.Provider, {\n      value: {\n        location: _extends({\n          pathname: \"/\",\n          search: \"\",\n          hash: \"\",\n          state: null,\n          key: \"default\"\n        }, location),\n        navigationType: Action.Pop\n      }\n    }, renderedMatches);\n  }\n  return renderedMatches;\n}\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error) ? error.status + \" \" + error.statusText : error instanceof Error ? error.message : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = {\n    padding: \"0.5rem\",\n    backgroundColor: lightgrey\n  };\n  let codeStyles = {\n    padding: \"2px 4px\",\n    backgroundColor: lightgrey\n  };\n  let devInfo = null;\n  if (process.env.NODE_ENV !== \"production\") {\n    console.error(\"Error handled by React Router default ErrorBoundary:\", error);\n    devInfo = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", null, \"\\uD83D\\uDCBF Hey developer \\uD83D\\uDC4B\"), /*#__PURE__*/React.createElement(\"p\", null, \"You can provide a way better UX than this when your app throws errors by providing your own \", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"ErrorBoundary\"), \" or\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"errorElement\"), \" prop on your route.\"));\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", null, \"Unexpected Application Error!\"), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, message), stack ? /*#__PURE__*/React.createElement(\"pre\", {\n    style: preStyles\n  }, stack) : null, devInfo);\n}\nconst defaultErrorElement = /*#__PURE__*/React.createElement(DefaultErrorComponent, null);\nclass RenderErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error: error\n    };\n  }\n  static getDerivedStateFromProps(props, state) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (state.location !== props.location || state.revalidation !== \"idle\" && props.revalidation === \"idle\") {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error !== undefined ? props.error : state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\"React Router caught the following error during render\", error, errorInfo);\n  }\n  render() {\n    return this.state.error !== undefined ? /*#__PURE__*/React.createElement(RouteContext.Provider, {\n      value: this.props.routeContext\n    }, /*#__PURE__*/React.createElement(RouteErrorContext.Provider, {\n      value: this.state.error,\n      children: this.props.component\n    })) : this.props.children;\n  }\n}\nfunction RenderedRoute(_ref) {\n  let {\n    routeContext,\n    match,\n    children\n  } = _ref;\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n  return /*#__PURE__*/React.createElement(RouteContext.Provider, {\n    value: routeContext\n  }, children);\n}\nfunction _renderMatches(matches, parentMatches, dataRouterState, future) {\n  var _dataRouterState;\n  if (parentMatches === void 0) {\n    parentMatches = [];\n  }\n  if (dataRouterState === void 0) {\n    dataRouterState = null;\n  }\n  if (future === void 0) {\n    future = null;\n  }\n  if (matches == null) {\n    var _future;\n    if (!dataRouterState) {\n      return null;\n    }\n    if (dataRouterState.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches;\n    } else if ((_future = future) != null && _future.v7_partialHydration && parentMatches.length === 0 && !dataRouterState.initialized && dataRouterState.matches.length > 0) {\n      // Don't bail if we're initializing with partial hydration and we have\n      // router matches.  That means we're actively running `patchRoutesOnNavigation`\n      // so we should render down the partial matches to the appropriate\n      // `HydrateFallback`.  We only do this if `parentMatches` is empty so it\n      // only impacts the root matches for `RouterProvider` and no descendant\n      // `<Routes>`\n      matches = dataRouterState.matches;\n    } else {\n      return null;\n    }\n  }\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = (_dataRouterState = dataRouterState) == null ? void 0 : _dataRouterState.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(m => m.route.id && (errors == null ? void 0 : errors[m.route.id]) !== undefined);\n    !(errorIndex >= 0) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"Could not find a matching route for errors on route IDs: \" + Object.keys(errors).join(\",\")) : UNSAFE_invariant(false) : void 0;\n    renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));\n  }\n\n  // If we're in a partial hydration mode, detect if we need to render down to\n  // a given HydrateFallback while we load the rest of the hydration data\n  let renderFallback = false;\n  let fallbackIndex = -1;\n  if (dataRouterState && future && future.v7_partialHydration) {\n    for (let i = 0; i < renderedMatches.length; i++) {\n      let match = renderedMatches[i];\n      // Track the deepest fallback up until the first route without data\n      if (match.route.HydrateFallback || match.route.hydrateFallbackElement) {\n        fallbackIndex = i;\n      }\n      if (match.route.id) {\n        let {\n          loaderData,\n          errors\n        } = dataRouterState;\n        let needsToRunLoader = match.route.loader && loaderData[match.route.id] === undefined && (!errors || errors[match.route.id] === undefined);\n        if (match.route.lazy || needsToRunLoader) {\n          // We found the first route that's not ready to render (waiting on\n          // lazy, or has a loader that hasn't run yet).  Flag that we need to\n          // render a fallback and render up until the appropriate fallback\n          renderFallback = true;\n          if (fallbackIndex >= 0) {\n            renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);\n          } else {\n            renderedMatches = [renderedMatches[0]];\n          }\n          break;\n        }\n      }\n    }\n  }\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    // Only data routers handle errors/fallbacks\n    let error;\n    let shouldRenderHydrateFallback = false;\n    let errorElement = null;\n    let hydrateFallbackElement = null;\n    if (dataRouterState) {\n      error = errors && match.route.id ? errors[match.route.id] : undefined;\n      errorElement = match.route.errorElement || defaultErrorElement;\n      if (renderFallback) {\n        if (fallbackIndex < 0 && index === 0) {\n          warningOnce(\"route-fallback\", false, \"No `HydrateFallback` element provided to render during initial hydration\");\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = null;\n        } else if (fallbackIndex === index) {\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = match.route.hydrateFallbackElement || null;\n        }\n      }\n    }\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children;\n      if (error) {\n        children = errorElement;\n      } else if (shouldRenderHydrateFallback) {\n        children = hydrateFallbackElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = /*#__PURE__*/React.createElement(match.route.Component, null);\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return /*#__PURE__*/React.createElement(RenderedRoute, {\n        match: match,\n        routeContext: {\n          outlet,\n          matches,\n          isDataRoute: dataRouterState != null\n        },\n        children: children\n      });\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /*#__PURE__*/React.createElement(RenderErrorBoundary, {\n      location: dataRouterState.location,\n      revalidation: dataRouterState.revalidation,\n      component: errorElement,\n      error: error,\n      children: getChildren(),\n      routeContext: {\n        outlet: null,\n        matches,\n        isDataRoute: true\n      }\n    }) : getChildren();\n  }, null);\n}\nvar DataRouterHook = /*#__PURE__*/function (DataRouterHook) {\n  DataRouterHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterHook[\"UseNavigateStable\"] = \"useNavigate\";\n  return DataRouterHook;\n}(DataRouterHook || {});\nvar DataRouterStateHook = /*#__PURE__*/function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterStateHook[\"UseLoaderData\"] = \"useLoaderData\";\n  DataRouterStateHook[\"UseActionData\"] = \"useActionData\";\n  DataRouterStateHook[\"UseRouteError\"] = \"useRouteError\";\n  DataRouterStateHook[\"UseNavigation\"] = \"useNavigation\";\n  DataRouterStateHook[\"UseRouteLoaderData\"] = \"useRouteLoaderData\";\n  DataRouterStateHook[\"UseMatches\"] = \"useMatches\";\n  DataRouterStateHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterStateHook[\"UseNavigateStable\"] = \"useNavigate\";\n  DataRouterStateHook[\"UseRouteId\"] = \"useRouteId\";\n  return DataRouterStateHook;\n}(DataRouterStateHook || {});\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/v6/routers/picking-a-router.\";\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\nfunction useRouteContext(hookName) {\n  let route = React.useContext(RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return route;\n}\n\n// Internal version with hookName-aware debugging\nfunction useCurrentRouteId(hookName) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  !thisRoute.route.id ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, hookName + \" can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the ID for the nearest contextual route\n */\nfunction useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nfunction useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nfunction useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return React.useMemo(() => ({\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation\n  }), [dataRouterContext.router.revalidate, state.revalidation]);\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nfunction useMatches() {\n  let {\n    matches,\n    loaderData\n  } = useDataRouterState(DataRouterStateHook.UseMatches);\n  return React.useMemo(() => matches.map(m => UNSAFE_convertRouteMatchToUiMatch(m, loaderData)), [matches, loaderData]);\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nfunction useLoaderData() {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\"You cannot `useLoaderData` in an errorElement (routeId: \" + routeId + \")\");\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nfunction useRouteLoaderData(routeId) {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nfunction useActionData() {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  return state.actionData ? state.actionData[routeId] : undefined;\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nfunction useRouteError() {\n  var _state$errors;\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error !== undefined) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return (_state$errors = state.errors) == null ? void 0 : _state$errors[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor `<Await />` value\n */\nfunction useAsyncValue() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._data;\n}\n\n/**\n * Returns the error from the nearest ancestor `<Await />` value\n */\nfunction useAsyncError() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._error;\n}\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nfunction useBlocker(shouldBlock) {\n  let {\n    router,\n    basename\n  } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n  let [blockerKey, setBlockerKey] = React.useState(\"\");\n  let blockerFunction = React.useCallback(arg => {\n    if (typeof shouldBlock !== \"function\") {\n      return !!shouldBlock;\n    }\n    if (basename === \"/\") {\n      return shouldBlock(arg);\n    }\n\n    // If they provided us a function and we've got an active basename, strip\n    // it from the locations we expose to the user to match the behavior of\n    // useLocation\n    let {\n      currentLocation,\n      nextLocation,\n      historyAction\n    } = arg;\n    return shouldBlock({\n      currentLocation: _extends({}, currentLocation, {\n        pathname: stripBasename(currentLocation.pathname, basename) || currentLocation.pathname\n      }),\n      nextLocation: _extends({}, nextLocation, {\n        pathname: stripBasename(nextLocation.pathname, basename) || nextLocation.pathname\n      }),\n      historyAction\n    });\n  }, [basename, shouldBlock]);\n\n  // This effect is in charge of blocker key assignment and deletion (which is\n  // tightly coupled to the key)\n  React.useEffect(() => {\n    let key = String(++blockerId);\n    setBlockerKey(key);\n    return () => router.deleteBlocker(key);\n  }, [router]);\n\n  // This effect handles assigning the blockerFunction.  This is to handle\n  // unstable blocker function identities, and happens only after the prior\n  // effect so we don't get an orphaned blockerFunction in the router with a\n  // key of \"\".  Until then we just have the IDLE_BLOCKER.\n  React.useEffect(() => {\n    if (blockerKey !== \"\") {\n      router.getBlocker(blockerKey, blockerFunction);\n    }\n  }, [router, blockerKey, blockerFunction]);\n\n  // Prefer the blocker from `state` not `router.state` since DataRouterContext\n  // is memoized so this ensures we update on blocker state updates\n  return blockerKey && state.blockers.has(blockerKey) ? state.blockers.get(blockerKey) : IDLE_BLOCKER;\n}\n\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\nfunction useNavigateStable() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0;\n\n    // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our router subscriber yet\n    if (!activeRef.current) return;\n    if (typeof to === \"number\") {\n      router.navigate(to);\n    } else {\n      router.navigate(to, _extends({\n        fromRouteId: id\n      }, options));\n    }\n  }, [router, id]);\n  return navigate;\n}\nconst alreadyWarned$1 = {};\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned$1[key]) {\n    alreadyWarned$1[key] = true;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, message) : void 0;\n  }\n}\n\nconst alreadyWarned = {};\nfunction warnOnce(key, message) {\n  if (process.env.NODE_ENV !== \"production\" && !alreadyWarned[message]) {\n    alreadyWarned[message] = true;\n    console.warn(message);\n  }\n}\nconst logDeprecation = (flag, msg, link) => warnOnce(flag, \"\\u26A0\\uFE0F React Router Future Flag Warning: \" + msg + \". \" + (\"You can use the `\" + flag + \"` future flag to opt-in early. \") + (\"For more information, see \" + link + \".\"));\nfunction logV6DeprecationWarnings(renderFuture, routerFuture) {\n  if ((renderFuture == null ? void 0 : renderFuture.v7_startTransition) === undefined) {\n    logDeprecation(\"v7_startTransition\", \"React Router will begin wrapping state updates in `React.startTransition` in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_starttransition\");\n  }\n  if ((renderFuture == null ? void 0 : renderFuture.v7_relativeSplatPath) === undefined && (!routerFuture || routerFuture.v7_relativeSplatPath === undefined)) {\n    logDeprecation(\"v7_relativeSplatPath\", \"Relative route resolution within Splat routes is changing in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_relativesplatpath\");\n  }\n  if (routerFuture) {\n    if (routerFuture.v7_fetcherPersist === undefined) {\n      logDeprecation(\"v7_fetcherPersist\", \"The persistence behavior of fetchers is changing in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_fetcherpersist\");\n    }\n    if (routerFuture.v7_normalizeFormMethod === undefined) {\n      logDeprecation(\"v7_normalizeFormMethod\", \"Casing of `formMethod` fields is being normalized to uppercase in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_normalizeformmethod\");\n    }\n    if (routerFuture.v7_partialHydration === undefined) {\n      logDeprecation(\"v7_partialHydration\", \"`RouterProvider` hydration behavior is changing in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_partialhydration\");\n    }\n    if (routerFuture.v7_skipActionErrorRevalidation === undefined) {\n      logDeprecation(\"v7_skipActionErrorRevalidation\", \"The revalidation behavior after 4xx/5xx `action` responses is changing in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_skipactionerrorrevalidation\");\n    }\n  }\n}\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router,\n    future\n  } = _ref;\n  let [state, setStateImpl] = React.useState(router.state);\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    if (v7_startTransition && startTransitionImpl) {\n      startTransitionImpl(() => setStateImpl(newState));\n    } else {\n      setStateImpl(newState);\n    }\n  }, [setStateImpl, v7_startTransition]);\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n  React.useEffect(() => {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(fallbackElement == null || !router.future.v7_partialHydration, \"`<RouterProvider fallbackElement>` is deprecated when using \" + \"`v7_partialHydration`, use a `HydrateFallback` component instead\") : void 0;\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React.useMemo(() => ({\n    router,\n    navigator,\n    static: false,\n    basename\n  }), [router, navigator, basename]);\n  React.useEffect(() => logV6DeprecationWarnings(future, router.future), [router, future]);\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: navigator,\n    future: {\n      v7_relativeSplatPath: router.future.v7_relativeSplatPath\n    }\n  }, state.initialized || router.future.v7_partialHydration ? /*#__PURE__*/React.createElement(DataRoutes, {\n    routes: router.routes,\n    future: router.future,\n    state: state\n  }) : fallbackElement))), null);\n}\nfunction DataRoutes(_ref2) {\n  let {\n    routes,\n    future,\n    state\n  } = _ref2;\n  return useRoutesImpl(routes, undefined, state, future);\n}\n/**\n * A `<Router>` that stores all entries in memory.\n *\n * @see https://reactrouter.com/v6/router-components/memory-router\n */\nfunction MemoryRouter(_ref3) {\n  let {\n    basename,\n    children,\n    initialEntries,\n    initialIndex,\n    future\n  } = _ref3;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  React.useEffect(() => logV6DeprecationWarnings(future), [future]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/v6/components/navigate\n */\nfunction Navigate(_ref4) {\n  let {\n    to,\n    replace,\n    state,\n    relative\n  } = _ref4;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of\n  // the router loaded. We can help them understand how to avoid that.\n  \"<Navigate> may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    future,\n    static: isStatic\n  } = React.useContext(NavigationContext);\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(!isStatic, \"<Navigate> must not be used on the initial render in a <StaticRouter>. \" + \"This is a no-op, but you should modify your code so the <Navigate> is \" + \"only ever rendered in response to some user interaction or state change.\") : void 0;\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let navigate = useNavigate();\n\n  // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n  let path = resolveTo(to, UNSAFE_getResolveToMatches(matches, future.v7_relativeSplatPath), locationPathname, relative === \"path\");\n  let jsonPath = JSON.stringify(path);\n  React.useEffect(() => navigate(JSON.parse(jsonPath), {\n    replace,\n    state,\n    relative\n  }), [navigate, jsonPath, relative, replace, state]);\n  return null;\n}\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/v6/components/outlet\n */\nfunction Outlet(props) {\n  return useOutlet(props.context);\n}\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/v6/components/route\n */\nfunction Route(_props) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"A <Route> is only ever to be used as the child of <Routes> element, \" + \"never rendered directly. Please wrap your <Route> in a <Routes>.\") : UNSAFE_invariant(false) ;\n}\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a `<Router>` directly. Instead, you'll render a\n * router that is more specific to your environment such as a `<BrowserRouter>`\n * in web browsers or a `<StaticRouter>` for server rendering.\n *\n * @see https://reactrouter.com/v6/router-components/router\n */\nfunction Router(_ref5) {\n  let {\n    basename: basenameProp = \"/\",\n    children = null,\n    location: locationProp,\n    navigationType = Action.Pop,\n    navigator,\n    static: staticProp = false,\n    future\n  } = _ref5;\n  !!useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"You cannot render a <Router> inside another <Router>.\" + \" You should never have more than one in your app.\") : UNSAFE_invariant(false) : void 0;\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(() => ({\n    basename,\n    navigator,\n    static: staticProp,\n    future: _extends({\n      v7_relativeSplatPath: false\n    }, future)\n  }), [basename, future, navigator, staticProp]);\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\"\n  } = locationProp;\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n    if (trailingPathname == null) {\n      return null;\n    }\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key\n      },\n      navigationType\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(locationContext != null, \"<Router basename=\\\"\" + basename + \"\\\"> is not able to match the URL \" + (\"\\\"\" + pathname + search + hash + \"\\\" because it does not start with the \") + \"basename, so the <Router> won't render anything.\") : void 0;\n  if (locationContext == null) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(NavigationContext.Provider, {\n    value: navigationContext\n  }, /*#__PURE__*/React.createElement(LocationContext.Provider, {\n    children: children,\n    value: locationContext\n  }));\n}\n/**\n * A container for a nested tree of `<Route>` elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/v6/components/routes\n */\nfunction Routes(_ref6) {\n  let {\n    children,\n    location\n  } = _ref6;\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nfunction Await(_ref7) {\n  let {\n    children,\n    errorElement,\n    resolve\n  } = _ref7;\n  return /*#__PURE__*/React.createElement(AwaitErrorBoundary, {\n    resolve: resolve,\n    errorElement: errorElement\n  }, /*#__PURE__*/React.createElement(ResolveAwait, null, children));\n}\nvar AwaitRenderStatus = /*#__PURE__*/function (AwaitRenderStatus) {\n  AwaitRenderStatus[AwaitRenderStatus[\"pending\"] = 0] = \"pending\";\n  AwaitRenderStatus[AwaitRenderStatus[\"success\"] = 1] = \"success\";\n  AwaitRenderStatus[AwaitRenderStatus[\"error\"] = 2] = \"error\";\n  return AwaitRenderStatus;\n}(AwaitRenderStatus || {});\nconst neverSettledPromise = new Promise(() => {});\nclass AwaitErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\"<Await> caught the following error during render\", error, errorInfo);\n  }\n  render() {\n    let {\n      children,\n      errorElement,\n      resolve\n    } = this.props;\n    let promise = null;\n    let status = AwaitRenderStatus.pending;\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_data\", {\n        get: () => resolve\n      });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_error\", {\n        get: () => renderError\n      });\n    } else if (resolve._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status = \"_error\" in promise ? AwaitRenderStatus.error : \"_data\" in promise ? AwaitRenderStatus.success : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", {\n        get: () => true\n      });\n      promise = resolve.then(data => Object.defineProperty(resolve, \"_data\", {\n        get: () => data\n      }), error => Object.defineProperty(resolve, \"_error\", {\n        get: () => error\n      }));\n    }\n    if (status === AwaitRenderStatus.error && promise._error instanceof AbortedDeferredError) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: errorElement\n      });\n    }\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: children\n      });\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on `<Await>`\n */\nfunction ResolveAwait(_ref8) {\n  let {\n    children\n  } = _ref8;\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, toRender);\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/v6/utils/create-routes-from-children\n */\nfunction createRoutesFromChildren(children, parentPath) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n  let routes = [];\n  React.Children.forEach(children, (element, index) => {\n    if (! /*#__PURE__*/React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n    let treePath = [...parentPath, index];\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(routes, createRoutesFromChildren(element.props.children, treePath));\n      return;\n    }\n    !(element.type === Route) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"[\" + (typeof element.type === \"string\" ? element.type : element.type.name) + \"] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>\") : UNSAFE_invariant(false) : void 0;\n    !(!element.props.index || !element.props.children) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"An index route cannot have child routes.\") : UNSAFE_invariant(false) : void 0;\n    let route = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary: element.props.ErrorBoundary != null || element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy\n    };\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(element.props.children, treePath);\n    }\n    routes.push(route);\n  });\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nfunction renderMatches(matches) {\n  return _renderMatches(matches);\n}\n\nfunction mapRouteProperties(route) {\n  let updates = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.ErrorBoundary != null || route.errorElement != null\n  };\n  if (route.Component) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.element) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `Component` and `element` on your route - \" + \"`Component` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      element: /*#__PURE__*/React.createElement(route.Component),\n      Component: undefined\n    });\n  }\n  if (route.HydrateFallback) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.hydrateFallbackElement) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `HydrateFallback` and `hydrateFallbackElement` on your route - \" + \"`HydrateFallback` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      hydrateFallbackElement: /*#__PURE__*/React.createElement(route.HydrateFallback),\n      HydrateFallback: undefined\n    });\n  }\n  if (route.ErrorBoundary) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.errorElement) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `ErrorBoundary` and `errorElement` on your route - \" + \"`ErrorBoundary` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      errorElement: /*#__PURE__*/React.createElement(route.ErrorBoundary),\n      ErrorBoundary: undefined\n    });\n  }\n  return updates;\n}\nfunction createMemoryRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createMemoryHistory({\n      initialEntries: opts == null ? void 0 : opts.initialEntries,\n      initialIndex: opts == null ? void 0 : opts.initialIndex\n    }),\n    hydrationData: opts == null ? void 0 : opts.hydrationData,\n    routes,\n    mapRouteProperties,\n    dataStrategy: opts == null ? void 0 : opts.dataStrategy,\n    patchRoutesOnNavigation: opts == null ? void 0 : opts.patchRoutesOnNavigation\n  }).initialize();\n}\n\nexport { Await, MemoryRouter, Navigate, Outlet, Route, Router, RouterProvider, Routes, DataRouterContext as UNSAFE_DataRouterContext, DataRouterStateContext as UNSAFE_DataRouterStateContext, LocationContext as UNSAFE_LocationContext, NavigationContext as UNSAFE_NavigationContext, RouteContext as UNSAFE_RouteContext, logV6DeprecationWarnings as UNSAFE_logV6DeprecationWarnings, mapRouteProperties as UNSAFE_mapRouteProperties, useRouteId as UNSAFE_useRouteId, useRoutesImpl as UNSAFE_useRoutesImpl, createMemoryRouter, createRoutesFromChildren, createRoutesFromChildren as createRoutesFromElements, renderMatches, useActionData, useAsyncError, useAsyncValue, useBlocker, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes };\n//# sourceMappingURL=index.js.map\n","/**\n * React Router DOM v6.30.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { UNSAFE_mapRouteProperties, UNSAFE_logV6DeprecationWarnings, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, Router, UNSAFE_useRoutesImpl, UNSAFE_NavigationContext, useHref, useResolvedPath, useLocation, useNavigate, createPath, UNSAFE_useRouteId, UNSAFE_RouteContext, useMatches, useNavigation, useBlocker } from 'react-router';\nexport { AbortedDeferredError, Await, MemoryRouter, Navigate, NavigationType, Outlet, Route, Router, Routes, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, UNSAFE_LocationContext, UNSAFE_NavigationContext, UNSAFE_RouteContext, UNSAFE_useRouteId, createMemoryRouter, createPath, createRoutesFromChildren, createRoutesFromElements, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, redirectDocument, renderMatches, replace, resolvePath, useActionData, useAsyncError, useAsyncValue, useBlocker, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes } from 'react-router';\nimport { stripBasename, UNSAFE_warning, createRouter, createBrowserHistory, createHashHistory, UNSAFE_ErrorResponseImpl, UNSAFE_invariant, joinPaths, IDLE_FETCHER, matchPath } from '@remix-run/router';\nexport { UNSAFE_ErrorResponseImpl } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n\nconst defaultMethod = \"get\";\nconst defaultEncType = \"application/x-www-form-urlencoded\";\nfunction isHtmlElement(object) {\n  return object != null && typeof object.tagName === \"string\";\n}\nfunction isButtonElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\nfunction isFormElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\nfunction isInputElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\nfunction shouldProcessLinkClick(event, target) {\n  return event.button === 0 && (\n  // Ignore everything but left clicks\n  !target || target === \"_self\") &&\n  // Let browser handle \"target=_blank\" etc.\n  !isModifiedEvent(event) // Ignore clicks with modifier keys\n  ;\n}\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nfunction createSearchParams(init) {\n  if (init === void 0) {\n    init = \"\";\n  }\n  return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo, key) => {\n    let value = init[key];\n    return memo.concat(Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]]);\n  }, []));\n}\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n  let searchParams = createSearchParams(locationSearch);\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach(value => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n  return searchParams;\n}\n// One-time check for submitter support\nlet _formDataSupportsSubmitter = null;\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(document.createElement(\"form\"),\n      // @ts-expect-error if FormData supports the submitter parameter, this will throw\n      0);\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\nconst supportedFormEncTypes = new Set([\"application/x-www-form-urlencoded\", \"multipart/form-data\", \"text/plain\"]);\nfunction getFormEncType(encType) {\n  if (encType != null && !supportedFormEncTypes.has(encType)) {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"\\\"\" + encType + \"\\\" is not a valid `encType` for `<Form>`/`<fetcher.Form>` \" + (\"and will default to \\\"\" + defaultEncType + \"\\\"\")) : void 0;\n    return null;\n  }\n  return encType;\n}\nfunction getFormSubmissionInfo(target, basename) {\n  let method;\n  let action;\n  let encType;\n  let formData;\n  let body;\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n    formData = new FormData(target);\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n    let form = target.form;\n    if (form == null) {\n      throw new Error(\"Cannot submit a <button> or <input type=\\\"submit\\\"> without a <form>\");\n    }\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"formenctype\")) || getFormEncType(form.getAttribute(\"enctype\")) || defaultEncType;\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let {\n        name,\n        type,\n        value\n      } = target;\n      if (type === \"image\") {\n        let prefix = name ? name + \".\" : \"\";\n        formData.append(prefix + \"x\", \"0\");\n        formData.append(prefix + \"y\", \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\"Cannot submit element that is not <form>, <button>, or \" + \"<input type=\\\"submit|image\\\">\");\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n  return {\n    action,\n    method: method.toLowerCase(),\n    encType,\n    formData,\n    body\n  };\n}\n\nconst _excluded = [\"onClick\", \"relative\", \"reloadDocument\", \"replace\", \"state\", \"target\", \"to\", \"preventScrollReset\", \"viewTransition\"],\n  _excluded2 = [\"aria-current\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\", \"viewTransition\", \"children\"],\n  _excluded3 = [\"fetcherKey\", \"navigate\", \"reloadDocument\", \"replace\", \"state\", \"method\", \"action\", \"onSubmit\", \"relative\", \"preventScrollReset\", \"viewTransition\"];\n// HEY YOU! DON'T TOUCH THIS VARIABLE!\n//\n// It is replaced with the proper version at build time via a babel plugin in\n// the rollup config.\n//\n// Export a global property onto the window for React Router detection by the\n// Core Web Vitals Technology Report.  This way they can configure the `wappalyzer`\n// to detect and properly classify live websites as being built with React Router:\n// https://github.com/HTTPArchive/wappalyzer/blob/main/src/technologies/r.json\nconst REACT_ROUTER_VERSION = \"6\";\ntry {\n  window.__reactRouterVersion = REACT_ROUTER_VERSION;\n} catch (e) {\n  // no-op\n}\nfunction createBrowserRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createBrowserHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties,\n    dataStrategy: opts == null ? void 0 : opts.dataStrategy,\n    patchRoutesOnNavigation: opts == null ? void 0 : opts.patchRoutesOnNavigation,\n    window: opts == null ? void 0 : opts.window\n  }).initialize();\n}\nfunction createHashRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createHashHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties,\n    dataStrategy: opts == null ? void 0 : opts.dataStrategy,\n    patchRoutesOnNavigation: opts == null ? void 0 : opts.patchRoutesOnNavigation,\n    window: opts == null ? void 0 : opts.window\n  }).initialize();\n}\nfunction parseHydrationData() {\n  var _window;\n  let state = (_window = window) == null ? void 0 : _window.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = _extends({}, state, {\n      errors: deserializeErrors(state.errors)\n    });\n  }\n  return state;\n}\nfunction deserializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new UNSAFE_ErrorResponseImpl(val.status, val.statusText, val.data, val.internal === true);\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message);\n            // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n            // no-op - fall through and create a normal Error\n          }\n        }\n      }\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\nconst ViewTransitionContext = /*#__PURE__*/React.createContext({\n  isTransitioning: false\n});\nif (process.env.NODE_ENV !== \"production\") {\n  ViewTransitionContext.displayName = \"ViewTransition\";\n}\nconst FetchersContext = /*#__PURE__*/React.createContext(new Map());\nif (process.env.NODE_ENV !== \"production\") {\n  FetchersContext.displayName = \"Fetchers\";\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\nconst FLUSH_SYNC = \"flushSync\";\nconst flushSyncImpl = ReactDOM[FLUSH_SYNC];\nconst USE_ID = \"useId\";\nconst useIdImpl = React[USE_ID];\nfunction startTransitionSafe(cb) {\n  if (startTransitionImpl) {\n    startTransitionImpl(cb);\n  } else {\n    cb();\n  }\n}\nfunction flushSyncSafe(cb) {\n  if (flushSyncImpl) {\n    flushSyncImpl(cb);\n  } else {\n    cb();\n  }\n}\nclass Deferred {\n  constructor() {\n    this.status = \"pending\";\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = value => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n      this.reject = reason => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n}\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router,\n    future\n  } = _ref;\n  let [state, setStateImpl] = React.useState(router.state);\n  let [pendingState, setPendingState] = React.useState();\n  let [vtContext, setVtContext] = React.useState({\n    isTransitioning: false\n  });\n  let [renderDfd, setRenderDfd] = React.useState();\n  let [transition, setTransition] = React.useState();\n  let [interruption, setInterruption] = React.useState();\n  let fetcherData = React.useRef(new Map());\n  let {\n    v7_startTransition\n  } = future || {};\n  let optInStartTransition = React.useCallback(cb => {\n    if (v7_startTransition) {\n      startTransitionSafe(cb);\n    } else {\n      cb();\n    }\n  }, [v7_startTransition]);\n  let setState = React.useCallback((newState, _ref2) => {\n    let {\n      deletedFetchers,\n      flushSync: flushSync,\n      viewTransitionOpts: viewTransitionOpts\n    } = _ref2;\n    newState.fetchers.forEach((fetcher, key) => {\n      if (fetcher.data !== undefined) {\n        fetcherData.current.set(key, fetcher.data);\n      }\n    });\n    deletedFetchers.forEach(key => fetcherData.current.delete(key));\n    let isViewTransitionUnavailable = router.window == null || router.window.document == null || typeof router.window.document.startViewTransition !== \"function\";\n    // If this isn't a view transition or it's not available in this browser,\n    // just update and be done with it\n    if (!viewTransitionOpts || isViewTransitionUnavailable) {\n      if (flushSync) {\n        flushSyncSafe(() => setStateImpl(newState));\n      } else {\n        optInStartTransition(() => setStateImpl(newState));\n      }\n      return;\n    }\n    // flushSync + startViewTransition\n    if (flushSync) {\n      // Flush through the context to mark DOM elements as transition=ing\n      flushSyncSafe(() => {\n        // Cancel any pending transitions\n        if (transition) {\n          renderDfd && renderDfd.resolve();\n          transition.skipTransition();\n        }\n        setVtContext({\n          isTransitioning: true,\n          flushSync: true,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation\n        });\n      });\n      // Update the DOM\n      let t = router.window.document.startViewTransition(() => {\n        flushSyncSafe(() => setStateImpl(newState));\n      });\n      // Clean up after the animation completes\n      t.finished.finally(() => {\n        flushSyncSafe(() => {\n          setRenderDfd(undefined);\n          setTransition(undefined);\n          setPendingState(undefined);\n          setVtContext({\n            isTransitioning: false\n          });\n        });\n      });\n      flushSyncSafe(() => setTransition(t));\n      return;\n    }\n    // startTransition + startViewTransition\n    if (transition) {\n      // Interrupting an in-progress transition, cancel and let everything flush\n      // out, and then kick off a new transition from the interruption state\n      renderDfd && renderDfd.resolve();\n      transition.skipTransition();\n      setInterruption({\n        state: newState,\n        currentLocation: viewTransitionOpts.currentLocation,\n        nextLocation: viewTransitionOpts.nextLocation\n      });\n    } else {\n      // Completed navigation update with opted-in view transitions, let 'er rip\n      setPendingState(newState);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: viewTransitionOpts.currentLocation,\n        nextLocation: viewTransitionOpts.nextLocation\n      });\n    }\n  }, [router.window, transition, renderDfd, fetcherData, optInStartTransition]);\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n  // When we start a view transition, create a Deferred we can use for the\n  // eventual \"completed\" render\n  React.useEffect(() => {\n    if (vtContext.isTransitioning && !vtContext.flushSync) {\n      setRenderDfd(new Deferred());\n    }\n  }, [vtContext]);\n  // Once the deferred is created, kick off startViewTransition() to update the\n  // DOM and then wait on the Deferred to resolve (indicating the DOM update has\n  // happened)\n  React.useEffect(() => {\n    if (renderDfd && pendingState && router.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition = router.window.document.startViewTransition(async () => {\n        optInStartTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition.finished.finally(() => {\n        setRenderDfd(undefined);\n        setTransition(undefined);\n        setPendingState(undefined);\n        setVtContext({\n          isTransitioning: false\n        });\n      });\n      setTransition(transition);\n    }\n  }, [optInStartTransition, pendingState, renderDfd, router.window]);\n  // When the new location finally renders and is committed to the DOM, this\n  // effect will run to resolve the transition\n  React.useEffect(() => {\n    if (renderDfd && pendingState && state.location.key === pendingState.location.key) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]);\n  // If we get interrupted with a new navigation during a transition, we skip\n  // the active transition, let it cleanup, then kick it off again here\n  React.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation\n      });\n      setInterruption(undefined);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n  React.useEffect(() => {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(fallbackElement == null || !router.future.v7_partialHydration, \"`<RouterProvider fallbackElement>` is deprecated when using \" + \"`v7_partialHydration`, use a `HydrateFallback` component instead\") : void 0;\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React.useMemo(() => ({\n    router,\n    navigator,\n    static: false,\n    basename\n  }), [router, navigator, basename]);\n  let routerFuture = React.useMemo(() => ({\n    v7_relativeSplatPath: router.future.v7_relativeSplatPath\n  }), [router.future.v7_relativeSplatPath]);\n  React.useEffect(() => UNSAFE_logV6DeprecationWarnings(future, router.future), [future, router.future]);\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(UNSAFE_DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(UNSAFE_DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(FetchersContext.Provider, {\n    value: fetcherData.current\n  }, /*#__PURE__*/React.createElement(ViewTransitionContext.Provider, {\n    value: vtContext\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: navigator,\n    future: routerFuture\n  }, state.initialized || router.future.v7_partialHydration ? /*#__PURE__*/React.createElement(MemoizedDataRoutes, {\n    routes: router.routes,\n    future: router.future,\n    state: state\n  }) : fallbackElement))))), null);\n}\n// Memoize to avoid re-renders when updating `ViewTransitionContext`\nconst MemoizedDataRoutes = /*#__PURE__*/React.memo(DataRoutes);\nfunction DataRoutes(_ref3) {\n  let {\n    routes,\n    future,\n    state\n  } = _ref3;\n  return UNSAFE_useRoutesImpl(routes, undefined, state, future);\n}\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nfunction BrowserRouter(_ref4) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref4;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({\n      window,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  React.useEffect(() => UNSAFE_logV6DeprecationWarnings(future), [future]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nfunction HashRouter(_ref5) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref5;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({\n      window,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  React.useEffect(() => UNSAFE_logV6DeprecationWarnings(future), [future]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter(_ref6) {\n  let {\n    basename,\n    children,\n    future,\n    history\n  } = _ref6;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  React.useEffect(() => UNSAFE_logV6DeprecationWarnings(future), [future]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\nif (process.env.NODE_ENV !== \"production\") {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\nconst isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n/**\n * The public API for rendering a history-aware `<a>`.\n */\nconst Link = /*#__PURE__*/React.forwardRef(function LinkWithRef(_ref7, ref) {\n  let {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      viewTransition\n    } = _ref7,\n    rest = _objectWithoutPropertiesLoose(_ref7, _excluded);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  // Rendered into <a href> for absolute URLs\n  let absoluteHref;\n  let isExternal = false;\n  if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n    // Render the absolute href server- and client-side\n    absoluteHref = to;\n    // Only check for external origins client-side\n    if (isBrowser) {\n      try {\n        let currentUrl = new URL(window.location.href);\n        let targetUrl = to.startsWith(\"//\") ? new URL(currentUrl.protocol + to) : new URL(to);\n        let path = stripBasename(targetUrl.pathname, basename);\n        if (targetUrl.origin === currentUrl.origin && path != null) {\n          // Strip the protocol/origin/basename for same-origin absolute URLs\n          to = path + targetUrl.search + targetUrl.hash;\n        } else {\n          isExternal = true;\n        }\n      } catch (e) {\n        // We can't do external URL detection without a valid URL\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"<Link to=\\\"\" + to + \"\\\"> contains an invalid URL which will probably break \" + \"when clicked - please update to a valid URL path.\") : void 0;\n      }\n    }\n  }\n  // Rendered into <a href> for relative URLs\n  let href = useHref(to, {\n    relative\n  });\n  let internalOnClick = useLinkClickHandler(to, {\n    replace,\n    state,\n    target,\n    preventScrollReset,\n    relative,\n    viewTransition\n  });\n  function handleClick(event) {\n    if (onClick) onClick(event);\n    if (!event.defaultPrevented) {\n      internalOnClick(event);\n    }\n  }\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    React.createElement(\"a\", _extends({}, rest, {\n      href: absoluteHref || href,\n      onClick: isExternal || reloadDocument ? onClick : handleClick,\n      ref: ref,\n      target: target\n    }))\n  );\n});\nif (process.env.NODE_ENV !== \"production\") {\n  Link.displayName = \"Link\";\n}\n/**\n * A `<Link>` wrapper that knows if it's \"active\" or not.\n */\nconst NavLink = /*#__PURE__*/React.forwardRef(function NavLinkWithRef(_ref8, ref) {\n  let {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      viewTransition,\n      children\n    } = _ref8,\n    rest = _objectWithoutPropertiesLoose(_ref8, _excluded2);\n  let path = useResolvedPath(to, {\n    relative: rest.relative\n  });\n  let location = useLocation();\n  let routerState = React.useContext(UNSAFE_DataRouterStateContext);\n  let {\n    navigator,\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let isTransitioning = routerState != null &&\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  useViewTransitionState(path) && viewTransition === true;\n  let toPathname = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;\n  let locationPathname = location.pathname;\n  let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\n  if (!caseSensitive) {\n    locationPathname = locationPathname.toLowerCase();\n    nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\n    toPathname = toPathname.toLowerCase();\n  }\n  if (nextLocationPathname && basename) {\n    nextLocationPathname = stripBasename(nextLocationPathname, basename) || nextLocationPathname;\n  }\n  // If the `to` has a trailing slash, look at that exact spot.  Otherwise,\n  // we're looking for a slash _after_ what's in `to`.  For example:\n  //\n  // <NavLink to=\"/users\"> and <NavLink to=\"/users/\">\n  // both want to look for a / at index 6 to match URL `/users/matt`\n  const endSlashPosition = toPathname !== \"/\" && toPathname.endsWith(\"/\") ? toPathname.length - 1 : toPathname.length;\n  let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(endSlashPosition) === \"/\";\n  let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \"/\");\n  let renderProps = {\n    isActive,\n    isPending,\n    isTransitioning\n  };\n  let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n  let className;\n  if (typeof classNameProp === \"function\") {\n    className = classNameProp(renderProps);\n  } else {\n    // If the className prop is not a function, we use a default `active`\n    // class for <NavLink />s that are active. In v5 `active` was the default\n    // value for `activeClassName`, but we are removing that API and can still\n    // use the old default behavior for a cleaner upgrade path and keep the\n    // simple styling rules working as they currently do.\n    className = [classNameProp, isActive ? \"active\" : null, isPending ? \"pending\" : null, isTransitioning ? \"transitioning\" : null].filter(Boolean).join(\" \");\n  }\n  let style = typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n  return /*#__PURE__*/React.createElement(Link, _extends({}, rest, {\n    \"aria-current\": ariaCurrent,\n    className: className,\n    ref: ref,\n    style: style,\n    to: to,\n    viewTransition: viewTransition\n  }), typeof children === \"function\" ? children(renderProps) : children);\n});\nif (process.env.NODE_ENV !== \"production\") {\n  NavLink.displayName = \"NavLink\";\n}\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nconst Form = /*#__PURE__*/React.forwardRef((_ref9, forwardedRef) => {\n  let {\n      fetcherKey,\n      navigate,\n      reloadDocument,\n      replace,\n      state,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      relative,\n      preventScrollReset,\n      viewTransition\n    } = _ref9,\n    props = _objectWithoutPropertiesLoose(_ref9, _excluded3);\n  let submit = useSubmit();\n  let formAction = useFormAction(action, {\n    relative\n  });\n  let formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n  let submitHandler = event => {\n    onSubmit && onSubmit(event);\n    if (event.defaultPrevented) return;\n    event.preventDefault();\n    let submitter = event.nativeEvent.submitter;\n    let submitMethod = (submitter == null ? void 0 : submitter.getAttribute(\"formmethod\")) || method;\n    submit(submitter || event.currentTarget, {\n      fetcherKey,\n      method: submitMethod,\n      navigate,\n      replace,\n      state,\n      relative,\n      preventScrollReset,\n      viewTransition\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"form\", _extends({\n    ref: forwardedRef,\n    method: formMethod,\n    action: formAction,\n    onSubmit: reloadDocument ? onSubmit : submitHandler\n  }, props));\n});\nif (process.env.NODE_ENV !== \"production\") {\n  Form.displayName = \"Form\";\n}\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nfunction ScrollRestoration(_ref10) {\n  let {\n    getKey,\n    storageKey\n  } = _ref10;\n  useScrollRestoration({\n    getKey,\n    storageKey\n  });\n  return null;\n}\nif (process.env.NODE_ENV !== \"production\") {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\nvar DataRouterHook;\n(function (DataRouterHook) {\n  DataRouterHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n  DataRouterHook[\"UseSubmit\"] = \"useSubmit\";\n  DataRouterHook[\"UseSubmitFetcher\"] = \"useSubmitFetcher\";\n  DataRouterHook[\"UseFetcher\"] = \"useFetcher\";\n  DataRouterHook[\"useViewTransitionState\"] = \"useViewTransitionState\";\n})(DataRouterHook || (DataRouterHook = {}));\nvar DataRouterStateHook;\n(function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseFetcher\"] = \"useFetcher\";\n  DataRouterStateHook[\"UseFetchers\"] = \"useFetchers\";\n  DataRouterStateHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n})(DataRouterStateHook || (DataRouterStateHook = {}));\n// Internal hooks\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/v6/routers/picking-a-router.\";\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(UNSAFE_DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(UNSAFE_DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\n// External hooks\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nfunction useLinkClickHandler(to, _temp) {\n  let {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n    viewTransition\n  } = _temp === void 0 ? {} : _temp;\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, {\n    relative\n  });\n  return React.useCallback(event => {\n    if (shouldProcessLinkClick(event, target)) {\n      event.preventDefault();\n      // If the URL hasn't changed, a regular <a> will do a replace instead of\n      // a push, so do the same here unless the replace prop is explicitly set\n      let replace = replaceProp !== undefined ? replaceProp : createPath(location) === createPath(path);\n      navigate(to, {\n        replace,\n        state,\n        preventScrollReset,\n        relative,\n        viewTransition\n      });\n    }\n  }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative, viewTransition]);\n}\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nfunction useSearchParams(defaultInit) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(typeof URLSearchParams !== \"undefined\", \"You cannot use the `useSearchParams` hook in a browser that does not \" + \"support the URLSearchParams API. If you need to support Internet \" + \"Explorer 11, we recommend you load a polyfill such as \" + \"https://github.com/ungap/url-search-params.\") : void 0;\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n  let location = useLocation();\n  let searchParams = React.useMemo(() =>\n  // Only merge in the defaults if we haven't yet called setSearchParams.\n  // Once we call that we want those to take precedence, otherwise you can't\n  // remove a param with setSearchParams({}) if it has an initial value\n  getSearchParamsForLocation(location.search, hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current), [location.search]);\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback((nextInit, navigateOptions) => {\n    const newSearchParams = createSearchParams(typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit);\n    hasSetSearchParamsRef.current = true;\n    navigate(\"?\" + newSearchParams, navigateOptions);\n  }, [navigate, searchParams]);\n  return [searchParams, setSearchParams];\n}\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\"You are calling submit during the server render. \" + \"Try calling submit within a `useEffect` or callback instead.\");\n  }\n}\nlet fetcherId = 0;\nlet getUniqueFetcherId = () => \"__\" + String(++fetcherId) + \"__\";\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nfunction useSubmit() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let currentRouteId = UNSAFE_useRouteId();\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    validateClientSideSubmission();\n    let {\n      action,\n      method,\n      encType,\n      formData,\n      body\n    } = getFormSubmissionInfo(target, basename);\n    if (options.navigate === false) {\n      let key = options.fetcherKey || getUniqueFetcherId();\n      router.fetch(key, currentRouteId, options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || method,\n        formEncType: options.encType || encType,\n        flushSync: options.flushSync\n      });\n    } else {\n      router.navigate(options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || method,\n        formEncType: options.encType || encType,\n        replace: options.replace,\n        state: options.state,\n        fromRouteId: currentRouteId,\n        flushSync: options.flushSync,\n        viewTransition: options.viewTransition\n      });\n    }\n  }, [router, basename, currentRouteId]);\n}\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nfunction useFormAction(action, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let routeContext = React.useContext(UNSAFE_RouteContext);\n  !routeContext ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFormAction must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = _extends({}, useResolvedPath(action ? action : \".\", {\n    relative\n  }));\n  // If no action was specified, browsers will persist current search params\n  // when determining the path, so match that behavior\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search;\n    // When grabbing search params from the URL, remove any included ?index param\n    // since it might not apply to our contextual route.  We add it back based\n    // on match.route.index below\n    let params = new URLSearchParams(path.search);\n    let indexValues = params.getAll(\"index\");\n    let hasNakedIndexParam = indexValues.some(v => v === \"\");\n    if (hasNakedIndexParam) {\n      params.delete(\"index\");\n      indexValues.filter(v => v).forEach(v => params.append(\"index\", v));\n      let qs = params.toString();\n      path.search = qs ? \"?\" + qs : \"\";\n    }\n  }\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  }\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\n// TODO: (v7) Change the useFetcher generic default from `any` to `unknown`\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nfunction useFetcher(_temp3) {\n  var _route$matches;\n  let {\n    key\n  } = _temp3 === void 0 ? {} : _temp3;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseFetcher);\n  let state = useDataRouterState(DataRouterStateHook.UseFetcher);\n  let fetcherData = React.useContext(FetchersContext);\n  let route = React.useContext(UNSAFE_RouteContext);\n  let routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;\n  !fetcherData ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher must be used inside a FetchersContext\") : UNSAFE_invariant(false) : void 0;\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  !(routeId != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  // Fetcher key handling\n  // OK to call conditionally to feature detect `useId`\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  let defaultKey = useIdImpl ? useIdImpl() : \"\";\n  let [fetcherKey, setFetcherKey] = React.useState(key || defaultKey);\n  if (key && key !== fetcherKey) {\n    setFetcherKey(key);\n  } else if (!fetcherKey) {\n    // We will only fall through here when `useId` is not available\n    setFetcherKey(getUniqueFetcherId());\n  }\n  // Registration/cleanup\n  React.useEffect(() => {\n    router.getFetcher(fetcherKey);\n    return () => {\n      // Tell the router we've unmounted - if v7_fetcherPersist is enabled this\n      // will not delete immediately but instead queue up a delete after the\n      // fetcher returns to an `idle` state\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n  // Fetcher additions\n  let load = React.useCallback((href, opts) => {\n    !routeId ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for fetcher.load()\") : UNSAFE_invariant(false) : void 0;\n    router.fetch(fetcherKey, routeId, href, opts);\n  }, [fetcherKey, routeId, router]);\n  let submitImpl = useSubmit();\n  let submit = React.useCallback((target, opts) => {\n    submitImpl(target, _extends({}, opts, {\n      navigate: false,\n      fetcherKey\n    }));\n  }, [fetcherKey, submitImpl]);\n  let FetcherForm = React.useMemo(() => {\n    let FetcherForm = /*#__PURE__*/React.forwardRef((props, ref) => {\n      return /*#__PURE__*/React.createElement(Form, _extends({}, props, {\n        navigate: false,\n        fetcherKey: fetcherKey,\n        ref: ref\n      }));\n    });\n    if (process.env.NODE_ENV !== \"production\") {\n      FetcherForm.displayName = \"fetcher.Form\";\n    }\n    return FetcherForm;\n  }, [fetcherKey]);\n  // Exposed FetcherWithComponents\n  let fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER;\n  let data = fetcherData.get(fetcherKey);\n  let fetcherWithComponents = React.useMemo(() => _extends({\n    Form: FetcherForm,\n    submit,\n    load\n  }, fetcher, {\n    data\n  }), [FetcherForm, submit, load, fetcher, data]);\n  return fetcherWithComponents;\n}\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nfunction useFetchers() {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return Array.from(state.fetchers.entries()).map(_ref11 => {\n    let [key, fetcher] = _ref11;\n    return _extends({}, fetcher, {\n      key\n    });\n  });\n}\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions = {};\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration(_temp4) {\n  let {\n    getKey,\n    storageKey\n  } = _temp4 === void 0 ? {} : _temp4;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let {\n    restoreScrollPosition,\n    preventScrollReset\n  } = useDataRouterState(DataRouterStateHook.UseScrollRestoration);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n  // Save positions on pagehide\n  usePageHide(React.useCallback(() => {\n    if (navigation.state === \"idle\") {\n      let key = (getKey ? getKey(location, matches) : null) || location.key;\n      savedScrollPositions[key] = window.scrollY;\n    }\n    try {\n      sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));\n    } catch (error) {\n      process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (\" + error + \").\") : void 0;\n    }\n    window.history.scrollRestoration = \"auto\";\n  }, [storageKey, getKey, navigation.state, location, matches]));\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename = getKey && basename !== \"/\" ? (location, matches) => getKey( // Strip the basename to match useLocation()\n      _extends({}, location, {\n        pathname: stripBasename(location.pathname, basename) || location.pathname\n      }), matches) : getKey;\n      let disableScrollRestoration = router == null ? void 0 : router.enableScrollRestoration(savedScrollPositions, () => window.scrollY, getKeyWithoutBasename);\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(decodeURIComponent(location.hash.slice(1)));\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction useBeforeUnload(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt(_ref12) {\n  let {\n    when,\n    message\n  } = _ref12;\n  let blocker = useBlocker(when);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n/**\n * Return a boolean indicating if there is an active view transition to the\n * given href.  You can use this value to render CSS classes or viewTransitionName\n * styles onto your elements\n *\n * @param href The destination href\n * @param [opts.relative] Relative routing type (\"route\" | \"path\")\n */\nfunction useViewTransitionState(to, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n  let vtContext = React.useContext(ViewTransitionContext);\n  !(vtContext != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"`useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  \" + \"Did you accidentally import `RouterProvider` from `react-router`?\") : UNSAFE_invariant(false) : void 0;\n  let {\n    basename\n  } = useDataRouterContext(DataRouterHook.useViewTransitionState);\n  let path = useResolvedPath(to, {\n    relative: opts.relative\n  });\n  if (!vtContext.isTransitioning) {\n    return false;\n  }\n  let currentPath = stripBasename(vtContext.currentLocation.pathname, basename) || vtContext.currentLocation.pathname;\n  let nextPath = stripBasename(vtContext.nextLocation.pathname, basename) || vtContext.nextLocation.pathname;\n  // Transition is active if we're going to or coming from the indicated\n  // destination.  This ensures that other PUSH navigations that reverse\n  // an indicated transition apply.  I.e., on the list view you have:\n  //\n  //   <NavLink to=\"/details/1\" viewTransition>\n  //\n  // If you click the breadcrumb back to the list view:\n  //\n  //   <NavLink to=\"/list\" viewTransition>\n  //\n  // We should apply the transition because it's indicated as active going\n  // from /list -> /details/1 and therefore should be active on the reverse\n  // (even though this isn't strictly a POP reverse)\n  return matchPath(path.pathname, nextPath) != null || matchPath(path.pathname, currentPath) != null;\n}\n//#endregion\n\nexport { BrowserRouter, Form, HashRouter, Link, NavLink, RouterProvider, ScrollRestoration, FetchersContext as UNSAFE_FetchersContext, ViewTransitionContext as UNSAFE_ViewTransitionContext, useScrollRestoration as UNSAFE_useScrollRestoration, createBrowserRouter, createHashRouter, createSearchParams, HistoryRouter as unstable_HistoryRouter, usePrompt as unstable_usePrompt, useBeforeUnload, useFetcher, useFetchers, useFormAction, useLinkClickHandler, useSearchParams, useSubmit, useViewTransitionState };\n//# sourceMappingURL=index.js.map\n","// ============================================================================\n// Supabase 클라이언트 설정\n// ============================================================================\n\nimport { createClient } from \"@supabase/supabase-js\";\nimport type { Database } from \"@/types/database\";\n\n// Supabase 환경 변수 검증\nconst supabaseUrl = import.meta.env.VITE_SUPABASE_URL;\nconst supabaseAnonKey = import.meta.env.VITE_SUPABASE_ANON_KEY;\n\n// 프로덕션 환경에서는 반드시 환경 변수가 설정되어야 함\nconst isProduction = import.meta.env.PROD;\n// const isDevelopment = import.meta.env.DEV;\n\nif (\n  isProduction &&\n  (!supabaseUrl ||\n    !supabaseAnonKey ||\n    supabaseUrl.includes(\"your-project\") ||\n    supabaseAnonKey.includes(\"your-anon-key\"))\n) {\n  throw new Error(\n    \"프로덕션 환경에서는 올바른 Supabase 환경 변수가 필요합니다.\",\n  );\n}\n\nif (!supabaseUrl || !supabaseAnonKey) {\n  if (isProduction) {\n    throw new Error(\"Supabase 환경 변수가 설정되지 않았습니다.\");\n  }\n  // 개발 환경에서만 기본값 사용\n  console.warn(\n    \"⚠️ 개발 환경: Supabase 환경 변수가 설정되지 않아 기본값을 사용합니다.\",\n  );\n}\n\n// Supabase 클라이언트 생성 (싱글톤 패턴)\nlet supabaseInstance: ReturnType<typeof createClient<Database>> | null = null;\n\nexport const supabase = (() => {\n  if (!supabaseInstance) {\n    // 개발 환경에서만 기본값 사용\n    const finalUrl = supabaseUrl || \"https://your-project.supabase.co\";\n    const finalKey = supabaseAnonKey || \"your-anon-key\";\n\n    supabaseInstance = createClient<Database>(finalUrl, finalKey, {\n      auth: {\n        autoRefreshToken: true,\n        persistSession: true,\n        detectSessionInUrl: true,\n        storageKey: \"sb-auth-token\",\n      },\n    });\n  }\n  return supabaseInstance;\n})();\n\n// 타입 도우미 함수\nexport type SupabaseClient = typeof supabase;\n","// ============================================================================\n// 구조화된 로깅 유틸리티\n// ============================================================================\n\nconst isDevelopment =\n  import.meta.env.DEV || import.meta.env.VITE_APP_ENV === \"development\";\n\nexport interface LogContext {\n  userId?: string;\n  tenantId?: string;\n  correlationId?: string;\n  component?: string;\n  action?: string;\n  [key: string]: unknown;\n}\n\nexport interface LogLevel {\n  DEBUG: \"debug\";\n  INFO: \"info\";\n  WARN: \"warn\";\n  ERROR: \"error\";\n}\n\n// const LOG_LEVELS: LogLevel = {\n//   DEBUG: \"debug\",\n//   INFO: \"info\",\n//   WARN: \"warn\",\n//   ERROR: \"error\",\n// };\n\nclass StructuredLogger {\n  private formatMessage(\n    level: keyof LogLevel,\n    message: string,\n    context?: LogContext,\n  ): string {\n    const timestamp = new Date().toISOString();\n    const logEntry = {\n      timestamp,\n      level: level.toLowerCase(),\n      message,\n      ...context,\n    };\n    return JSON.stringify(logEntry);\n  }\n\n  private shouldLog(level: keyof LogLevel): boolean {\n    // 개발 환경에서는 모든 로그 출력\n    if (isDevelopment) return true;\n\n    // 프로덕션에서는 WARN과 ERROR만 출력\n    return level === \"WARN\" || level === \"ERROR\";\n  }\n\n  debug(message: string, context?: LogContext): void {\n    if (this.shouldLog(\"DEBUG\")) {\n      console.debug(this.formatMessage(\"DEBUG\", message, context));\n    }\n  }\n\n  info(message: string, context?: LogContext): void {\n    if (this.shouldLog(\"INFO\")) {\n      console.info(this.formatMessage(\"INFO\", message, context));\n    }\n  }\n\n  warn(message: string, context?: LogContext): void {\n    if (this.shouldLog(\"WARN\")) {\n      console.warn(this.formatMessage(\"WARN\", message, context));\n    }\n  }\n\n  error(message: string, context?: LogContext): void {\n    if (this.shouldLog(\"ERROR\")) {\n      console.error(this.formatMessage(\"ERROR\", message, context));\n    }\n  }\n\n  // 개발 환경에서만 사용하는 간단한 로그\n  devLog(message: string, ...args: unknown[]): void {\n    if (isDevelopment) {\n      console.log(`[DEV] ${message}`, ...args);\n    }\n  }\n}\n\nexport const logger = new StructuredLogger();\n","// ============================================================================\n// 인증 컨텍스트 - Supabase Auth 통합\n// ============================================================================\n\nimport React, {\n  createContext,\n  useContext,\n  useEffect,\n  useState,\n  useMemo,\n} from \"react\";\nimport { Session, AuthError } from \"@supabase/supabase-js\";\nimport { supabase } from \"@/services/supabase\";\nimport type { AuthUser, SignUpData, SignInData } from \"@/types\";\nimport { logger } from \"@/utils/logger\";\n\ninterface AuthContextType {\n  user: AuthUser | null;\n  session: Session | null;\n  loading: boolean;\n  signUp: (data: SignUpData) => Promise<any>;\n  signIn: (data: SignInData) => Promise<any>;\n  signOut: () => Promise<{ error: AuthError | null }>;\n  resetPassword: (email: string) => Promise<{ error: AuthError | null }>;\n  getCurrentUser: () => Promise<AuthUser | null>;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n\ninterface AuthProviderProps {\n  children: React.ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<AuthUser | null>(null);\n  const [session, setSession] = useState<Session | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    logger.info(\"🔍 인증 초기화 시작\");\n\n    // 초기 세션 확인 (타임아웃 포함)\n    const getSession = async () => {\n      try {\n        // 5초 타임아웃 설정\n        const timeoutPromise = new Promise((_, reject) =>\n          setTimeout(() => reject(new Error(\"Session check timeout\")), 5000),\n        );\n\n        const sessionPromise = supabase.auth.getSession();\n\n        const {\n          data: { session },\n          error,\n        } = (await Promise.race([sessionPromise, timeoutPromise])) as any;\n\n        if (error) {\n          logger.error(\"Error getting session:\", error);\n          setLoading(false);\n          return;\n        }\n\n        setSession(session);\n        if (session?.user) {\n          try {\n            // 사용자 프로필 정보 가져오기 (타임아웃 포함)\n            const profilePromise = supabase\n              .from(\"user_profiles\")\n              .select(\"*\")\n              .eq(\"id\", session.user.id)\n              .single();\n\n            const profileTimeoutPromise = new Promise((_, reject) =>\n              setTimeout(\n                () => reject(new Error(\"Profile fetch timeout\")),\n                3000,\n              ),\n            );\n\n            const { data: profile } = (await Promise.race([\n              profilePromise,\n              profileTimeoutPromise,\n            ])) as any;\n\n            setUser({\n              id: session.user.id,\n              email: session.user.email!,\n              name: profile?.name || session.user.user_metadata?.name || \"\",\n              role: profile?.role || \"owner\",\n              tenant_id: session.user.id, // 사용자 ID를 tenant_id로 사용\n              avatar_url: profile?.avatar_url || null,\n              created_at: session.user.created_at,\n              last_sign_in_at: session.user.last_sign_in_at || null,\n            });\n          } catch (profileError) {\n            logger.error(\"Error fetching profile:\", { error: profileError });\n            // 프로필 가져오기 실패 시 기본 사용자 정보만 설정\n            setUser({\n              id: session.user.id,\n              email: session.user.email!,\n              name: session.user.user_metadata?.name || session.user.email!,\n              role: \"owner\",\n              tenant_id: session.user.id,\n              avatar_url: null,\n              created_at: session.user.created_at,\n              last_sign_in_at: session.user.last_sign_in_at || null,\n            });\n          }\n        }\n      } catch (error) {\n        logger.error(\"Error in getSession:\", { error });\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getSession();\n\n    // 인증 상태 변경 리스너 (타임아웃 포함)\n    const {\n      data: { subscription },\n    } = supabase.auth.onAuthStateChange(async (event, session) => {\n      logger.info(\"🔐 Auth state changed:\", {\n        event,\n        userId: session?.user?.id,\n        userEmail: session?.user?.email,\n      });\n\n      setSession(session);\n\n      if (session?.user) {\n        try {\n          // 사용자 프로필 정보 가져오기 (타임아웃 포함)\n          const profilePromise = supabase\n            .from(\"user_profiles\")\n            .select(\"*\")\n            .eq(\"id\", session.user.id)\n            .single();\n\n          const profileTimeoutPromise = new Promise((_, reject) =>\n            setTimeout(() => reject(new Error(\"Profile fetch timeout\")), 3000),\n          );\n\n          const { data: profile } = (await Promise.race([\n            profilePromise,\n            profileTimeoutPromise,\n          ])) as any;\n\n          setUser({\n            id: session.user.id,\n            email: session.user.email!,\n            name: profile?.name || session.user.user_metadata?.name || \"\",\n            role: profile?.role || \"owner\",\n            tenant_id: session.user.id, // 사용자 ID를 tenant_id로 사용\n            avatar_url: profile?.avatar_url || null,\n            created_at: session.user.created_at,\n            last_sign_in_at: session.user.last_sign_in_at || null,\n          });\n        } catch (profileError) {\n          logger.error(\"Error fetching profile in auth state change:\", { \n            error: profileError \n          });\n          // 프로필 가져오기 실패 시 기본 사용자 정보만 설정\n          setUser({\n            id: session.user.id,\n            email: session.user.email!,\n            name: session.user.user_metadata?.name || session.user.email!,\n            role: \"owner\",\n            tenant_id: session.user.id,\n            avatar_url: null,\n            created_at: session.user.created_at,\n            last_sign_in_at: session.user.last_sign_in_at || null,\n          });\n        }\n      } else {\n        setUser(null);\n      }\n\n      setLoading(false);\n    });\n\n    return () => subscription.unsubscribe();\n  }, []);\n\n  const signUp = async (data: SignUpData) => {\n    try {\n      const result = await supabase.auth.signUp({\n        email: data.email,\n        password: data.password,\n        options: {\n          data: {\n            name: data.name,\n            company: data.company,\n          },\n        },\n      });\n\n      // 회원가입 성공 시 사용자 ID를 tenant_id로 사용하여 개별 데이터 관리\n      if (result.data.user && !result.error) {\n        try {\n          logger.info(\"👤 사용자별 독립 프로필 생성:\", { \n            userId: result.data.user.id \n          });\n\n          // 사용자 ID를 tenant_id로 사용하여 완전히 독립적인 데이터 관리\n          const { error: profileError } = await supabase\n            .from(\"user_profiles\")\n            .insert({\n              id: result.data.user.id,\n              email: data.email,\n              name: data.name,\n              role: \"owner\",\n              tenant_id: result.data.user.id, // 사용자 ID = tenant_id로 개별 관리\n            });\n\n          if (profileError) {\n            logger.error(\"Error creating user profile:\", { \n              error: profileError \n            });\n          } else {\n            logger.info(\"✅ 사용자별 독립 프로필 생성 완료\");\n          }\n        } catch (error) {\n          logger.error(\"Error in profile creation process:\", { error });\n        }\n      }\n\n      return result;\n    } catch (error) {\n      logger.error(\"Sign up error:\", { error });\n      return { user: null, error: error as AuthError };\n    }\n  };\n\n  const signIn = async (data: SignInData) => {\n    try {\n      const result = await supabase.auth.signInWithPassword({\n        email: data.email,\n        password: data.password,\n      });\n      return result;\n    } catch (error) {\n      logger.error(\"Sign in error:\", { error });\n      return { user: null, error: error as AuthError };\n    }\n  };\n\n  const signOut = async () => {\n    try {\n      const result = await supabase.auth.signOut();\n      setUser(null);\n      setSession(null);\n      return result;\n    } catch (error) {\n      logger.error(\"Sign out error:\", { error });\n      return { error: error as AuthError };\n    }\n  };\n\n  const resetPassword = async (email: string) => {\n    try {\n      const result = await supabase.auth.resetPasswordForEmail(email, {\n        redirectTo: `${window.location.origin}/reset-password`,\n      });\n      return result;\n    } catch (error) {\n      logger.error(\"Reset password error:\", { error });\n      return { error: error as AuthError };\n    }\n  };\n\n  const getCurrentUser = async (): Promise<AuthUser | null> => {\n    try {\n      logger.info(\"🔍 getCurrentUser 호출됨\");\n      \n      // 1. 컨텍스트에 사용자가 있으면 반환\n      if (user && !loading) {\n        logger.info(\"✅ 컨텍스트에서 사용자 반환\", { userId: user.id });\n        return user;\n      }\n      \n      // 2. Supabase에서 직접 확인 (세션 새로고침 포함)\n      logger.info(\"🔄 Supabase 세션 새로고침 시도...\");\n      const { data: refreshData, error: refreshError } = await supabase.auth.refreshSession();\n      \n      if (refreshError) {\n        logger.warn(\"⚠️ 세션 새로고침 실패, 직접 사용자 확인:\", { error: refreshError.message });\n      } else if (refreshData.session) {\n        logger.info(\"✅ 세션 새로고침 성공\");\n      }\n      \n      const { data: { user: supabaseUser }, error } = await supabase.auth.getUser();\n      \n      if (error || !supabaseUser) {\n        logger.error(\"❌ getCurrentUser 실패:\", { error: error?.message });\n        return null;\n      }\n      \n      // 3. 프로필 정보와 함께 AuthUser 객체 생성\n      try {\n        const { data: profile } = await supabase\n          .from(\"user_profiles\")\n          .select(\"*\")\n          .eq(\"id\", supabaseUser.id)\n          .single();\n\n        const authUser: AuthUser = {\n          id: supabaseUser.id,\n          email: supabaseUser.email!,\n          name: profile?.name || supabaseUser.user_metadata?.name || \"\",\n          role: profile?.role || \"owner\",\n          tenant_id: supabaseUser.id,\n          avatar_url: profile?.avatar_url || null,\n          created_at: supabaseUser.created_at,\n          last_sign_in_at: supabaseUser.last_sign_in_at || null,\n        };\n\n        logger.info(\"✅ getCurrentUser 성공:\", { userId: authUser.id });\n        return authUser;\n      } catch (profileError) {\n        logger.error(\"프로필 조회 실패, 기본 사용자 정보 반환:\", { error: profileError });\n        \n        const authUser: AuthUser = {\n          id: supabaseUser.id,\n          email: supabaseUser.email!,\n          name: supabaseUser.user_metadata?.name || supabaseUser.email!,\n          role: \"owner\",\n          tenant_id: supabaseUser.id,\n          avatar_url: null,\n          created_at: supabaseUser.created_at,\n          last_sign_in_at: supabaseUser.last_sign_in_at || null,\n        };\n\n        return authUser;\n      }\n    } catch (error) {\n      logger.error(\"getCurrentUser 전체 실패:\", { error });\n      return null;\n    }\n  };\n\n  const value = useMemo(\n    () => ({\n      user,\n      session,\n      loading,\n      signUp,\n      signIn,\n      signOut,\n      resetPassword,\n      getCurrentUser,\n    }),\n    [user, session, loading],\n  );\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n","// ============================================================================\n// 테넌트 컨텍스트 (React Context + Zustand 통합)\n// ============================================================================\n\nimport React, {\n  createContext,\n  useContext,\n  useEffect,\n  useState,\n  ReactNode,\n} from \"react\";\nimport { useAuth } from \"@/contexts/AuthContext\";\nimport { supabase } from \"@/services/supabase\";\nimport type { TenantContextType, TenantStats } from \"@/types/tenant\";\n\nconst TenantContext = createContext<TenantContextType | null>(null);\n\ninterface TenantProviderProps {\n  children: ReactNode;\n}\n\nexport const TenantProvider: React.FC<TenantProviderProps> = ({ children }) => {\n  const { user } = useAuth(); // 인증된 사용자 정보 가져오기\n\n  // Local state management instead of Zustand\n  const [tenant, setTenant] = useState<any>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  // Tenant management functions\n  const switchTenant = async (tenantId: string) => {\n    setIsLoading(true);\n    try {\n      const { data, error } = await supabase\n        .from(\"tenants\")\n        .select(\"*\")\n        .eq(\"id\", tenantId)\n        .single();\n\n      if (error) throw error;\n      setTenant(data);\n      setError(null);\n    } catch (err) {\n      console.error(\"Failed to switch tenant:\", err);\n      setError(\"테넌트 전환에 실패했습니다.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const updateTenant = async (updates: any) => {\n    if (!tenant) return;\n\n    setIsLoading(true);\n    try {\n      const { data, error } = await supabase\n        .from(\"tenants\")\n        .update(updates)\n        .eq(\"id\", tenant.id)\n        .select()\n        .single();\n\n      if (error) throw error;\n      setTenant(data);\n      setError(null);\n    } catch (err) {\n      console.error(\"Failed to update tenant:\", err);\n      setError(\"테넌트 업데이트에 실패했습니다.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const getTenantStats = async (): Promise<TenantStats> => {\n    if (!tenant) {\n      // Return default stats if no tenant\n      return {\n        total_properties: 0,\n        active_properties: 0,\n        total_users: 0,\n        active_users: 0,\n        storage_used_mb: 0,\n        api_calls_this_month: 0,\n        created_this_month: 0,\n      };\n    }\n\n    try {\n      const { data, error } = await supabase\n        .from(\"properties\")\n        .select(\"id, status, created_at\")\n        .eq(\"tenant_id\", tenant.id);\n\n      if (error) throw error;\n\n      const stats: TenantStats = {\n        total_properties: data.length,\n        active_properties: data.length, // 모든 매물을 활성으로 처리 (상태 삭제)\n        total_users: 1, // Simplified - would need actual user count\n        active_users: 1, // Simplified - would need actual active user count\n        storage_used_mb: 0, // Simplified - would need actual storage calculation\n        api_calls_this_month: 0, // Simplified - would need actual API call tracking\n        created_this_month: data.filter((p) => {\n          const created = new Date(p.created_at || Date.now());\n          const now = new Date();\n          return (\n            created.getMonth() === now.getMonth() &&\n            created.getFullYear() === now.getFullYear()\n          );\n        }).length,\n      };\n\n      return stats;\n    } catch (err) {\n      console.error(\"Failed to get tenant stats:\", err);\n      // Return default stats on error\n      return {\n        total_properties: 0,\n        active_properties: 0,\n        total_users: 0,\n        active_users: 0,\n        storage_used_mb: 0,\n        api_calls_this_month: 0,\n        created_this_month: 0,\n      };\n    }\n  };\n\n  const hasFeature = (feature: string) => {\n    return tenant?.limits?.features_enabled?.includes(feature) || false;\n  };\n\n  const canCreateProperty = () => {\n    if (!tenant?.limits) return true;\n    // Simplified - would need actual property count check\n    return true;\n  };\n\n  const canInviteUser = () => {\n    if (!tenant?.limits) return true;\n    // Simplified - would need actual user count check\n    return true;\n  };\n\n  const isWithinLimits = (_resource: string) => {\n    if (!tenant?.limits) return true;\n    // Simplified - would need actual resource usage check\n    return true;\n  };\n\n  // 페이지 로드 시 URL에서 테넌트 감지 또는 자동 테넌트 설정\n  useEffect(() => {\n    console.log(\"🏢 TenantContext useEffect 실행:\", {\n      user: user?.id,\n      tenant: tenant?.id,\n    });\n\n    // 사용자별 개별 테넌트 자동 설정\n    if (user && !tenant) {\n      console.log(\"🏢 사용자별 개별 테넌트 설정 시작:\", user.id);\n\n      // 사용자별 개별 테넌트를 실제 DB에 생성/조회\n      const initializeTenant = async () => {\n        setIsLoading(true);\n        \n        // 개발환경에서는 모사 데이터 사용 (환경변수가 없을 때만)\n        if (!import.meta.env.VITE_SUPABASE_URL) {\n          console.log(\"🔧 개발환경: 모사 테넌트 데이터 사용\");\n          const mockTenant = {\n            id: user.id,\n            name: `${user.name || \"사용자\"}의 부동산`,\n            slug: `user-${user.id}`,\n            plan: \"starter\" as const,\n            status: \"active\" as const,\n            branding: {\n              primary_color: \"#3b82f6\",\n              secondary_color: \"#1d4ed8\",\n              accent_color: \"#f59e0b\",\n            },\n            limits: {\n              max_properties: 50,\n              max_users: 2,\n              max_storage_gb: 1,\n              max_api_calls_per_month: 1000,\n              features_enabled: [\"basic\"],\n            },\n            settings: {\n              timezone: \"Asia/Seoul\",\n              date_format: \"YYYY-MM-DD\",\n              currency: \"KRW\",\n              language: \"ko\",\n              require_exit_date: true,\n              require_landlord_info: true,\n              email_notifications: true,\n              sms_notifications: false,\n              browser_notifications: true,\n              require_2fa: false,\n              session_timeout_minutes: 480,\n            },\n            created_at: new Date().toISOString(),\n            updated_at: new Date().toISOString(),\n            created_by: user.id,\n          };\n          setTenant(mockTenant);\n          setError(null);\n          setIsLoading(false);\n          return;\n        }\n\n        try {\n          // 1. 기존 테넌트 조회 (프로덕션 환경에서만)\n          console.log(\"🔍 기존 테넌트 조회 중:\", user.id);\n          const { data: existingTenant, error: queryError } = await supabase\n            .from(\"tenants\")\n            .select(\"*\")\n            .eq(\"id\", user.id)\n            .single();\n\n          console.log(\"🔍 조회 결과:\", { existingTenant, queryError });\n\n          if (existingTenant && !queryError) {\n            // 기존 테넌트가 있으면 상태에 설정 (추가 속성 포함)\n            const fullTenant = {\n              ...existingTenant,\n              branding: {\n                primary_color: \"#3b82f6\",\n                secondary_color: \"#1d4ed8\",\n                accent_color: \"#f59e0b\",\n              },\n              limits: {\n                max_properties: 50,\n                max_users: 2,\n                max_storage_gb: 1,\n                max_api_calls_per_month: 1000,\n                features_enabled: [\"basic\"],\n              },\n              settings: {\n                timezone: \"Asia/Seoul\",\n                date_format: \"YYYY-MM-DD\",\n                currency: \"KRW\",\n                language: \"ko\",\n                require_exit_date: true,\n                require_landlord_info: true,\n                email_notifications: true,\n                sms_notifications: false,\n                browser_notifications: true,\n                require_2fa: false,\n                session_timeout_minutes: 480,\n              },\n            };\n            setTenant(fullTenant);\n            setError(null);\n            console.log(\"✅ 기존 테넌트 조회 완료:\", existingTenant.name);\n            setIsLoading(false);\n            return;\n          }\n        } catch (error) {\n          console.log(\"🔍 기존 테넌트 조회 중 오류:\", error);\n          // 오류 발생시 모사 데이터로 fallback\n          console.log(\"🔧 오류로 인한 모사 테넌트 데이터 사용\");\n          const mockTenant = {\n            id: user.id,\n            name: `${user.name || \"사용자\"}의 부동산`,\n            slug: `user-${user.id}`,\n            plan: \"starter\" as const,\n            status: \"active\" as const,\n            branding: {\n              primary_color: \"#3b82f6\",\n              secondary_color: \"#1d4ed8\",\n              accent_color: \"#f59e0b\",\n            },\n            limits: {\n              max_properties: 50,\n              max_users: 2,\n              max_storage_gb: 1,\n              max_api_calls_per_month: 1000,\n              features_enabled: [\"basic\"],\n            },\n            settings: {\n              timezone: \"Asia/Seoul\",\n              date_format: \"YYYY-MM-DD\",\n              currency: \"KRW\",\n              language: \"ko\",\n              require_exit_date: true,\n              require_landlord_info: true,\n              email_notifications: true,\n              sms_notifications: false,\n              browser_notifications: true,\n              require_2fa: false,\n              session_timeout_minutes: 480,\n            },\n            created_at: new Date().toISOString(),\n            updated_at: new Date().toISOString(),\n            created_by: user.id,\n          };\n          setTenant(mockTenant);\n          setError(null);\n          setIsLoading(false);\n          return;\n        }\n\n        // 테넌트가 없으면 새로 생성\n        console.log(\"📝 새 테넌트 생성 필요\");\n\n        try {\n          // 2. 새 테넌트 생성\n          const userTenant = {\n            id: user.id, // 사용자 ID = 테넌트 ID\n            name: \"PropertyDesk 베타\",\n          };\n\n          console.log(\"📝 테넌트 생성 시작:\", userTenant);\n          const { data: newTenant, error: createError } = await supabase\n            .from(\"tenants\")\n            .insert(userTenant)\n            .select()\n            .single();\n\n          console.log(\"📝 테넌트 생성 결과:\", { newTenant, createError });\n\n          if (createError) {\n            console.error(\"❌ 테넌트 생성 실패:\", createError);\n            throw createError;\n          }\n\n          // 생성된 테넌트를 상태에 설정 (추가 속성 포함)\n          const fullTenant = {\n            ...newTenant,\n            branding: {\n              primary_color: \"#3b82f6\",\n              secondary_color: \"#1d4ed8\",\n              accent_color: \"#f59e0b\",\n            },\n            limits: {\n              max_properties: 1000,\n              max_users: 10,\n              max_storage_gb: 10,\n              max_api_calls_per_month: 50000,\n              features_enabled: [\n                \"advanced_analytics\",\n                \"api_access\",\n                \"custom_fields\",\n              ],\n            },\n            settings: {\n              timezone: \"Asia/Seoul\",\n              date_format: \"YYYY-MM-DD\",\n              currency: \"KRW\",\n              language: \"ko\",\n              // default_property_status: 매물 상태 필드 삭제됨\n              require_exit_date: true,\n              require_landlord_info: true,\n              email_notifications: true,\n              sms_notifications: false,\n              browser_notifications: true,\n              require_2fa: false,\n              session_timeout_minutes: 480,\n            },\n          };\n\n          setTenant(fullTenant);\n          setError(null);\n\n          console.log(\n            \"✅ 새 테넌트 생성 완료:\",\n            newTenant.name,\n            \"User ID:\",\n            user.id,\n          );\n        } catch (error) {\n          console.error(\"❌ 테넌트 초기화 실패:\", error);\n          setTenant(null);\n          setError(\"테넌트 초기화에 실패했습니다.\");\n        } finally {\n          setIsLoading(false);\n        }\n      };\n\n      initializeTenant();\n    }\n  }, [user, tenant]); // user 의존성 추가\n\n  // 테넌트별 CSS 변수 설정 (동적 브랜딩)\n  useEffect(() => {\n    if (tenant?.branding) {\n      const root = document.documentElement;\n      root.style.setProperty(\"--tenant-primary\", tenant.branding.primary_color);\n      root.style.setProperty(\n        \"--tenant-secondary\",\n        tenant.branding.secondary_color || \"#6b7280\",\n      );\n      root.style.setProperty(\n        \"--tenant-accent\",\n        tenant.branding.accent_color || \"#f59e0b\",\n      );\n\n      // 파비콘 업데이트\n      if (tenant.branding.favicon_url) {\n        const favicon = document.querySelector(\n          'link[rel=\"icon\"]',\n        ) as HTMLLinkElement;\n        if (favicon) {\n          favicon.href = tenant.branding.favicon_url;\n        }\n      }\n\n      // 페이지 타이틀 업데이트\n      document.title = `${tenant.name} - PropertyDesk`;\n    } else {\n      // 기본 브랜딩으로 복원\n      const root = document.documentElement;\n      root.style.setProperty(\"--tenant-primary\", \"#3b82f6\");\n      root.style.setProperty(\"--tenant-secondary\", \"#6b7280\");\n      root.style.setProperty(\"--tenant-accent\", \"#f59e0b\");\n      document.title = \"PropertyDesk - 부동산 관리 플랫폼\";\n    }\n  }, [tenant]);\n\n  const contextValue: TenantContextType = {\n    tenant,\n    isLoading,\n    error,\n    switchTenant,\n    updateTenant,\n    getTenantStats,\n    hasFeature,\n    canCreateProperty,\n    canInviteUser,\n    isWithinLimits,\n  };\n\n  return (\n    <TenantContext.Provider value={contextValue}>\n      {children}\n    </TenantContext.Provider>\n  );\n};\n\n// 테넌트 컨텍스트 훅\nexport const useTenant = () => {\n  const context = useContext(TenantContext);\n  if (!context) {\n    throw new Error(\"useTenant는 TenantProvider 내에서 사용되어야 합니다.\");\n  }\n  return context;\n};\n\n// 테넌트 요구 가드 컴포넌트\ninterface TenantGuardProps {\n  children: ReactNode;\n  fallback?: ReactNode;\n  requireFeatures?: string[];\n}\n\nexport const TenantGuard: React.FC<TenantGuardProps> = ({\n  children,\n  fallback = <div>테넌트를 선택해주세요.</div>,\n  requireFeatures = [],\n}) => {\n  const { tenant, hasFeature } = useTenant();\n\n  // 테넌트가 없는 경우\n  if (!tenant) {\n    return <>{fallback}</>;\n  }\n\n  // 필요한 기능이 없는 경우\n  if (requireFeatures.length > 0) {\n    const missingFeatures = requireFeatures.filter(\n      (feature) => !hasFeature(feature),\n    );\n    if (missingFeatures.length > 0) {\n      return (\n        <div className=\"p-4 bg-yellow-50 border border-yellow-200 rounded-lg\">\n          <p className=\"text-yellow-800\">\n            이 기능을 사용하려면 다음 기능이 필요합니다:{\" \"}\n            {missingFeatures.join(\", \")}\n          </p>\n          <p className=\"text-sm text-yellow-600 mt-1\">\n            요금제를 업그레이드하거나 관리자에게 문의하세요.\n          </p>\n        </div>\n      );\n    }\n  }\n\n  return <>{children}</>;\n};\n\n// 테넌트별 라우팅 헬퍼\nexport const getTenantUrl = (\n  path: string,\n  tenant?: { slug: string } | null,\n) => {\n  if (!tenant) return path;\n\n  // 서브도메인 방식\n  const isProduction = window.location.hostname.includes(\"propertydesk.com\");\n  if (isProduction) {\n    return `https://${tenant.slug}.propertydesk.com${path}`;\n  }\n\n  // 개발 환경: 경로 방식\n  return `/tenant/${tenant.slug}${path}`;\n};\n\n// 테넌트 설정 훅\nexport const useTenantSettings = () => {\n  const { tenant, updateTenant } = useTenant();\n\n  const updateSettings = async (settings: any) => {\n    if (!tenant) return;\n\n    await updateTenant({\n      settings: {\n        ...tenant.settings,\n        ...settings,\n      },\n    });\n  };\n\n  return {\n    settings: tenant?.settings,\n    updateSettings,\n    timezone: tenant?.settings.timezone || \"Asia/Seoul\",\n    currency: tenant?.settings.currency || \"KRW\",\n    language: tenant?.settings.language || \"ko\",\n  };\n};\n\n// 테넌트 브랜딩 훅\nexport const useTenantBranding = () => {\n  const { tenant, updateTenant } = useTenant();\n\n  const updateBranding = async (branding: any) => {\n    if (!tenant) return;\n\n    await updateTenant({\n      branding: {\n        ...tenant.branding,\n        ...branding,\n      },\n    });\n  };\n\n  return {\n    branding: tenant?.branding,\n    updateBranding,\n    primaryColor: tenant?.branding.primary_color || \"#3b82f6\",\n    logoUrl: tenant?.branding.logo_url,\n  };\n};\n","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","/**\n * Copyright 2022 Joe Bell. All rights reserved.\n *\n * This file is licensed to you under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with the\n * License. You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR REPRESENTATIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */ import { clsx } from \"clsx\";\nconst falsyToString = (value)=>typeof value === \"boolean\" ? `${value}` : value === 0 ? \"0\" : value;\nexport const cx = clsx;\nexport const cva = (base, config)=>(props)=>{\n        var _config_compoundVariants;\n        if ((config === null || config === void 0 ? void 0 : config.variants) == null) return cx(base, props === null || props === void 0 ? void 0 : props.class, props === null || props === void 0 ? void 0 : props.className);\n        const { variants, defaultVariants } = config;\n        const getVariantClassNames = Object.keys(variants).map((variant)=>{\n            const variantProp = props === null || props === void 0 ? void 0 : props[variant];\n            const defaultVariantProp = defaultVariants === null || defaultVariants === void 0 ? void 0 : defaultVariants[variant];\n            if (variantProp === null) return null;\n            const variantKey = falsyToString(variantProp) || falsyToString(defaultVariantProp);\n            return variants[variant][variantKey];\n        });\n        const propsWithoutUndefined = props && Object.entries(props).reduce((acc, param)=>{\n            let [key, value] = param;\n            if (value === undefined) {\n                return acc;\n            }\n            acc[key] = value;\n            return acc;\n        }, {});\n        const getCompoundVariantClassNames = config === null || config === void 0 ? void 0 : (_config_compoundVariants = config.compoundVariants) === null || _config_compoundVariants === void 0 ? void 0 : _config_compoundVariants.reduce((acc, param)=>{\n            let { class: cvClass, className: cvClassName, ...compoundVariantOptions } = param;\n            return Object.entries(compoundVariantOptions).every((param)=>{\n                let [key, value] = param;\n                return Array.isArray(value) ? value.includes({\n                    ...defaultVariants,\n                    ...propsWithoutUndefined\n                }[key]) : ({\n                    ...defaultVariants,\n                    ...propsWithoutUndefined\n                })[key] === value;\n            }) ? [\n                ...acc,\n                cvClass,\n                cvClassName\n            ] : acc;\n        }, []);\n        return cx(base, getVariantClassNames, getCompoundVariantClassNames, props === null || props === void 0 ? void 0 : props.class, props === null || props === void 0 ? void 0 : props.className);\n    };\n\n","const CLASS_PART_SEPARATOR = '-';\nconst createClassGroupUtils = config => {\n  const classMap = createClassMap(config);\n  const {\n    conflictingClassGroups,\n    conflictingClassGroupModifiers\n  } = config;\n  const getClassGroupId = className => {\n    const classParts = className.split(CLASS_PART_SEPARATOR);\n    // Classes like `-inset-1` produce an empty string as first classPart. We assume that classes for negative values are used correctly and remove it from classParts.\n    if (classParts[0] === '' && classParts.length !== 1) {\n      classParts.shift();\n    }\n    return getGroupRecursive(classParts, classMap) || getGroupIdForArbitraryProperty(className);\n  };\n  const getConflictingClassGroupIds = (classGroupId, hasPostfixModifier) => {\n    const conflicts = conflictingClassGroups[classGroupId] || [];\n    if (hasPostfixModifier && conflictingClassGroupModifiers[classGroupId]) {\n      return [...conflicts, ...conflictingClassGroupModifiers[classGroupId]];\n    }\n    return conflicts;\n  };\n  return {\n    getClassGroupId,\n    getConflictingClassGroupIds\n  };\n};\nconst getGroupRecursive = (classParts, classPartObject) => {\n  if (classParts.length === 0) {\n    return classPartObject.classGroupId;\n  }\n  const currentClassPart = classParts[0];\n  const nextClassPartObject = classPartObject.nextPart.get(currentClassPart);\n  const classGroupFromNextClassPart = nextClassPartObject ? getGroupRecursive(classParts.slice(1), nextClassPartObject) : undefined;\n  if (classGroupFromNextClassPart) {\n    return classGroupFromNextClassPart;\n  }\n  if (classPartObject.validators.length === 0) {\n    return undefined;\n  }\n  const classRest = classParts.join(CLASS_PART_SEPARATOR);\n  return classPartObject.validators.find(({\n    validator\n  }) => validator(classRest))?.classGroupId;\n};\nconst arbitraryPropertyRegex = /^\\[(.+)\\]$/;\nconst getGroupIdForArbitraryProperty = className => {\n  if (arbitraryPropertyRegex.test(className)) {\n    const arbitraryPropertyClassName = arbitraryPropertyRegex.exec(className)[1];\n    const property = arbitraryPropertyClassName?.substring(0, arbitraryPropertyClassName.indexOf(':'));\n    if (property) {\n      // I use two dots here because one dot is used as prefix for class groups in plugins\n      return 'arbitrary..' + property;\n    }\n  }\n};\n/**\n * Exported for testing only\n */\nconst createClassMap = config => {\n  const {\n    theme,\n    classGroups\n  } = config;\n  const classMap = {\n    nextPart: new Map(),\n    validators: []\n  };\n  for (const classGroupId in classGroups) {\n    processClassesRecursively(classGroups[classGroupId], classMap, classGroupId, theme);\n  }\n  return classMap;\n};\nconst processClassesRecursively = (classGroup, classPartObject, classGroupId, theme) => {\n  classGroup.forEach(classDefinition => {\n    if (typeof classDefinition === 'string') {\n      const classPartObjectToEdit = classDefinition === '' ? classPartObject : getPart(classPartObject, classDefinition);\n      classPartObjectToEdit.classGroupId = classGroupId;\n      return;\n    }\n    if (typeof classDefinition === 'function') {\n      if (isThemeGetter(classDefinition)) {\n        processClassesRecursively(classDefinition(theme), classPartObject, classGroupId, theme);\n        return;\n      }\n      classPartObject.validators.push({\n        validator: classDefinition,\n        classGroupId\n      });\n      return;\n    }\n    Object.entries(classDefinition).forEach(([key, classGroup]) => {\n      processClassesRecursively(classGroup, getPart(classPartObject, key), classGroupId, theme);\n    });\n  });\n};\nconst getPart = (classPartObject, path) => {\n  let currentClassPartObject = classPartObject;\n  path.split(CLASS_PART_SEPARATOR).forEach(pathPart => {\n    if (!currentClassPartObject.nextPart.has(pathPart)) {\n      currentClassPartObject.nextPart.set(pathPart, {\n        nextPart: new Map(),\n        validators: []\n      });\n    }\n    currentClassPartObject = currentClassPartObject.nextPart.get(pathPart);\n  });\n  return currentClassPartObject;\n};\nconst isThemeGetter = func => func.isThemeGetter;\n\n// LRU cache inspired from hashlru (https://github.com/dominictarr/hashlru/blob/v1.0.4/index.js) but object replaced with Map to improve performance\nconst createLruCache = maxCacheSize => {\n  if (maxCacheSize < 1) {\n    return {\n      get: () => undefined,\n      set: () => {}\n    };\n  }\n  let cacheSize = 0;\n  let cache = new Map();\n  let previousCache = new Map();\n  const update = (key, value) => {\n    cache.set(key, value);\n    cacheSize++;\n    if (cacheSize > maxCacheSize) {\n      cacheSize = 0;\n      previousCache = cache;\n      cache = new Map();\n    }\n  };\n  return {\n    get(key) {\n      let value = cache.get(key);\n      if (value !== undefined) {\n        return value;\n      }\n      if ((value = previousCache.get(key)) !== undefined) {\n        update(key, value);\n        return value;\n      }\n    },\n    set(key, value) {\n      if (cache.has(key)) {\n        cache.set(key, value);\n      } else {\n        update(key, value);\n      }\n    }\n  };\n};\nconst IMPORTANT_MODIFIER = '!';\nconst MODIFIER_SEPARATOR = ':';\nconst MODIFIER_SEPARATOR_LENGTH = MODIFIER_SEPARATOR.length;\nconst createParseClassName = config => {\n  const {\n    prefix,\n    experimentalParseClassName\n  } = config;\n  /**\n   * Parse class name into parts.\n   *\n   * Inspired by `splitAtTopLevelOnly` used in Tailwind CSS\n   * @see https://github.com/tailwindlabs/tailwindcss/blob/v3.2.2/src/util/splitAtTopLevelOnly.js\n   */\n  let parseClassName = className => {\n    const modifiers = [];\n    let bracketDepth = 0;\n    let parenDepth = 0;\n    let modifierStart = 0;\n    let postfixModifierPosition;\n    for (let index = 0; index < className.length; index++) {\n      let currentCharacter = className[index];\n      if (bracketDepth === 0 && parenDepth === 0) {\n        if (currentCharacter === MODIFIER_SEPARATOR) {\n          modifiers.push(className.slice(modifierStart, index));\n          modifierStart = index + MODIFIER_SEPARATOR_LENGTH;\n          continue;\n        }\n        if (currentCharacter === '/') {\n          postfixModifierPosition = index;\n          continue;\n        }\n      }\n      if (currentCharacter === '[') {\n        bracketDepth++;\n      } else if (currentCharacter === ']') {\n        bracketDepth--;\n      } else if (currentCharacter === '(') {\n        parenDepth++;\n      } else if (currentCharacter === ')') {\n        parenDepth--;\n      }\n    }\n    const baseClassNameWithImportantModifier = modifiers.length === 0 ? className : className.substring(modifierStart);\n    const baseClassName = stripImportantModifier(baseClassNameWithImportantModifier);\n    const hasImportantModifier = baseClassName !== baseClassNameWithImportantModifier;\n    const maybePostfixModifierPosition = postfixModifierPosition && postfixModifierPosition > modifierStart ? postfixModifierPosition - modifierStart : undefined;\n    return {\n      modifiers,\n      hasImportantModifier,\n      baseClassName,\n      maybePostfixModifierPosition\n    };\n  };\n  if (prefix) {\n    const fullPrefix = prefix + MODIFIER_SEPARATOR;\n    const parseClassNameOriginal = parseClassName;\n    parseClassName = className => className.startsWith(fullPrefix) ? parseClassNameOriginal(className.substring(fullPrefix.length)) : {\n      isExternal: true,\n      modifiers: [],\n      hasImportantModifier: false,\n      baseClassName: className,\n      maybePostfixModifierPosition: undefined\n    };\n  }\n  if (experimentalParseClassName) {\n    const parseClassNameOriginal = parseClassName;\n    parseClassName = className => experimentalParseClassName({\n      className,\n      parseClassName: parseClassNameOriginal\n    });\n  }\n  return parseClassName;\n};\nconst stripImportantModifier = baseClassName => {\n  if (baseClassName.endsWith(IMPORTANT_MODIFIER)) {\n    return baseClassName.substring(0, baseClassName.length - 1);\n  }\n  /**\n   * In Tailwind CSS v3 the important modifier was at the start of the base class name. This is still supported for legacy reasons.\n   * @see https://github.com/dcastil/tailwind-merge/issues/513#issuecomment-2614029864\n   */\n  if (baseClassName.startsWith(IMPORTANT_MODIFIER)) {\n    return baseClassName.substring(1);\n  }\n  return baseClassName;\n};\n\n/**\n * Sorts modifiers according to following schema:\n * - Predefined modifiers are sorted alphabetically\n * - When an arbitrary variant appears, it must be preserved which modifiers are before and after it\n */\nconst createSortModifiers = config => {\n  const orderSensitiveModifiers = Object.fromEntries(config.orderSensitiveModifiers.map(modifier => [modifier, true]));\n  const sortModifiers = modifiers => {\n    if (modifiers.length <= 1) {\n      return modifiers;\n    }\n    const sortedModifiers = [];\n    let unsortedModifiers = [];\n    modifiers.forEach(modifier => {\n      const isPositionSensitive = modifier[0] === '[' || orderSensitiveModifiers[modifier];\n      if (isPositionSensitive) {\n        sortedModifiers.push(...unsortedModifiers.sort(), modifier);\n        unsortedModifiers = [];\n      } else {\n        unsortedModifiers.push(modifier);\n      }\n    });\n    sortedModifiers.push(...unsortedModifiers.sort());\n    return sortedModifiers;\n  };\n  return sortModifiers;\n};\nconst createConfigUtils = config => ({\n  cache: createLruCache(config.cacheSize),\n  parseClassName: createParseClassName(config),\n  sortModifiers: createSortModifiers(config),\n  ...createClassGroupUtils(config)\n});\nconst SPLIT_CLASSES_REGEX = /\\s+/;\nconst mergeClassList = (classList, configUtils) => {\n  const {\n    parseClassName,\n    getClassGroupId,\n    getConflictingClassGroupIds,\n    sortModifiers\n  } = configUtils;\n  /**\n   * Set of classGroupIds in following format:\n   * `{importantModifier}{variantModifiers}{classGroupId}`\n   * @example 'float'\n   * @example 'hover:focus:bg-color'\n   * @example 'md:!pr'\n   */\n  const classGroupsInConflict = [];\n  const classNames = classList.trim().split(SPLIT_CLASSES_REGEX);\n  let result = '';\n  for (let index = classNames.length - 1; index >= 0; index -= 1) {\n    const originalClassName = classNames[index];\n    const {\n      isExternal,\n      modifiers,\n      hasImportantModifier,\n      baseClassName,\n      maybePostfixModifierPosition\n    } = parseClassName(originalClassName);\n    if (isExternal) {\n      result = originalClassName + (result.length > 0 ? ' ' + result : result);\n      continue;\n    }\n    let hasPostfixModifier = !!maybePostfixModifierPosition;\n    let classGroupId = getClassGroupId(hasPostfixModifier ? baseClassName.substring(0, maybePostfixModifierPosition) : baseClassName);\n    if (!classGroupId) {\n      if (!hasPostfixModifier) {\n        // Not a Tailwind class\n        result = originalClassName + (result.length > 0 ? ' ' + result : result);\n        continue;\n      }\n      classGroupId = getClassGroupId(baseClassName);\n      if (!classGroupId) {\n        // Not a Tailwind class\n        result = originalClassName + (result.length > 0 ? ' ' + result : result);\n        continue;\n      }\n      hasPostfixModifier = false;\n    }\n    const variantModifier = sortModifiers(modifiers).join(':');\n    const modifierId = hasImportantModifier ? variantModifier + IMPORTANT_MODIFIER : variantModifier;\n    const classId = modifierId + classGroupId;\n    if (classGroupsInConflict.includes(classId)) {\n      // Tailwind class omitted due to conflict\n      continue;\n    }\n    classGroupsInConflict.push(classId);\n    const conflictGroups = getConflictingClassGroupIds(classGroupId, hasPostfixModifier);\n    for (let i = 0; i < conflictGroups.length; ++i) {\n      const group = conflictGroups[i];\n      classGroupsInConflict.push(modifierId + group);\n    }\n    // Tailwind class not in conflict\n    result = originalClassName + (result.length > 0 ? ' ' + result : result);\n  }\n  return result;\n};\n\n/**\n * The code in this file is copied from https://github.com/lukeed/clsx and modified to suit the needs of tailwind-merge better.\n *\n * Specifically:\n * - Runtime code from https://github.com/lukeed/clsx/blob/v1.2.1/src/index.js\n * - TypeScript types from https://github.com/lukeed/clsx/blob/v1.2.1/clsx.d.ts\n *\n * Original code has MIT license: Copyright (c) Luke Edwards <luke.edwards05@gmail.com> (lukeed.com)\n */\nfunction twJoin() {\n  let index = 0;\n  let argument;\n  let resolvedValue;\n  let string = '';\n  while (index < arguments.length) {\n    if (argument = arguments[index++]) {\n      if (resolvedValue = toValue(argument)) {\n        string && (string += ' ');\n        string += resolvedValue;\n      }\n    }\n  }\n  return string;\n}\nconst toValue = mix => {\n  if (typeof mix === 'string') {\n    return mix;\n  }\n  let resolvedValue;\n  let string = '';\n  for (let k = 0; k < mix.length; k++) {\n    if (mix[k]) {\n      if (resolvedValue = toValue(mix[k])) {\n        string && (string += ' ');\n        string += resolvedValue;\n      }\n    }\n  }\n  return string;\n};\nfunction createTailwindMerge(createConfigFirst, ...createConfigRest) {\n  let configUtils;\n  let cacheGet;\n  let cacheSet;\n  let functionToCall = initTailwindMerge;\n  function initTailwindMerge(classList) {\n    const config = createConfigRest.reduce((previousConfig, createConfigCurrent) => createConfigCurrent(previousConfig), createConfigFirst());\n    configUtils = createConfigUtils(config);\n    cacheGet = configUtils.cache.get;\n    cacheSet = configUtils.cache.set;\n    functionToCall = tailwindMerge;\n    return tailwindMerge(classList);\n  }\n  function tailwindMerge(classList) {\n    const cachedResult = cacheGet(classList);\n    if (cachedResult) {\n      return cachedResult;\n    }\n    const result = mergeClassList(classList, configUtils);\n    cacheSet(classList, result);\n    return result;\n  }\n  return function callTailwindMerge() {\n    return functionToCall(twJoin.apply(null, arguments));\n  };\n}\nconst fromTheme = key => {\n  const themeGetter = theme => theme[key] || [];\n  themeGetter.isThemeGetter = true;\n  return themeGetter;\n};\nconst arbitraryValueRegex = /^\\[(?:(\\w[\\w-]*):)?(.+)\\]$/i;\nconst arbitraryVariableRegex = /^\\((?:(\\w[\\w-]*):)?(.+)\\)$/i;\nconst fractionRegex = /^\\d+\\/\\d+$/;\nconst tshirtUnitRegex = /^(\\d+(\\.\\d+)?)?(xs|sm|md|lg|xl)$/;\nconst lengthUnitRegex = /\\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\\b(calc|min|max|clamp)\\(.+\\)|^0$/;\nconst colorFunctionRegex = /^(rgba?|hsla?|hwb|(ok)?(lab|lch)|color-mix)\\(.+\\)$/;\n// Shadow always begins with x and y offset separated by underscore optionally prepended by inset\nconst shadowRegex = /^(inset_)?-?((\\d+)?\\.?(\\d+)[a-z]+|0)_-?((\\d+)?\\.?(\\d+)[a-z]+|0)/;\nconst imageRegex = /^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\\(.+\\)$/;\nconst isFraction = value => fractionRegex.test(value);\nconst isNumber = value => !!value && !Number.isNaN(Number(value));\nconst isInteger = value => !!value && Number.isInteger(Number(value));\nconst isPercent = value => value.endsWith('%') && isNumber(value.slice(0, -1));\nconst isTshirtSize = value => tshirtUnitRegex.test(value);\nconst isAny = () => true;\nconst isLengthOnly = value =>\n// `colorFunctionRegex` check is necessary because color functions can have percentages in them which which would be incorrectly classified as lengths.\n// For example, `hsl(0 0% 0%)` would be classified as a length without this check.\n// I could also use lookbehind assertion in `lengthUnitRegex` but that isn't supported widely enough.\nlengthUnitRegex.test(value) && !colorFunctionRegex.test(value);\nconst isNever = () => false;\nconst isShadow = value => shadowRegex.test(value);\nconst isImage = value => imageRegex.test(value);\nconst isAnyNonArbitrary = value => !isArbitraryValue(value) && !isArbitraryVariable(value);\nconst isArbitrarySize = value => getIsArbitraryValue(value, isLabelSize, isNever);\nconst isArbitraryValue = value => arbitraryValueRegex.test(value);\nconst isArbitraryLength = value => getIsArbitraryValue(value, isLabelLength, isLengthOnly);\nconst isArbitraryNumber = value => getIsArbitraryValue(value, isLabelNumber, isNumber);\nconst isArbitraryPosition = value => getIsArbitraryValue(value, isLabelPosition, isNever);\nconst isArbitraryImage = value => getIsArbitraryValue(value, isLabelImage, isImage);\nconst isArbitraryShadow = value => getIsArbitraryValue(value, isLabelShadow, isShadow);\nconst isArbitraryVariable = value => arbitraryVariableRegex.test(value);\nconst isArbitraryVariableLength = value => getIsArbitraryVariable(value, isLabelLength);\nconst isArbitraryVariableFamilyName = value => getIsArbitraryVariable(value, isLabelFamilyName);\nconst isArbitraryVariablePosition = value => getIsArbitraryVariable(value, isLabelPosition);\nconst isArbitraryVariableSize = value => getIsArbitraryVariable(value, isLabelSize);\nconst isArbitraryVariableImage = value => getIsArbitraryVariable(value, isLabelImage);\nconst isArbitraryVariableShadow = value => getIsArbitraryVariable(value, isLabelShadow, true);\n// Helpers\nconst getIsArbitraryValue = (value, testLabel, testValue) => {\n  const result = arbitraryValueRegex.exec(value);\n  if (result) {\n    if (result[1]) {\n      return testLabel(result[1]);\n    }\n    return testValue(result[2]);\n  }\n  return false;\n};\nconst getIsArbitraryVariable = (value, testLabel, shouldMatchNoLabel = false) => {\n  const result = arbitraryVariableRegex.exec(value);\n  if (result) {\n    if (result[1]) {\n      return testLabel(result[1]);\n    }\n    return shouldMatchNoLabel;\n  }\n  return false;\n};\n// Labels\nconst isLabelPosition = label => label === 'position' || label === 'percentage';\nconst isLabelImage = label => label === 'image' || label === 'url';\nconst isLabelSize = label => label === 'length' || label === 'size' || label === 'bg-size';\nconst isLabelLength = label => label === 'length';\nconst isLabelNumber = label => label === 'number';\nconst isLabelFamilyName = label => label === 'family-name';\nconst isLabelShadow = label => label === 'shadow';\nconst validators = /*#__PURE__*/Object.defineProperty({\n  __proto__: null,\n  isAny,\n  isAnyNonArbitrary,\n  isArbitraryImage,\n  isArbitraryLength,\n  isArbitraryNumber,\n  isArbitraryPosition,\n  isArbitraryShadow,\n  isArbitrarySize,\n  isArbitraryValue,\n  isArbitraryVariable,\n  isArbitraryVariableFamilyName,\n  isArbitraryVariableImage,\n  isArbitraryVariableLength,\n  isArbitraryVariablePosition,\n  isArbitraryVariableShadow,\n  isArbitraryVariableSize,\n  isFraction,\n  isInteger,\n  isNumber,\n  isPercent,\n  isTshirtSize\n}, Symbol.toStringTag, {\n  value: 'Module'\n});\nconst getDefaultConfig = () => {\n  /**\n   * Theme getters for theme variable namespaces\n   * @see https://tailwindcss.com/docs/theme#theme-variable-namespaces\n   */\n  /***/\n  const themeColor = fromTheme('color');\n  const themeFont = fromTheme('font');\n  const themeText = fromTheme('text');\n  const themeFontWeight = fromTheme('font-weight');\n  const themeTracking = fromTheme('tracking');\n  const themeLeading = fromTheme('leading');\n  const themeBreakpoint = fromTheme('breakpoint');\n  const themeContainer = fromTheme('container');\n  const themeSpacing = fromTheme('spacing');\n  const themeRadius = fromTheme('radius');\n  const themeShadow = fromTheme('shadow');\n  const themeInsetShadow = fromTheme('inset-shadow');\n  const themeTextShadow = fromTheme('text-shadow');\n  const themeDropShadow = fromTheme('drop-shadow');\n  const themeBlur = fromTheme('blur');\n  const themePerspective = fromTheme('perspective');\n  const themeAspect = fromTheme('aspect');\n  const themeEase = fromTheme('ease');\n  const themeAnimate = fromTheme('animate');\n  /**\n   * Helpers to avoid repeating the same scales\n   *\n   * We use functions that create a new array every time they're called instead of static arrays.\n   * This ensures that users who modify any scale by mutating the array (e.g. with `array.push(element)`) don't accidentally mutate arrays in other parts of the config.\n   */\n  /***/\n  const scaleBreak = () => ['auto', 'avoid', 'all', 'avoid-page', 'page', 'left', 'right', 'column'];\n  const scalePosition = () => ['center', 'top', 'bottom', 'left', 'right', 'top-left',\n  // Deprecated since Tailwind CSS v4.1.0, see https://github.com/tailwindlabs/tailwindcss/pull/17378\n  'left-top', 'top-right',\n  // Deprecated since Tailwind CSS v4.1.0, see https://github.com/tailwindlabs/tailwindcss/pull/17378\n  'right-top', 'bottom-right',\n  // Deprecated since Tailwind CSS v4.1.0, see https://github.com/tailwindlabs/tailwindcss/pull/17378\n  'right-bottom', 'bottom-left',\n  // Deprecated since Tailwind CSS v4.1.0, see https://github.com/tailwindlabs/tailwindcss/pull/17378\n  'left-bottom'];\n  const scalePositionWithArbitrary = () => [...scalePosition(), isArbitraryVariable, isArbitraryValue];\n  const scaleOverflow = () => ['auto', 'hidden', 'clip', 'visible', 'scroll'];\n  const scaleOverscroll = () => ['auto', 'contain', 'none'];\n  const scaleUnambiguousSpacing = () => [isArbitraryVariable, isArbitraryValue, themeSpacing];\n  const scaleInset = () => [isFraction, 'full', 'auto', ...scaleUnambiguousSpacing()];\n  const scaleGridTemplateColsRows = () => [isInteger, 'none', 'subgrid', isArbitraryVariable, isArbitraryValue];\n  const scaleGridColRowStartAndEnd = () => ['auto', {\n    span: ['full', isInteger, isArbitraryVariable, isArbitraryValue]\n  }, isInteger, isArbitraryVariable, isArbitraryValue];\n  const scaleGridColRowStartOrEnd = () => [isInteger, 'auto', isArbitraryVariable, isArbitraryValue];\n  const scaleGridAutoColsRows = () => ['auto', 'min', 'max', 'fr', isArbitraryVariable, isArbitraryValue];\n  const scaleAlignPrimaryAxis = () => ['start', 'end', 'center', 'between', 'around', 'evenly', 'stretch', 'baseline', 'center-safe', 'end-safe'];\n  const scaleAlignSecondaryAxis = () => ['start', 'end', 'center', 'stretch', 'center-safe', 'end-safe'];\n  const scaleMargin = () => ['auto', ...scaleUnambiguousSpacing()];\n  const scaleSizing = () => [isFraction, 'auto', 'full', 'dvw', 'dvh', 'lvw', 'lvh', 'svw', 'svh', 'min', 'max', 'fit', ...scaleUnambiguousSpacing()];\n  const scaleColor = () => [themeColor, isArbitraryVariable, isArbitraryValue];\n  const scaleBgPosition = () => [...scalePosition(), isArbitraryVariablePosition, isArbitraryPosition, {\n    position: [isArbitraryVariable, isArbitraryValue]\n  }];\n  const scaleBgRepeat = () => ['no-repeat', {\n    repeat: ['', 'x', 'y', 'space', 'round']\n  }];\n  const scaleBgSize = () => ['auto', 'cover', 'contain', isArbitraryVariableSize, isArbitrarySize, {\n    size: [isArbitraryVariable, isArbitraryValue]\n  }];\n  const scaleGradientStopPosition = () => [isPercent, isArbitraryVariableLength, isArbitraryLength];\n  const scaleRadius = () => [\n  // Deprecated since Tailwind CSS v4.0.0\n  '', 'none', 'full', themeRadius, isArbitraryVariable, isArbitraryValue];\n  const scaleBorderWidth = () => ['', isNumber, isArbitraryVariableLength, isArbitraryLength];\n  const scaleLineStyle = () => ['solid', 'dashed', 'dotted', 'double'];\n  const scaleBlendMode = () => ['normal', 'multiply', 'screen', 'overlay', 'darken', 'lighten', 'color-dodge', 'color-burn', 'hard-light', 'soft-light', 'difference', 'exclusion', 'hue', 'saturation', 'color', 'luminosity'];\n  const scaleMaskImagePosition = () => [isNumber, isPercent, isArbitraryVariablePosition, isArbitraryPosition];\n  const scaleBlur = () => [\n  // Deprecated since Tailwind CSS v4.0.0\n  '', 'none', themeBlur, isArbitraryVariable, isArbitraryValue];\n  const scaleRotate = () => ['none', isNumber, isArbitraryVariable, isArbitraryValue];\n  const scaleScale = () => ['none', isNumber, isArbitraryVariable, isArbitraryValue];\n  const scaleSkew = () => [isNumber, isArbitraryVariable, isArbitraryValue];\n  const scaleTranslate = () => [isFraction, 'full', ...scaleUnambiguousSpacing()];\n  return {\n    cacheSize: 500,\n    theme: {\n      animate: ['spin', 'ping', 'pulse', 'bounce'],\n      aspect: ['video'],\n      blur: [isTshirtSize],\n      breakpoint: [isTshirtSize],\n      color: [isAny],\n      container: [isTshirtSize],\n      'drop-shadow': [isTshirtSize],\n      ease: ['in', 'out', 'in-out'],\n      font: [isAnyNonArbitrary],\n      'font-weight': ['thin', 'extralight', 'light', 'normal', 'medium', 'semibold', 'bold', 'extrabold', 'black'],\n      'inset-shadow': [isTshirtSize],\n      leading: ['none', 'tight', 'snug', 'normal', 'relaxed', 'loose'],\n      perspective: ['dramatic', 'near', 'normal', 'midrange', 'distant', 'none'],\n      radius: [isTshirtSize],\n      shadow: [isTshirtSize],\n      spacing: ['px', isNumber],\n      text: [isTshirtSize],\n      'text-shadow': [isTshirtSize],\n      tracking: ['tighter', 'tight', 'normal', 'wide', 'wider', 'widest']\n    },\n    classGroups: {\n      // --------------\n      // --- Layout ---\n      // --------------\n      /**\n       * Aspect Ratio\n       * @see https://tailwindcss.com/docs/aspect-ratio\n       */\n      aspect: [{\n        aspect: ['auto', 'square', isFraction, isArbitraryValue, isArbitraryVariable, themeAspect]\n      }],\n      /**\n       * Container\n       * @see https://tailwindcss.com/docs/container\n       * @deprecated since Tailwind CSS v4.0.0\n       */\n      container: ['container'],\n      /**\n       * Columns\n       * @see https://tailwindcss.com/docs/columns\n       */\n      columns: [{\n        columns: [isNumber, isArbitraryValue, isArbitraryVariable, themeContainer]\n      }],\n      /**\n       * Break After\n       * @see https://tailwindcss.com/docs/break-after\n       */\n      'break-after': [{\n        'break-after': scaleBreak()\n      }],\n      /**\n       * Break Before\n       * @see https://tailwindcss.com/docs/break-before\n       */\n      'break-before': [{\n        'break-before': scaleBreak()\n      }],\n      /**\n       * Break Inside\n       * @see https://tailwindcss.com/docs/break-inside\n       */\n      'break-inside': [{\n        'break-inside': ['auto', 'avoid', 'avoid-page', 'avoid-column']\n      }],\n      /**\n       * Box Decoration Break\n       * @see https://tailwindcss.com/docs/box-decoration-break\n       */\n      'box-decoration': [{\n        'box-decoration': ['slice', 'clone']\n      }],\n      /**\n       * Box Sizing\n       * @see https://tailwindcss.com/docs/box-sizing\n       */\n      box: [{\n        box: ['border', 'content']\n      }],\n      /**\n       * Display\n       * @see https://tailwindcss.com/docs/display\n       */\n      display: ['block', 'inline-block', 'inline', 'flex', 'inline-flex', 'table', 'inline-table', 'table-caption', 'table-cell', 'table-column', 'table-column-group', 'table-footer-group', 'table-header-group', 'table-row-group', 'table-row', 'flow-root', 'grid', 'inline-grid', 'contents', 'list-item', 'hidden'],\n      /**\n       * Screen Reader Only\n       * @see https://tailwindcss.com/docs/display#screen-reader-only\n       */\n      sr: ['sr-only', 'not-sr-only'],\n      /**\n       * Floats\n       * @see https://tailwindcss.com/docs/float\n       */\n      float: [{\n        float: ['right', 'left', 'none', 'start', 'end']\n      }],\n      /**\n       * Clear\n       * @see https://tailwindcss.com/docs/clear\n       */\n      clear: [{\n        clear: ['left', 'right', 'both', 'none', 'start', 'end']\n      }],\n      /**\n       * Isolation\n       * @see https://tailwindcss.com/docs/isolation\n       */\n      isolation: ['isolate', 'isolation-auto'],\n      /**\n       * Object Fit\n       * @see https://tailwindcss.com/docs/object-fit\n       */\n      'object-fit': [{\n        object: ['contain', 'cover', 'fill', 'none', 'scale-down']\n      }],\n      /**\n       * Object Position\n       * @see https://tailwindcss.com/docs/object-position\n       */\n      'object-position': [{\n        object: scalePositionWithArbitrary()\n      }],\n      /**\n       * Overflow\n       * @see https://tailwindcss.com/docs/overflow\n       */\n      overflow: [{\n        overflow: scaleOverflow()\n      }],\n      /**\n       * Overflow X\n       * @see https://tailwindcss.com/docs/overflow\n       */\n      'overflow-x': [{\n        'overflow-x': scaleOverflow()\n      }],\n      /**\n       * Overflow Y\n       * @see https://tailwindcss.com/docs/overflow\n       */\n      'overflow-y': [{\n        'overflow-y': scaleOverflow()\n      }],\n      /**\n       * Overscroll Behavior\n       * @see https://tailwindcss.com/docs/overscroll-behavior\n       */\n      overscroll: [{\n        overscroll: scaleOverscroll()\n      }],\n      /**\n       * Overscroll Behavior X\n       * @see https://tailwindcss.com/docs/overscroll-behavior\n       */\n      'overscroll-x': [{\n        'overscroll-x': scaleOverscroll()\n      }],\n      /**\n       * Overscroll Behavior Y\n       * @see https://tailwindcss.com/docs/overscroll-behavior\n       */\n      'overscroll-y': [{\n        'overscroll-y': scaleOverscroll()\n      }],\n      /**\n       * Position\n       * @see https://tailwindcss.com/docs/position\n       */\n      position: ['static', 'fixed', 'absolute', 'relative', 'sticky'],\n      /**\n       * Top / Right / Bottom / Left\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      inset: [{\n        inset: scaleInset()\n      }],\n      /**\n       * Right / Left\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      'inset-x': [{\n        'inset-x': scaleInset()\n      }],\n      /**\n       * Top / Bottom\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      'inset-y': [{\n        'inset-y': scaleInset()\n      }],\n      /**\n       * Start\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      start: [{\n        start: scaleInset()\n      }],\n      /**\n       * End\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      end: [{\n        end: scaleInset()\n      }],\n      /**\n       * Top\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      top: [{\n        top: scaleInset()\n      }],\n      /**\n       * Right\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      right: [{\n        right: scaleInset()\n      }],\n      /**\n       * Bottom\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      bottom: [{\n        bottom: scaleInset()\n      }],\n      /**\n       * Left\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      left: [{\n        left: scaleInset()\n      }],\n      /**\n       * Visibility\n       * @see https://tailwindcss.com/docs/visibility\n       */\n      visibility: ['visible', 'invisible', 'collapse'],\n      /**\n       * Z-Index\n       * @see https://tailwindcss.com/docs/z-index\n       */\n      z: [{\n        z: [isInteger, 'auto', isArbitraryVariable, isArbitraryValue]\n      }],\n      // ------------------------\n      // --- Flexbox and Grid ---\n      // ------------------------\n      /**\n       * Flex Basis\n       * @see https://tailwindcss.com/docs/flex-basis\n       */\n      basis: [{\n        basis: [isFraction, 'full', 'auto', themeContainer, ...scaleUnambiguousSpacing()]\n      }],\n      /**\n       * Flex Direction\n       * @see https://tailwindcss.com/docs/flex-direction\n       */\n      'flex-direction': [{\n        flex: ['row', 'row-reverse', 'col', 'col-reverse']\n      }],\n      /**\n       * Flex Wrap\n       * @see https://tailwindcss.com/docs/flex-wrap\n       */\n      'flex-wrap': [{\n        flex: ['nowrap', 'wrap', 'wrap-reverse']\n      }],\n      /**\n       * Flex\n       * @see https://tailwindcss.com/docs/flex\n       */\n      flex: [{\n        flex: [isNumber, isFraction, 'auto', 'initial', 'none', isArbitraryValue]\n      }],\n      /**\n       * Flex Grow\n       * @see https://tailwindcss.com/docs/flex-grow\n       */\n      grow: [{\n        grow: ['', isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Flex Shrink\n       * @see https://tailwindcss.com/docs/flex-shrink\n       */\n      shrink: [{\n        shrink: ['', isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Order\n       * @see https://tailwindcss.com/docs/order\n       */\n      order: [{\n        order: [isInteger, 'first', 'last', 'none', isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Grid Template Columns\n       * @see https://tailwindcss.com/docs/grid-template-columns\n       */\n      'grid-cols': [{\n        'grid-cols': scaleGridTemplateColsRows()\n      }],\n      /**\n       * Grid Column Start / End\n       * @see https://tailwindcss.com/docs/grid-column\n       */\n      'col-start-end': [{\n        col: scaleGridColRowStartAndEnd()\n      }],\n      /**\n       * Grid Column Start\n       * @see https://tailwindcss.com/docs/grid-column\n       */\n      'col-start': [{\n        'col-start': scaleGridColRowStartOrEnd()\n      }],\n      /**\n       * Grid Column End\n       * @see https://tailwindcss.com/docs/grid-column\n       */\n      'col-end': [{\n        'col-end': scaleGridColRowStartOrEnd()\n      }],\n      /**\n       * Grid Template Rows\n       * @see https://tailwindcss.com/docs/grid-template-rows\n       */\n      'grid-rows': [{\n        'grid-rows': scaleGridTemplateColsRows()\n      }],\n      /**\n       * Grid Row Start / End\n       * @see https://tailwindcss.com/docs/grid-row\n       */\n      'row-start-end': [{\n        row: scaleGridColRowStartAndEnd()\n      }],\n      /**\n       * Grid Row Start\n       * @see https://tailwindcss.com/docs/grid-row\n       */\n      'row-start': [{\n        'row-start': scaleGridColRowStartOrEnd()\n      }],\n      /**\n       * Grid Row End\n       * @see https://tailwindcss.com/docs/grid-row\n       */\n      'row-end': [{\n        'row-end': scaleGridColRowStartOrEnd()\n      }],\n      /**\n       * Grid Auto Flow\n       * @see https://tailwindcss.com/docs/grid-auto-flow\n       */\n      'grid-flow': [{\n        'grid-flow': ['row', 'col', 'dense', 'row-dense', 'col-dense']\n      }],\n      /**\n       * Grid Auto Columns\n       * @see https://tailwindcss.com/docs/grid-auto-columns\n       */\n      'auto-cols': [{\n        'auto-cols': scaleGridAutoColsRows()\n      }],\n      /**\n       * Grid Auto Rows\n       * @see https://tailwindcss.com/docs/grid-auto-rows\n       */\n      'auto-rows': [{\n        'auto-rows': scaleGridAutoColsRows()\n      }],\n      /**\n       * Gap\n       * @see https://tailwindcss.com/docs/gap\n       */\n      gap: [{\n        gap: scaleUnambiguousSpacing()\n      }],\n      /**\n       * Gap X\n       * @see https://tailwindcss.com/docs/gap\n       */\n      'gap-x': [{\n        'gap-x': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Gap Y\n       * @see https://tailwindcss.com/docs/gap\n       */\n      'gap-y': [{\n        'gap-y': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Justify Content\n       * @see https://tailwindcss.com/docs/justify-content\n       */\n      'justify-content': [{\n        justify: [...scaleAlignPrimaryAxis(), 'normal']\n      }],\n      /**\n       * Justify Items\n       * @see https://tailwindcss.com/docs/justify-items\n       */\n      'justify-items': [{\n        'justify-items': [...scaleAlignSecondaryAxis(), 'normal']\n      }],\n      /**\n       * Justify Self\n       * @see https://tailwindcss.com/docs/justify-self\n       */\n      'justify-self': [{\n        'justify-self': ['auto', ...scaleAlignSecondaryAxis()]\n      }],\n      /**\n       * Align Content\n       * @see https://tailwindcss.com/docs/align-content\n       */\n      'align-content': [{\n        content: ['normal', ...scaleAlignPrimaryAxis()]\n      }],\n      /**\n       * Align Items\n       * @see https://tailwindcss.com/docs/align-items\n       */\n      'align-items': [{\n        items: [...scaleAlignSecondaryAxis(), {\n          baseline: ['', 'last']\n        }]\n      }],\n      /**\n       * Align Self\n       * @see https://tailwindcss.com/docs/align-self\n       */\n      'align-self': [{\n        self: ['auto', ...scaleAlignSecondaryAxis(), {\n          baseline: ['', 'last']\n        }]\n      }],\n      /**\n       * Place Content\n       * @see https://tailwindcss.com/docs/place-content\n       */\n      'place-content': [{\n        'place-content': scaleAlignPrimaryAxis()\n      }],\n      /**\n       * Place Items\n       * @see https://tailwindcss.com/docs/place-items\n       */\n      'place-items': [{\n        'place-items': [...scaleAlignSecondaryAxis(), 'baseline']\n      }],\n      /**\n       * Place Self\n       * @see https://tailwindcss.com/docs/place-self\n       */\n      'place-self': [{\n        'place-self': ['auto', ...scaleAlignSecondaryAxis()]\n      }],\n      // Spacing\n      /**\n       * Padding\n       * @see https://tailwindcss.com/docs/padding\n       */\n      p: [{\n        p: scaleUnambiguousSpacing()\n      }],\n      /**\n       * Padding X\n       * @see https://tailwindcss.com/docs/padding\n       */\n      px: [{\n        px: scaleUnambiguousSpacing()\n      }],\n      /**\n       * Padding Y\n       * @see https://tailwindcss.com/docs/padding\n       */\n      py: [{\n        py: scaleUnambiguousSpacing()\n      }],\n      /**\n       * Padding Start\n       * @see https://tailwindcss.com/docs/padding\n       */\n      ps: [{\n        ps: scaleUnambiguousSpacing()\n      }],\n      /**\n       * Padding End\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pe: [{\n        pe: scaleUnambiguousSpacing()\n      }],\n      /**\n       * Padding Top\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pt: [{\n        pt: scaleUnambiguousSpacing()\n      }],\n      /**\n       * Padding Right\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pr: [{\n        pr: scaleUnambiguousSpacing()\n      }],\n      /**\n       * Padding Bottom\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pb: [{\n        pb: scaleUnambiguousSpacing()\n      }],\n      /**\n       * Padding Left\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pl: [{\n        pl: scaleUnambiguousSpacing()\n      }],\n      /**\n       * Margin\n       * @see https://tailwindcss.com/docs/margin\n       */\n      m: [{\n        m: scaleMargin()\n      }],\n      /**\n       * Margin X\n       * @see https://tailwindcss.com/docs/margin\n       */\n      mx: [{\n        mx: scaleMargin()\n      }],\n      /**\n       * Margin Y\n       * @see https://tailwindcss.com/docs/margin\n       */\n      my: [{\n        my: scaleMargin()\n      }],\n      /**\n       * Margin Start\n       * @see https://tailwindcss.com/docs/margin\n       */\n      ms: [{\n        ms: scaleMargin()\n      }],\n      /**\n       * Margin End\n       * @see https://tailwindcss.com/docs/margin\n       */\n      me: [{\n        me: scaleMargin()\n      }],\n      /**\n       * Margin Top\n       * @see https://tailwindcss.com/docs/margin\n       */\n      mt: [{\n        mt: scaleMargin()\n      }],\n      /**\n       * Margin Right\n       * @see https://tailwindcss.com/docs/margin\n       */\n      mr: [{\n        mr: scaleMargin()\n      }],\n      /**\n       * Margin Bottom\n       * @see https://tailwindcss.com/docs/margin\n       */\n      mb: [{\n        mb: scaleMargin()\n      }],\n      /**\n       * Margin Left\n       * @see https://tailwindcss.com/docs/margin\n       */\n      ml: [{\n        ml: scaleMargin()\n      }],\n      /**\n       * Space Between X\n       * @see https://tailwindcss.com/docs/margin#adding-space-between-children\n       */\n      'space-x': [{\n        'space-x': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Space Between X Reverse\n       * @see https://tailwindcss.com/docs/margin#adding-space-between-children\n       */\n      'space-x-reverse': ['space-x-reverse'],\n      /**\n       * Space Between Y\n       * @see https://tailwindcss.com/docs/margin#adding-space-between-children\n       */\n      'space-y': [{\n        'space-y': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Space Between Y Reverse\n       * @see https://tailwindcss.com/docs/margin#adding-space-between-children\n       */\n      'space-y-reverse': ['space-y-reverse'],\n      // --------------\n      // --- Sizing ---\n      // --------------\n      /**\n       * Size\n       * @see https://tailwindcss.com/docs/width#setting-both-width-and-height\n       */\n      size: [{\n        size: scaleSizing()\n      }],\n      /**\n       * Width\n       * @see https://tailwindcss.com/docs/width\n       */\n      w: [{\n        w: [themeContainer, 'screen', ...scaleSizing()]\n      }],\n      /**\n       * Min-Width\n       * @see https://tailwindcss.com/docs/min-width\n       */\n      'min-w': [{\n        'min-w': [themeContainer, 'screen', /** Deprecated. @see https://github.com/tailwindlabs/tailwindcss.com/issues/2027#issuecomment-2620152757 */\n        'none', ...scaleSizing()]\n      }],\n      /**\n       * Max-Width\n       * @see https://tailwindcss.com/docs/max-width\n       */\n      'max-w': [{\n        'max-w': [themeContainer, 'screen', 'none', /** Deprecated since Tailwind CSS v4.0.0. @see https://github.com/tailwindlabs/tailwindcss.com/issues/2027#issuecomment-2620152757 */\n        'prose', /** Deprecated since Tailwind CSS v4.0.0. @see https://github.com/tailwindlabs/tailwindcss.com/issues/2027#issuecomment-2620152757 */\n        {\n          screen: [themeBreakpoint]\n        }, ...scaleSizing()]\n      }],\n      /**\n       * Height\n       * @see https://tailwindcss.com/docs/height\n       */\n      h: [{\n        h: ['screen', 'lh', ...scaleSizing()]\n      }],\n      /**\n       * Min-Height\n       * @see https://tailwindcss.com/docs/min-height\n       */\n      'min-h': [{\n        'min-h': ['screen', 'lh', 'none', ...scaleSizing()]\n      }],\n      /**\n       * Max-Height\n       * @see https://tailwindcss.com/docs/max-height\n       */\n      'max-h': [{\n        'max-h': ['screen', 'lh', ...scaleSizing()]\n      }],\n      // ------------------\n      // --- Typography ---\n      // ------------------\n      /**\n       * Font Size\n       * @see https://tailwindcss.com/docs/font-size\n       */\n      'font-size': [{\n        text: ['base', themeText, isArbitraryVariableLength, isArbitraryLength]\n      }],\n      /**\n       * Font Smoothing\n       * @see https://tailwindcss.com/docs/font-smoothing\n       */\n      'font-smoothing': ['antialiased', 'subpixel-antialiased'],\n      /**\n       * Font Style\n       * @see https://tailwindcss.com/docs/font-style\n       */\n      'font-style': ['italic', 'not-italic'],\n      /**\n       * Font Weight\n       * @see https://tailwindcss.com/docs/font-weight\n       */\n      'font-weight': [{\n        font: [themeFontWeight, isArbitraryVariable, isArbitraryNumber]\n      }],\n      /**\n       * Font Stretch\n       * @see https://tailwindcss.com/docs/font-stretch\n       */\n      'font-stretch': [{\n        'font-stretch': ['ultra-condensed', 'extra-condensed', 'condensed', 'semi-condensed', 'normal', 'semi-expanded', 'expanded', 'extra-expanded', 'ultra-expanded', isPercent, isArbitraryValue]\n      }],\n      /**\n       * Font Family\n       * @see https://tailwindcss.com/docs/font-family\n       */\n      'font-family': [{\n        font: [isArbitraryVariableFamilyName, isArbitraryValue, themeFont]\n      }],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-normal': ['normal-nums'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-ordinal': ['ordinal'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-slashed-zero': ['slashed-zero'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-figure': ['lining-nums', 'oldstyle-nums'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-spacing': ['proportional-nums', 'tabular-nums'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-fraction': ['diagonal-fractions', 'stacked-fractions'],\n      /**\n       * Letter Spacing\n       * @see https://tailwindcss.com/docs/letter-spacing\n       */\n      tracking: [{\n        tracking: [themeTracking, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Line Clamp\n       * @see https://tailwindcss.com/docs/line-clamp\n       */\n      'line-clamp': [{\n        'line-clamp': [isNumber, 'none', isArbitraryVariable, isArbitraryNumber]\n      }],\n      /**\n       * Line Height\n       * @see https://tailwindcss.com/docs/line-height\n       */\n      leading: [{\n        leading: [/** Deprecated since Tailwind CSS v4.0.0. @see https://github.com/tailwindlabs/tailwindcss.com/issues/2027#issuecomment-2620152757 */\n        themeLeading, ...scaleUnambiguousSpacing()]\n      }],\n      /**\n       * List Style Image\n       * @see https://tailwindcss.com/docs/list-style-image\n       */\n      'list-image': [{\n        'list-image': ['none', isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * List Style Position\n       * @see https://tailwindcss.com/docs/list-style-position\n       */\n      'list-style-position': [{\n        list: ['inside', 'outside']\n      }],\n      /**\n       * List Style Type\n       * @see https://tailwindcss.com/docs/list-style-type\n       */\n      'list-style-type': [{\n        list: ['disc', 'decimal', 'none', isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Text Alignment\n       * @see https://tailwindcss.com/docs/text-align\n       */\n      'text-alignment': [{\n        text: ['left', 'center', 'right', 'justify', 'start', 'end']\n      }],\n      /**\n       * Placeholder Color\n       * @deprecated since Tailwind CSS v3.0.0\n       * @see https://v3.tailwindcss.com/docs/placeholder-color\n       */\n      'placeholder-color': [{\n        placeholder: scaleColor()\n      }],\n      /**\n       * Text Color\n       * @see https://tailwindcss.com/docs/text-color\n       */\n      'text-color': [{\n        text: scaleColor()\n      }],\n      /**\n       * Text Decoration\n       * @see https://tailwindcss.com/docs/text-decoration\n       */\n      'text-decoration': ['underline', 'overline', 'line-through', 'no-underline'],\n      /**\n       * Text Decoration Style\n       * @see https://tailwindcss.com/docs/text-decoration-style\n       */\n      'text-decoration-style': [{\n        decoration: [...scaleLineStyle(), 'wavy']\n      }],\n      /**\n       * Text Decoration Thickness\n       * @see https://tailwindcss.com/docs/text-decoration-thickness\n       */\n      'text-decoration-thickness': [{\n        decoration: [isNumber, 'from-font', 'auto', isArbitraryVariable, isArbitraryLength]\n      }],\n      /**\n       * Text Decoration Color\n       * @see https://tailwindcss.com/docs/text-decoration-color\n       */\n      'text-decoration-color': [{\n        decoration: scaleColor()\n      }],\n      /**\n       * Text Underline Offset\n       * @see https://tailwindcss.com/docs/text-underline-offset\n       */\n      'underline-offset': [{\n        'underline-offset': [isNumber, 'auto', isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Text Transform\n       * @see https://tailwindcss.com/docs/text-transform\n       */\n      'text-transform': ['uppercase', 'lowercase', 'capitalize', 'normal-case'],\n      /**\n       * Text Overflow\n       * @see https://tailwindcss.com/docs/text-overflow\n       */\n      'text-overflow': ['truncate', 'text-ellipsis', 'text-clip'],\n      /**\n       * Text Wrap\n       * @see https://tailwindcss.com/docs/text-wrap\n       */\n      'text-wrap': [{\n        text: ['wrap', 'nowrap', 'balance', 'pretty']\n      }],\n      /**\n       * Text Indent\n       * @see https://tailwindcss.com/docs/text-indent\n       */\n      indent: [{\n        indent: scaleUnambiguousSpacing()\n      }],\n      /**\n       * Vertical Alignment\n       * @see https://tailwindcss.com/docs/vertical-align\n       */\n      'vertical-align': [{\n        align: ['baseline', 'top', 'middle', 'bottom', 'text-top', 'text-bottom', 'sub', 'super', isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Whitespace\n       * @see https://tailwindcss.com/docs/whitespace\n       */\n      whitespace: [{\n        whitespace: ['normal', 'nowrap', 'pre', 'pre-line', 'pre-wrap', 'break-spaces']\n      }],\n      /**\n       * Word Break\n       * @see https://tailwindcss.com/docs/word-break\n       */\n      break: [{\n        break: ['normal', 'words', 'all', 'keep']\n      }],\n      /**\n       * Overflow Wrap\n       * @see https://tailwindcss.com/docs/overflow-wrap\n       */\n      wrap: [{\n        wrap: ['break-word', 'anywhere', 'normal']\n      }],\n      /**\n       * Hyphens\n       * @see https://tailwindcss.com/docs/hyphens\n       */\n      hyphens: [{\n        hyphens: ['none', 'manual', 'auto']\n      }],\n      /**\n       * Content\n       * @see https://tailwindcss.com/docs/content\n       */\n      content: [{\n        content: ['none', isArbitraryVariable, isArbitraryValue]\n      }],\n      // -------------------\n      // --- Backgrounds ---\n      // -------------------\n      /**\n       * Background Attachment\n       * @see https://tailwindcss.com/docs/background-attachment\n       */\n      'bg-attachment': [{\n        bg: ['fixed', 'local', 'scroll']\n      }],\n      /**\n       * Background Clip\n       * @see https://tailwindcss.com/docs/background-clip\n       */\n      'bg-clip': [{\n        'bg-clip': ['border', 'padding', 'content', 'text']\n      }],\n      /**\n       * Background Origin\n       * @see https://tailwindcss.com/docs/background-origin\n       */\n      'bg-origin': [{\n        'bg-origin': ['border', 'padding', 'content']\n      }],\n      /**\n       * Background Position\n       * @see https://tailwindcss.com/docs/background-position\n       */\n      'bg-position': [{\n        bg: scaleBgPosition()\n      }],\n      /**\n       * Background Repeat\n       * @see https://tailwindcss.com/docs/background-repeat\n       */\n      'bg-repeat': [{\n        bg: scaleBgRepeat()\n      }],\n      /**\n       * Background Size\n       * @see https://tailwindcss.com/docs/background-size\n       */\n      'bg-size': [{\n        bg: scaleBgSize()\n      }],\n      /**\n       * Background Image\n       * @see https://tailwindcss.com/docs/background-image\n       */\n      'bg-image': [{\n        bg: ['none', {\n          linear: [{\n            to: ['t', 'tr', 'r', 'br', 'b', 'bl', 'l', 'tl']\n          }, isInteger, isArbitraryVariable, isArbitraryValue],\n          radial: ['', isArbitraryVariable, isArbitraryValue],\n          conic: [isInteger, isArbitraryVariable, isArbitraryValue]\n        }, isArbitraryVariableImage, isArbitraryImage]\n      }],\n      /**\n       * Background Color\n       * @see https://tailwindcss.com/docs/background-color\n       */\n      'bg-color': [{\n        bg: scaleColor()\n      }],\n      /**\n       * Gradient Color Stops From Position\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-from-pos': [{\n        from: scaleGradientStopPosition()\n      }],\n      /**\n       * Gradient Color Stops Via Position\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-via-pos': [{\n        via: scaleGradientStopPosition()\n      }],\n      /**\n       * Gradient Color Stops To Position\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-to-pos': [{\n        to: scaleGradientStopPosition()\n      }],\n      /**\n       * Gradient Color Stops From\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-from': [{\n        from: scaleColor()\n      }],\n      /**\n       * Gradient Color Stops Via\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-via': [{\n        via: scaleColor()\n      }],\n      /**\n       * Gradient Color Stops To\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-to': [{\n        to: scaleColor()\n      }],\n      // ---------------\n      // --- Borders ---\n      // ---------------\n      /**\n       * Border Radius\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      rounded: [{\n        rounded: scaleRadius()\n      }],\n      /**\n       * Border Radius Start\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-s': [{\n        'rounded-s': scaleRadius()\n      }],\n      /**\n       * Border Radius End\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-e': [{\n        'rounded-e': scaleRadius()\n      }],\n      /**\n       * Border Radius Top\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-t': [{\n        'rounded-t': scaleRadius()\n      }],\n      /**\n       * Border Radius Right\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-r': [{\n        'rounded-r': scaleRadius()\n      }],\n      /**\n       * Border Radius Bottom\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-b': [{\n        'rounded-b': scaleRadius()\n      }],\n      /**\n       * Border Radius Left\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-l': [{\n        'rounded-l': scaleRadius()\n      }],\n      /**\n       * Border Radius Start Start\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-ss': [{\n        'rounded-ss': scaleRadius()\n      }],\n      /**\n       * Border Radius Start End\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-se': [{\n        'rounded-se': scaleRadius()\n      }],\n      /**\n       * Border Radius End End\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-ee': [{\n        'rounded-ee': scaleRadius()\n      }],\n      /**\n       * Border Radius End Start\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-es': [{\n        'rounded-es': scaleRadius()\n      }],\n      /**\n       * Border Radius Top Left\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-tl': [{\n        'rounded-tl': scaleRadius()\n      }],\n      /**\n       * Border Radius Top Right\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-tr': [{\n        'rounded-tr': scaleRadius()\n      }],\n      /**\n       * Border Radius Bottom Right\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-br': [{\n        'rounded-br': scaleRadius()\n      }],\n      /**\n       * Border Radius Bottom Left\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-bl': [{\n        'rounded-bl': scaleRadius()\n      }],\n      /**\n       * Border Width\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w': [{\n        border: scaleBorderWidth()\n      }],\n      /**\n       * Border Width X\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-x': [{\n        'border-x': scaleBorderWidth()\n      }],\n      /**\n       * Border Width Y\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-y': [{\n        'border-y': scaleBorderWidth()\n      }],\n      /**\n       * Border Width Start\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-s': [{\n        'border-s': scaleBorderWidth()\n      }],\n      /**\n       * Border Width End\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-e': [{\n        'border-e': scaleBorderWidth()\n      }],\n      /**\n       * Border Width Top\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-t': [{\n        'border-t': scaleBorderWidth()\n      }],\n      /**\n       * Border Width Right\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-r': [{\n        'border-r': scaleBorderWidth()\n      }],\n      /**\n       * Border Width Bottom\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-b': [{\n        'border-b': scaleBorderWidth()\n      }],\n      /**\n       * Border Width Left\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-l': [{\n        'border-l': scaleBorderWidth()\n      }],\n      /**\n       * Divide Width X\n       * @see https://tailwindcss.com/docs/border-width#between-children\n       */\n      'divide-x': [{\n        'divide-x': scaleBorderWidth()\n      }],\n      /**\n       * Divide Width X Reverse\n       * @see https://tailwindcss.com/docs/border-width#between-children\n       */\n      'divide-x-reverse': ['divide-x-reverse'],\n      /**\n       * Divide Width Y\n       * @see https://tailwindcss.com/docs/border-width#between-children\n       */\n      'divide-y': [{\n        'divide-y': scaleBorderWidth()\n      }],\n      /**\n       * Divide Width Y Reverse\n       * @see https://tailwindcss.com/docs/border-width#between-children\n       */\n      'divide-y-reverse': ['divide-y-reverse'],\n      /**\n       * Border Style\n       * @see https://tailwindcss.com/docs/border-style\n       */\n      'border-style': [{\n        border: [...scaleLineStyle(), 'hidden', 'none']\n      }],\n      /**\n       * Divide Style\n       * @see https://tailwindcss.com/docs/border-style#setting-the-divider-style\n       */\n      'divide-style': [{\n        divide: [...scaleLineStyle(), 'hidden', 'none']\n      }],\n      /**\n       * Border Color\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color': [{\n        border: scaleColor()\n      }],\n      /**\n       * Border Color X\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-x': [{\n        'border-x': scaleColor()\n      }],\n      /**\n       * Border Color Y\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-y': [{\n        'border-y': scaleColor()\n      }],\n      /**\n       * Border Color S\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-s': [{\n        'border-s': scaleColor()\n      }],\n      /**\n       * Border Color E\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-e': [{\n        'border-e': scaleColor()\n      }],\n      /**\n       * Border Color Top\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-t': [{\n        'border-t': scaleColor()\n      }],\n      /**\n       * Border Color Right\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-r': [{\n        'border-r': scaleColor()\n      }],\n      /**\n       * Border Color Bottom\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-b': [{\n        'border-b': scaleColor()\n      }],\n      /**\n       * Border Color Left\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-l': [{\n        'border-l': scaleColor()\n      }],\n      /**\n       * Divide Color\n       * @see https://tailwindcss.com/docs/divide-color\n       */\n      'divide-color': [{\n        divide: scaleColor()\n      }],\n      /**\n       * Outline Style\n       * @see https://tailwindcss.com/docs/outline-style\n       */\n      'outline-style': [{\n        outline: [...scaleLineStyle(), 'none', 'hidden']\n      }],\n      /**\n       * Outline Offset\n       * @see https://tailwindcss.com/docs/outline-offset\n       */\n      'outline-offset': [{\n        'outline-offset': [isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Outline Width\n       * @see https://tailwindcss.com/docs/outline-width\n       */\n      'outline-w': [{\n        outline: ['', isNumber, isArbitraryVariableLength, isArbitraryLength]\n      }],\n      /**\n       * Outline Color\n       * @see https://tailwindcss.com/docs/outline-color\n       */\n      'outline-color': [{\n        outline: scaleColor()\n      }],\n      // ---------------\n      // --- Effects ---\n      // ---------------\n      /**\n       * Box Shadow\n       * @see https://tailwindcss.com/docs/box-shadow\n       */\n      shadow: [{\n        shadow: [\n        // Deprecated since Tailwind CSS v4.0.0\n        '', 'none', themeShadow, isArbitraryVariableShadow, isArbitraryShadow]\n      }],\n      /**\n       * Box Shadow Color\n       * @see https://tailwindcss.com/docs/box-shadow#setting-the-shadow-color\n       */\n      'shadow-color': [{\n        shadow: scaleColor()\n      }],\n      /**\n       * Inset Box Shadow\n       * @see https://tailwindcss.com/docs/box-shadow#adding-an-inset-shadow\n       */\n      'inset-shadow': [{\n        'inset-shadow': ['none', themeInsetShadow, isArbitraryVariableShadow, isArbitraryShadow]\n      }],\n      /**\n       * Inset Box Shadow Color\n       * @see https://tailwindcss.com/docs/box-shadow#setting-the-inset-shadow-color\n       */\n      'inset-shadow-color': [{\n        'inset-shadow': scaleColor()\n      }],\n      /**\n       * Ring Width\n       * @see https://tailwindcss.com/docs/box-shadow#adding-a-ring\n       */\n      'ring-w': [{\n        ring: scaleBorderWidth()\n      }],\n      /**\n       * Ring Width Inset\n       * @see https://v3.tailwindcss.com/docs/ring-width#inset-rings\n       * @deprecated since Tailwind CSS v4.0.0\n       * @see https://github.com/tailwindlabs/tailwindcss/blob/v4.0.0/packages/tailwindcss/src/utilities.ts#L4158\n       */\n      'ring-w-inset': ['ring-inset'],\n      /**\n       * Ring Color\n       * @see https://tailwindcss.com/docs/box-shadow#setting-the-ring-color\n       */\n      'ring-color': [{\n        ring: scaleColor()\n      }],\n      /**\n       * Ring Offset Width\n       * @see https://v3.tailwindcss.com/docs/ring-offset-width\n       * @deprecated since Tailwind CSS v4.0.0\n       * @see https://github.com/tailwindlabs/tailwindcss/blob/v4.0.0/packages/tailwindcss/src/utilities.ts#L4158\n       */\n      'ring-offset-w': [{\n        'ring-offset': [isNumber, isArbitraryLength]\n      }],\n      /**\n       * Ring Offset Color\n       * @see https://v3.tailwindcss.com/docs/ring-offset-color\n       * @deprecated since Tailwind CSS v4.0.0\n       * @see https://github.com/tailwindlabs/tailwindcss/blob/v4.0.0/packages/tailwindcss/src/utilities.ts#L4158\n       */\n      'ring-offset-color': [{\n        'ring-offset': scaleColor()\n      }],\n      /**\n       * Inset Ring Width\n       * @see https://tailwindcss.com/docs/box-shadow#adding-an-inset-ring\n       */\n      'inset-ring-w': [{\n        'inset-ring': scaleBorderWidth()\n      }],\n      /**\n       * Inset Ring Color\n       * @see https://tailwindcss.com/docs/box-shadow#setting-the-inset-ring-color\n       */\n      'inset-ring-color': [{\n        'inset-ring': scaleColor()\n      }],\n      /**\n       * Text Shadow\n       * @see https://tailwindcss.com/docs/text-shadow\n       */\n      'text-shadow': [{\n        'text-shadow': ['none', themeTextShadow, isArbitraryVariableShadow, isArbitraryShadow]\n      }],\n      /**\n       * Text Shadow Color\n       * @see https://tailwindcss.com/docs/text-shadow#setting-the-shadow-color\n       */\n      'text-shadow-color': [{\n        'text-shadow': scaleColor()\n      }],\n      /**\n       * Opacity\n       * @see https://tailwindcss.com/docs/opacity\n       */\n      opacity: [{\n        opacity: [isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Mix Blend Mode\n       * @see https://tailwindcss.com/docs/mix-blend-mode\n       */\n      'mix-blend': [{\n        'mix-blend': [...scaleBlendMode(), 'plus-darker', 'plus-lighter']\n      }],\n      /**\n       * Background Blend Mode\n       * @see https://tailwindcss.com/docs/background-blend-mode\n       */\n      'bg-blend': [{\n        'bg-blend': scaleBlendMode()\n      }],\n      /**\n       * Mask Clip\n       * @see https://tailwindcss.com/docs/mask-clip\n       */\n      'mask-clip': [{\n        'mask-clip': ['border', 'padding', 'content', 'fill', 'stroke', 'view']\n      }, 'mask-no-clip'],\n      /**\n       * Mask Composite\n       * @see https://tailwindcss.com/docs/mask-composite\n       */\n      'mask-composite': [{\n        mask: ['add', 'subtract', 'intersect', 'exclude']\n      }],\n      /**\n       * Mask Image\n       * @see https://tailwindcss.com/docs/mask-image\n       */\n      'mask-image-linear-pos': [{\n        'mask-linear': [isNumber]\n      }],\n      'mask-image-linear-from-pos': [{\n        'mask-linear-from': scaleMaskImagePosition()\n      }],\n      'mask-image-linear-to-pos': [{\n        'mask-linear-to': scaleMaskImagePosition()\n      }],\n      'mask-image-linear-from-color': [{\n        'mask-linear-from': scaleColor()\n      }],\n      'mask-image-linear-to-color': [{\n        'mask-linear-to': scaleColor()\n      }],\n      'mask-image-t-from-pos': [{\n        'mask-t-from': scaleMaskImagePosition()\n      }],\n      'mask-image-t-to-pos': [{\n        'mask-t-to': scaleMaskImagePosition()\n      }],\n      'mask-image-t-from-color': [{\n        'mask-t-from': scaleColor()\n      }],\n      'mask-image-t-to-color': [{\n        'mask-t-to': scaleColor()\n      }],\n      'mask-image-r-from-pos': [{\n        'mask-r-from': scaleMaskImagePosition()\n      }],\n      'mask-image-r-to-pos': [{\n        'mask-r-to': scaleMaskImagePosition()\n      }],\n      'mask-image-r-from-color': [{\n        'mask-r-from': scaleColor()\n      }],\n      'mask-image-r-to-color': [{\n        'mask-r-to': scaleColor()\n      }],\n      'mask-image-b-from-pos': [{\n        'mask-b-from': scaleMaskImagePosition()\n      }],\n      'mask-image-b-to-pos': [{\n        'mask-b-to': scaleMaskImagePosition()\n      }],\n      'mask-image-b-from-color': [{\n        'mask-b-from': scaleColor()\n      }],\n      'mask-image-b-to-color': [{\n        'mask-b-to': scaleColor()\n      }],\n      'mask-image-l-from-pos': [{\n        'mask-l-from': scaleMaskImagePosition()\n      }],\n      'mask-image-l-to-pos': [{\n        'mask-l-to': scaleMaskImagePosition()\n      }],\n      'mask-image-l-from-color': [{\n        'mask-l-from': scaleColor()\n      }],\n      'mask-image-l-to-color': [{\n        'mask-l-to': scaleColor()\n      }],\n      'mask-image-x-from-pos': [{\n        'mask-x-from': scaleMaskImagePosition()\n      }],\n      'mask-image-x-to-pos': [{\n        'mask-x-to': scaleMaskImagePosition()\n      }],\n      'mask-image-x-from-color': [{\n        'mask-x-from': scaleColor()\n      }],\n      'mask-image-x-to-color': [{\n        'mask-x-to': scaleColor()\n      }],\n      'mask-image-y-from-pos': [{\n        'mask-y-from': scaleMaskImagePosition()\n      }],\n      'mask-image-y-to-pos': [{\n        'mask-y-to': scaleMaskImagePosition()\n      }],\n      'mask-image-y-from-color': [{\n        'mask-y-from': scaleColor()\n      }],\n      'mask-image-y-to-color': [{\n        'mask-y-to': scaleColor()\n      }],\n      'mask-image-radial': [{\n        'mask-radial': [isArbitraryVariable, isArbitraryValue]\n      }],\n      'mask-image-radial-from-pos': [{\n        'mask-radial-from': scaleMaskImagePosition()\n      }],\n      'mask-image-radial-to-pos': [{\n        'mask-radial-to': scaleMaskImagePosition()\n      }],\n      'mask-image-radial-from-color': [{\n        'mask-radial-from': scaleColor()\n      }],\n      'mask-image-radial-to-color': [{\n        'mask-radial-to': scaleColor()\n      }],\n      'mask-image-radial-shape': [{\n        'mask-radial': ['circle', 'ellipse']\n      }],\n      'mask-image-radial-size': [{\n        'mask-radial': [{\n          closest: ['side', 'corner'],\n          farthest: ['side', 'corner']\n        }]\n      }],\n      'mask-image-radial-pos': [{\n        'mask-radial-at': scalePosition()\n      }],\n      'mask-image-conic-pos': [{\n        'mask-conic': [isNumber]\n      }],\n      'mask-image-conic-from-pos': [{\n        'mask-conic-from': scaleMaskImagePosition()\n      }],\n      'mask-image-conic-to-pos': [{\n        'mask-conic-to': scaleMaskImagePosition()\n      }],\n      'mask-image-conic-from-color': [{\n        'mask-conic-from': scaleColor()\n      }],\n      'mask-image-conic-to-color': [{\n        'mask-conic-to': scaleColor()\n      }],\n      /**\n       * Mask Mode\n       * @see https://tailwindcss.com/docs/mask-mode\n       */\n      'mask-mode': [{\n        mask: ['alpha', 'luminance', 'match']\n      }],\n      /**\n       * Mask Origin\n       * @see https://tailwindcss.com/docs/mask-origin\n       */\n      'mask-origin': [{\n        'mask-origin': ['border', 'padding', 'content', 'fill', 'stroke', 'view']\n      }],\n      /**\n       * Mask Position\n       * @see https://tailwindcss.com/docs/mask-position\n       */\n      'mask-position': [{\n        mask: scaleBgPosition()\n      }],\n      /**\n       * Mask Repeat\n       * @see https://tailwindcss.com/docs/mask-repeat\n       */\n      'mask-repeat': [{\n        mask: scaleBgRepeat()\n      }],\n      /**\n       * Mask Size\n       * @see https://tailwindcss.com/docs/mask-size\n       */\n      'mask-size': [{\n        mask: scaleBgSize()\n      }],\n      /**\n       * Mask Type\n       * @see https://tailwindcss.com/docs/mask-type\n       */\n      'mask-type': [{\n        'mask-type': ['alpha', 'luminance']\n      }],\n      /**\n       * Mask Image\n       * @see https://tailwindcss.com/docs/mask-image\n       */\n      'mask-image': [{\n        mask: ['none', isArbitraryVariable, isArbitraryValue]\n      }],\n      // ---------------\n      // --- Filters ---\n      // ---------------\n      /**\n       * Filter\n       * @see https://tailwindcss.com/docs/filter\n       */\n      filter: [{\n        filter: [\n        // Deprecated since Tailwind CSS v3.0.0\n        '', 'none', isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Blur\n       * @see https://tailwindcss.com/docs/blur\n       */\n      blur: [{\n        blur: scaleBlur()\n      }],\n      /**\n       * Brightness\n       * @see https://tailwindcss.com/docs/brightness\n       */\n      brightness: [{\n        brightness: [isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Contrast\n       * @see https://tailwindcss.com/docs/contrast\n       */\n      contrast: [{\n        contrast: [isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Drop Shadow\n       * @see https://tailwindcss.com/docs/drop-shadow\n       */\n      'drop-shadow': [{\n        'drop-shadow': [\n        // Deprecated since Tailwind CSS v4.0.0\n        '', 'none', themeDropShadow, isArbitraryVariableShadow, isArbitraryShadow]\n      }],\n      /**\n       * Drop Shadow Color\n       * @see https://tailwindcss.com/docs/filter-drop-shadow#setting-the-shadow-color\n       */\n      'drop-shadow-color': [{\n        'drop-shadow': scaleColor()\n      }],\n      /**\n       * Grayscale\n       * @see https://tailwindcss.com/docs/grayscale\n       */\n      grayscale: [{\n        grayscale: ['', isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Hue Rotate\n       * @see https://tailwindcss.com/docs/hue-rotate\n       */\n      'hue-rotate': [{\n        'hue-rotate': [isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Invert\n       * @see https://tailwindcss.com/docs/invert\n       */\n      invert: [{\n        invert: ['', isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Saturate\n       * @see https://tailwindcss.com/docs/saturate\n       */\n      saturate: [{\n        saturate: [isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Sepia\n       * @see https://tailwindcss.com/docs/sepia\n       */\n      sepia: [{\n        sepia: ['', isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Backdrop Filter\n       * @see https://tailwindcss.com/docs/backdrop-filter\n       */\n      'backdrop-filter': [{\n        'backdrop-filter': [\n        // Deprecated since Tailwind CSS v3.0.0\n        '', 'none', isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Backdrop Blur\n       * @see https://tailwindcss.com/docs/backdrop-blur\n       */\n      'backdrop-blur': [{\n        'backdrop-blur': scaleBlur()\n      }],\n      /**\n       * Backdrop Brightness\n       * @see https://tailwindcss.com/docs/backdrop-brightness\n       */\n      'backdrop-brightness': [{\n        'backdrop-brightness': [isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Backdrop Contrast\n       * @see https://tailwindcss.com/docs/backdrop-contrast\n       */\n      'backdrop-contrast': [{\n        'backdrop-contrast': [isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Backdrop Grayscale\n       * @see https://tailwindcss.com/docs/backdrop-grayscale\n       */\n      'backdrop-grayscale': [{\n        'backdrop-grayscale': ['', isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Backdrop Hue Rotate\n       * @see https://tailwindcss.com/docs/backdrop-hue-rotate\n       */\n      'backdrop-hue-rotate': [{\n        'backdrop-hue-rotate': [isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Backdrop Invert\n       * @see https://tailwindcss.com/docs/backdrop-invert\n       */\n      'backdrop-invert': [{\n        'backdrop-invert': ['', isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Backdrop Opacity\n       * @see https://tailwindcss.com/docs/backdrop-opacity\n       */\n      'backdrop-opacity': [{\n        'backdrop-opacity': [isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Backdrop Saturate\n       * @see https://tailwindcss.com/docs/backdrop-saturate\n       */\n      'backdrop-saturate': [{\n        'backdrop-saturate': [isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Backdrop Sepia\n       * @see https://tailwindcss.com/docs/backdrop-sepia\n       */\n      'backdrop-sepia': [{\n        'backdrop-sepia': ['', isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      // --------------\n      // --- Tables ---\n      // --------------\n      /**\n       * Border Collapse\n       * @see https://tailwindcss.com/docs/border-collapse\n       */\n      'border-collapse': [{\n        border: ['collapse', 'separate']\n      }],\n      /**\n       * Border Spacing\n       * @see https://tailwindcss.com/docs/border-spacing\n       */\n      'border-spacing': [{\n        'border-spacing': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Border Spacing X\n       * @see https://tailwindcss.com/docs/border-spacing\n       */\n      'border-spacing-x': [{\n        'border-spacing-x': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Border Spacing Y\n       * @see https://tailwindcss.com/docs/border-spacing\n       */\n      'border-spacing-y': [{\n        'border-spacing-y': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Table Layout\n       * @see https://tailwindcss.com/docs/table-layout\n       */\n      'table-layout': [{\n        table: ['auto', 'fixed']\n      }],\n      /**\n       * Caption Side\n       * @see https://tailwindcss.com/docs/caption-side\n       */\n      caption: [{\n        caption: ['top', 'bottom']\n      }],\n      // ---------------------------------\n      // --- Transitions and Animation ---\n      // ---------------------------------\n      /**\n       * Transition Property\n       * @see https://tailwindcss.com/docs/transition-property\n       */\n      transition: [{\n        transition: ['', 'all', 'colors', 'opacity', 'shadow', 'transform', 'none', isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Transition Behavior\n       * @see https://tailwindcss.com/docs/transition-behavior\n       */\n      'transition-behavior': [{\n        transition: ['normal', 'discrete']\n      }],\n      /**\n       * Transition Duration\n       * @see https://tailwindcss.com/docs/transition-duration\n       */\n      duration: [{\n        duration: [isNumber, 'initial', isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Transition Timing Function\n       * @see https://tailwindcss.com/docs/transition-timing-function\n       */\n      ease: [{\n        ease: ['linear', 'initial', themeEase, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Transition Delay\n       * @see https://tailwindcss.com/docs/transition-delay\n       */\n      delay: [{\n        delay: [isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Animation\n       * @see https://tailwindcss.com/docs/animation\n       */\n      animate: [{\n        animate: ['none', themeAnimate, isArbitraryVariable, isArbitraryValue]\n      }],\n      // ------------------\n      // --- Transforms ---\n      // ------------------\n      /**\n       * Backface Visibility\n       * @see https://tailwindcss.com/docs/backface-visibility\n       */\n      backface: [{\n        backface: ['hidden', 'visible']\n      }],\n      /**\n       * Perspective\n       * @see https://tailwindcss.com/docs/perspective\n       */\n      perspective: [{\n        perspective: [themePerspective, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Perspective Origin\n       * @see https://tailwindcss.com/docs/perspective-origin\n       */\n      'perspective-origin': [{\n        'perspective-origin': scalePositionWithArbitrary()\n      }],\n      /**\n       * Rotate\n       * @see https://tailwindcss.com/docs/rotate\n       */\n      rotate: [{\n        rotate: scaleRotate()\n      }],\n      /**\n       * Rotate X\n       * @see https://tailwindcss.com/docs/rotate\n       */\n      'rotate-x': [{\n        'rotate-x': scaleRotate()\n      }],\n      /**\n       * Rotate Y\n       * @see https://tailwindcss.com/docs/rotate\n       */\n      'rotate-y': [{\n        'rotate-y': scaleRotate()\n      }],\n      /**\n       * Rotate Z\n       * @see https://tailwindcss.com/docs/rotate\n       */\n      'rotate-z': [{\n        'rotate-z': scaleRotate()\n      }],\n      /**\n       * Scale\n       * @see https://tailwindcss.com/docs/scale\n       */\n      scale: [{\n        scale: scaleScale()\n      }],\n      /**\n       * Scale X\n       * @see https://tailwindcss.com/docs/scale\n       */\n      'scale-x': [{\n        'scale-x': scaleScale()\n      }],\n      /**\n       * Scale Y\n       * @see https://tailwindcss.com/docs/scale\n       */\n      'scale-y': [{\n        'scale-y': scaleScale()\n      }],\n      /**\n       * Scale Z\n       * @see https://tailwindcss.com/docs/scale\n       */\n      'scale-z': [{\n        'scale-z': scaleScale()\n      }],\n      /**\n       * Scale 3D\n       * @see https://tailwindcss.com/docs/scale\n       */\n      'scale-3d': ['scale-3d'],\n      /**\n       * Skew\n       * @see https://tailwindcss.com/docs/skew\n       */\n      skew: [{\n        skew: scaleSkew()\n      }],\n      /**\n       * Skew X\n       * @see https://tailwindcss.com/docs/skew\n       */\n      'skew-x': [{\n        'skew-x': scaleSkew()\n      }],\n      /**\n       * Skew Y\n       * @see https://tailwindcss.com/docs/skew\n       */\n      'skew-y': [{\n        'skew-y': scaleSkew()\n      }],\n      /**\n       * Transform\n       * @see https://tailwindcss.com/docs/transform\n       */\n      transform: [{\n        transform: [isArbitraryVariable, isArbitraryValue, '', 'none', 'gpu', 'cpu']\n      }],\n      /**\n       * Transform Origin\n       * @see https://tailwindcss.com/docs/transform-origin\n       */\n      'transform-origin': [{\n        origin: scalePositionWithArbitrary()\n      }],\n      /**\n       * Transform Style\n       * @see https://tailwindcss.com/docs/transform-style\n       */\n      'transform-style': [{\n        transform: ['3d', 'flat']\n      }],\n      /**\n       * Translate\n       * @see https://tailwindcss.com/docs/translate\n       */\n      translate: [{\n        translate: scaleTranslate()\n      }],\n      /**\n       * Translate X\n       * @see https://tailwindcss.com/docs/translate\n       */\n      'translate-x': [{\n        'translate-x': scaleTranslate()\n      }],\n      /**\n       * Translate Y\n       * @see https://tailwindcss.com/docs/translate\n       */\n      'translate-y': [{\n        'translate-y': scaleTranslate()\n      }],\n      /**\n       * Translate Z\n       * @see https://tailwindcss.com/docs/translate\n       */\n      'translate-z': [{\n        'translate-z': scaleTranslate()\n      }],\n      /**\n       * Translate None\n       * @see https://tailwindcss.com/docs/translate\n       */\n      'translate-none': ['translate-none'],\n      // ---------------------\n      // --- Interactivity ---\n      // ---------------------\n      /**\n       * Accent Color\n       * @see https://tailwindcss.com/docs/accent-color\n       */\n      accent: [{\n        accent: scaleColor()\n      }],\n      /**\n       * Appearance\n       * @see https://tailwindcss.com/docs/appearance\n       */\n      appearance: [{\n        appearance: ['none', 'auto']\n      }],\n      /**\n       * Caret Color\n       * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities\n       */\n      'caret-color': [{\n        caret: scaleColor()\n      }],\n      /**\n       * Color Scheme\n       * @see https://tailwindcss.com/docs/color-scheme\n       */\n      'color-scheme': [{\n        scheme: ['normal', 'dark', 'light', 'light-dark', 'only-dark', 'only-light']\n      }],\n      /**\n       * Cursor\n       * @see https://tailwindcss.com/docs/cursor\n       */\n      cursor: [{\n        cursor: ['auto', 'default', 'pointer', 'wait', 'text', 'move', 'help', 'not-allowed', 'none', 'context-menu', 'progress', 'cell', 'crosshair', 'vertical-text', 'alias', 'copy', 'no-drop', 'grab', 'grabbing', 'all-scroll', 'col-resize', 'row-resize', 'n-resize', 'e-resize', 's-resize', 'w-resize', 'ne-resize', 'nw-resize', 'se-resize', 'sw-resize', 'ew-resize', 'ns-resize', 'nesw-resize', 'nwse-resize', 'zoom-in', 'zoom-out', isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\n       * Field Sizing\n       * @see https://tailwindcss.com/docs/field-sizing\n       */\n      'field-sizing': [{\n        'field-sizing': ['fixed', 'content']\n      }],\n      /**\n       * Pointer Events\n       * @see https://tailwindcss.com/docs/pointer-events\n       */\n      'pointer-events': [{\n        'pointer-events': ['auto', 'none']\n      }],\n      /**\n       * Resize\n       * @see https://tailwindcss.com/docs/resize\n       */\n      resize: [{\n        resize: ['none', '', 'y', 'x']\n      }],\n      /**\n       * Scroll Behavior\n       * @see https://tailwindcss.com/docs/scroll-behavior\n       */\n      'scroll-behavior': [{\n        scroll: ['auto', 'smooth']\n      }],\n      /**\n       * Scroll Margin\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-m': [{\n        'scroll-m': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Margin X\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-mx': [{\n        'scroll-mx': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Margin Y\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-my': [{\n        'scroll-my': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Margin Start\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-ms': [{\n        'scroll-ms': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Margin End\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-me': [{\n        'scroll-me': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Margin Top\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-mt': [{\n        'scroll-mt': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Margin Right\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-mr': [{\n        'scroll-mr': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Margin Bottom\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-mb': [{\n        'scroll-mb': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Margin Left\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-ml': [{\n        'scroll-ml': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Padding\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-p': [{\n        'scroll-p': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Padding X\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-px': [{\n        'scroll-px': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Padding Y\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-py': [{\n        'scroll-py': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Padding Start\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-ps': [{\n        'scroll-ps': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Padding End\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pe': [{\n        'scroll-pe': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Padding Top\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pt': [{\n        'scroll-pt': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Padding Right\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pr': [{\n        'scroll-pr': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Padding Bottom\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pb': [{\n        'scroll-pb': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Padding Left\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pl': [{\n        'scroll-pl': scaleUnambiguousSpacing()\n      }],\n      /**\n       * Scroll Snap Align\n       * @see https://tailwindcss.com/docs/scroll-snap-align\n       */\n      'snap-align': [{\n        snap: ['start', 'end', 'center', 'align-none']\n      }],\n      /**\n       * Scroll Snap Stop\n       * @see https://tailwindcss.com/docs/scroll-snap-stop\n       */\n      'snap-stop': [{\n        snap: ['normal', 'always']\n      }],\n      /**\n       * Scroll Snap Type\n       * @see https://tailwindcss.com/docs/scroll-snap-type\n       */\n      'snap-type': [{\n        snap: ['none', 'x', 'y', 'both']\n      }],\n      /**\n       * Scroll Snap Type Strictness\n       * @see https://tailwindcss.com/docs/scroll-snap-type\n       */\n      'snap-strictness': [{\n        snap: ['mandatory', 'proximity']\n      }],\n      /**\n       * Touch Action\n       * @see https://tailwindcss.com/docs/touch-action\n       */\n      touch: [{\n        touch: ['auto', 'none', 'manipulation']\n      }],\n      /**\n       * Touch Action X\n       * @see https://tailwindcss.com/docs/touch-action\n       */\n      'touch-x': [{\n        'touch-pan': ['x', 'left', 'right']\n      }],\n      /**\n       * Touch Action Y\n       * @see https://tailwindcss.com/docs/touch-action\n       */\n      'touch-y': [{\n        'touch-pan': ['y', 'up', 'down']\n      }],\n      /**\n       * Touch Action Pinch Zoom\n       * @see https://tailwindcss.com/docs/touch-action\n       */\n      'touch-pz': ['touch-pinch-zoom'],\n      /**\n       * User Select\n       * @see https://tailwindcss.com/docs/user-select\n       */\n      select: [{\n        select: ['none', 'text', 'all', 'auto']\n      }],\n      /**\n       * Will Change\n       * @see https://tailwindcss.com/docs/will-change\n       */\n      'will-change': [{\n        'will-change': ['auto', 'scroll', 'contents', 'transform', isArbitraryVariable, isArbitraryValue]\n      }],\n      // -----------\n      // --- SVG ---\n      // -----------\n      /**\n       * Fill\n       * @see https://tailwindcss.com/docs/fill\n       */\n      fill: [{\n        fill: ['none', ...scaleColor()]\n      }],\n      /**\n       * Stroke Width\n       * @see https://tailwindcss.com/docs/stroke-width\n       */\n      'stroke-w': [{\n        stroke: [isNumber, isArbitraryVariableLength, isArbitraryLength, isArbitraryNumber]\n      }],\n      /**\n       * Stroke\n       * @see https://tailwindcss.com/docs/stroke\n       */\n      stroke: [{\n        stroke: ['none', ...scaleColor()]\n      }],\n      // ---------------------\n      // --- Accessibility ---\n      // ---------------------\n      /**\n       * Forced Color Adjust\n       * @see https://tailwindcss.com/docs/forced-color-adjust\n       */\n      'forced-color-adjust': [{\n        'forced-color-adjust': ['auto', 'none']\n      }]\n    },\n    conflictingClassGroups: {\n      overflow: ['overflow-x', 'overflow-y'],\n      overscroll: ['overscroll-x', 'overscroll-y'],\n      inset: ['inset-x', 'inset-y', 'start', 'end', 'top', 'right', 'bottom', 'left'],\n      'inset-x': ['right', 'left'],\n      'inset-y': ['top', 'bottom'],\n      flex: ['basis', 'grow', 'shrink'],\n      gap: ['gap-x', 'gap-y'],\n      p: ['px', 'py', 'ps', 'pe', 'pt', 'pr', 'pb', 'pl'],\n      px: ['pr', 'pl'],\n      py: ['pt', 'pb'],\n      m: ['mx', 'my', 'ms', 'me', 'mt', 'mr', 'mb', 'ml'],\n      mx: ['mr', 'ml'],\n      my: ['mt', 'mb'],\n      size: ['w', 'h'],\n      'font-size': ['leading'],\n      'fvn-normal': ['fvn-ordinal', 'fvn-slashed-zero', 'fvn-figure', 'fvn-spacing', 'fvn-fraction'],\n      'fvn-ordinal': ['fvn-normal'],\n      'fvn-slashed-zero': ['fvn-normal'],\n      'fvn-figure': ['fvn-normal'],\n      'fvn-spacing': ['fvn-normal'],\n      'fvn-fraction': ['fvn-normal'],\n      'line-clamp': ['display', 'overflow'],\n      rounded: ['rounded-s', 'rounded-e', 'rounded-t', 'rounded-r', 'rounded-b', 'rounded-l', 'rounded-ss', 'rounded-se', 'rounded-ee', 'rounded-es', 'rounded-tl', 'rounded-tr', 'rounded-br', 'rounded-bl'],\n      'rounded-s': ['rounded-ss', 'rounded-es'],\n      'rounded-e': ['rounded-se', 'rounded-ee'],\n      'rounded-t': ['rounded-tl', 'rounded-tr'],\n      'rounded-r': ['rounded-tr', 'rounded-br'],\n      'rounded-b': ['rounded-br', 'rounded-bl'],\n      'rounded-l': ['rounded-tl', 'rounded-bl'],\n      'border-spacing': ['border-spacing-x', 'border-spacing-y'],\n      'border-w': ['border-w-x', 'border-w-y', 'border-w-s', 'border-w-e', 'border-w-t', 'border-w-r', 'border-w-b', 'border-w-l'],\n      'border-w-x': ['border-w-r', 'border-w-l'],\n      'border-w-y': ['border-w-t', 'border-w-b'],\n      'border-color': ['border-color-x', 'border-color-y', 'border-color-s', 'border-color-e', 'border-color-t', 'border-color-r', 'border-color-b', 'border-color-l'],\n      'border-color-x': ['border-color-r', 'border-color-l'],\n      'border-color-y': ['border-color-t', 'border-color-b'],\n      translate: ['translate-x', 'translate-y', 'translate-none'],\n      'translate-none': ['translate', 'translate-x', 'translate-y', 'translate-z'],\n      'scroll-m': ['scroll-mx', 'scroll-my', 'scroll-ms', 'scroll-me', 'scroll-mt', 'scroll-mr', 'scroll-mb', 'scroll-ml'],\n      'scroll-mx': ['scroll-mr', 'scroll-ml'],\n      'scroll-my': ['scroll-mt', 'scroll-mb'],\n      'scroll-p': ['scroll-px', 'scroll-py', 'scroll-ps', 'scroll-pe', 'scroll-pt', 'scroll-pr', 'scroll-pb', 'scroll-pl'],\n      'scroll-px': ['scroll-pr', 'scroll-pl'],\n      'scroll-py': ['scroll-pt', 'scroll-pb'],\n      touch: ['touch-x', 'touch-y', 'touch-pz'],\n      'touch-x': ['touch'],\n      'touch-y': ['touch'],\n      'touch-pz': ['touch']\n    },\n    conflictingClassGroupModifiers: {\n      'font-size': ['leading']\n    },\n    orderSensitiveModifiers: ['*', '**', 'after', 'backdrop', 'before', 'details-content', 'file', 'first-letter', 'first-line', 'marker', 'placeholder', 'selection']\n  };\n};\n\n/**\n * @param baseConfig Config where other config will be merged into. This object will be mutated.\n * @param configExtension Partial config to merge into the `baseConfig`.\n */\nconst mergeConfigs = (baseConfig, {\n  cacheSize,\n  prefix,\n  experimentalParseClassName,\n  extend = {},\n  override = {}\n}) => {\n  overrideProperty(baseConfig, 'cacheSize', cacheSize);\n  overrideProperty(baseConfig, 'prefix', prefix);\n  overrideProperty(baseConfig, 'experimentalParseClassName', experimentalParseClassName);\n  overrideConfigProperties(baseConfig.theme, override.theme);\n  overrideConfigProperties(baseConfig.classGroups, override.classGroups);\n  overrideConfigProperties(baseConfig.conflictingClassGroups, override.conflictingClassGroups);\n  overrideConfigProperties(baseConfig.conflictingClassGroupModifiers, override.conflictingClassGroupModifiers);\n  overrideProperty(baseConfig, 'orderSensitiveModifiers', override.orderSensitiveModifiers);\n  mergeConfigProperties(baseConfig.theme, extend.theme);\n  mergeConfigProperties(baseConfig.classGroups, extend.classGroups);\n  mergeConfigProperties(baseConfig.conflictingClassGroups, extend.conflictingClassGroups);\n  mergeConfigProperties(baseConfig.conflictingClassGroupModifiers, extend.conflictingClassGroupModifiers);\n  mergeArrayProperties(baseConfig, extend, 'orderSensitiveModifiers');\n  return baseConfig;\n};\nconst overrideProperty = (baseObject, overrideKey, overrideValue) => {\n  if (overrideValue !== undefined) {\n    baseObject[overrideKey] = overrideValue;\n  }\n};\nconst overrideConfigProperties = (baseObject, overrideObject) => {\n  if (overrideObject) {\n    for (const key in overrideObject) {\n      overrideProperty(baseObject, key, overrideObject[key]);\n    }\n  }\n};\nconst mergeConfigProperties = (baseObject, mergeObject) => {\n  if (mergeObject) {\n    for (const key in mergeObject) {\n      mergeArrayProperties(baseObject, mergeObject, key);\n    }\n  }\n};\nconst mergeArrayProperties = (baseObject, mergeObject, key) => {\n  const mergeValue = mergeObject[key];\n  if (mergeValue !== undefined) {\n    baseObject[key] = baseObject[key] ? baseObject[key].concat(mergeValue) : mergeValue;\n  }\n};\nconst extendTailwindMerge = (configExtension, ...createConfig) => typeof configExtension === 'function' ? createTailwindMerge(getDefaultConfig, configExtension, ...createConfig) : createTailwindMerge(() => mergeConfigs(getDefaultConfig(), configExtension), ...createConfig);\nconst twMerge = /*#__PURE__*/createTailwindMerge(getDefaultConfig);\nexport { createTailwindMerge, extendTailwindMerge, fromTheme, getDefaultConfig, mergeConfigs, twJoin, twMerge, validators };\n//# sourceMappingURL=bundle-mjs.mjs.map\n","// ============================================================================\n// 클래스 네임 유틸리티 함수\n// ============================================================================\n\nimport { type ClassValue, clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n","// ============================================================================\n// Button 컴포넌트 - SaaS 디자인 시스템 기반\n// ============================================================================\n\nimport React from \"react\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport { cn } from \"@/utils/cn\";\n\nconst buttonVariants = cva(\n  // 기본 스타일\n  \"inline-flex items-center justify-center rounded-lg text-sm font-medium transition-all duration-200 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        primary:\n          \"bg-gradient-to-r from-primary-600 to-primary-700 text-white shadow-lg hover:from-primary-700 hover:to-primary-800 hover:shadow-xl transform hover:-translate-y-0.5 focus-visible:ring-primary-500\",\n        secondary:\n          \"bg-white text-gray-700 border border-gray-300 hover:bg-gray-50 hover:border-gray-400 focus-visible:ring-gray-500\",\n        danger:\n          \"bg-gradient-to-r from-red-600 to-red-700 text-white hover:from-red-700 hover:to-red-800 focus-visible:ring-red-500\",\n        destructive:\n          \"bg-gradient-to-r from-red-600 to-red-700 text-white hover:from-red-700 hover:to-red-800 focus-visible:ring-red-500\",\n        ghost:\n          \"text-gray-600 hover:text-gray-800 hover:bg-gray-100 focus-visible:ring-gray-500\",\n        outline:\n          \"border border-gray-300 bg-transparent text-gray-700 hover:bg-gray-50 hover:border-gray-400 focus-visible:ring-gray-500\",\n        tenant:\n          \"bg-gradient-to-r from-tenant-primary to-tenant-primary text-white shadow-lg hover:opacity-90 transform hover:-translate-y-0.5 focus-visible:ring-tenant-primary\",\n      },\n      size: {\n        sm: \"h-8 px-3 text-xs\",\n        md: \"h-10 px-4 py-2\",\n        lg: \"h-12 px-6 py-3 text-base\",\n        icon: \"h-10 w-10\",\n      },\n      fullWidth: {\n        true: \"w-full\",\n      },\n    },\n    defaultVariants: {\n      variant: \"primary\",\n      size: \"md\",\n    },\n  },\n);\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  loading?: boolean;\n  leftIcon?: React.ReactNode;\n  rightIcon?: React.ReactNode;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  (\n    {\n      className,\n      variant,\n      size,\n      fullWidth,\n      loading,\n      leftIcon,\n      rightIcon,\n      children,\n      disabled,\n      ...props\n    },\n    ref,\n  ) => {\n    return (\n      <button\n        className={cn(buttonVariants({ variant, size, fullWidth, className }))}\n        ref={ref}\n        disabled={disabled || loading}\n        {...props}\n      >\n        {loading ? (\n          <>\n            <svg\n              className=\"animate-spin -ml-1 mr-2 h-4 w-4\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n            >\n              <circle\n                className=\"opacity-25\"\n                cx=\"12\"\n                cy=\"12\"\n                r=\"10\"\n                stroke=\"currentColor\"\n                strokeWidth=\"4\"\n              />\n              <path\n                className=\"opacity-75\"\n                fill=\"currentColor\"\n                d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n              />\n            </svg>\n            로딩 중...\n          </>\n        ) : (\n          <>\n            {leftIcon && <span className=\"mr-2\">{leftIcon}</span>}\n            {children}\n            {rightIcon && <span className=\"ml-2\">{rightIcon}</span>}\n          </>\n        )}\n      </button>\n    );\n  },\n);\n\nButton.displayName = \"Button\";\n\nexport { Button, buttonVariants };\n","// ============================================================================\n// Input 컴포넌트 - 폼 입력 필드\n// ============================================================================\n\nimport React from \"react\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport { cn } from \"@/utils/cn\";\n\nconst inputVariants = cva(\n  \"flex w-full rounded-lg border bg-white px-3 py-2 text-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-gray-500 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-gray-300 focus-visible:border-primary-500 focus-visible:ring-primary-500\",\n        error:\n          \"border-red-300 focus-visible:border-red-500 focus-visible:ring-red-500\",\n        success:\n          \"border-green-300 focus-visible:border-green-500 focus-visible:ring-green-500\",\n      },\n      size: {\n        sm: \"h-8 px-2 text-xs\",\n        md: \"h-10 px-3\",\n        lg: \"h-12 px-4 text-base\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"md\",\n    },\n  },\n);\n\nexport interface InputProps\n  extends Omit<React.InputHTMLAttributes<HTMLInputElement>, \"size\">,\n    VariantProps<typeof inputVariants> {\n  label?: string;\n  error?: string;\n  helperText?: string;\n  leftIcon?: React.ReactNode;\n  rightIcon?: React.ReactNode;\n}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  (\n    {\n      className,\n      variant,\n      size,\n      label,\n      error,\n      helperText,\n      leftIcon,\n      rightIcon,\n      id,\n      ...props\n    },\n    ref,\n  ) => {\n    const inputId = id || `input-${Math.random().toString(36).substr(2, 9)}`;\n    const hasError = !!error;\n    const finalVariant = hasError ? \"error\" : variant;\n\n    return (\n      <div className=\"w-full\">\n        {label && (\n          <label\n            htmlFor={inputId}\n            className=\"block text-sm font-medium text-gray-700 mb-2\"\n          >\n            {label}\n            {props.required && <span className=\"text-red-500 ml-1\">*</span>}\n          </label>\n        )}\n\n        <div className=\"relative\">\n          {leftIcon && (\n            <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n              <span className=\"text-gray-400\">{leftIcon}</span>\n            </div>\n          )}\n\n          <input\n            id={inputId}\n            className={cn(\n              inputVariants({ variant: finalVariant, size }),\n              leftIcon && \"pl-10\",\n              rightIcon && \"pr-10\",\n              className,\n            )}\n            ref={ref}\n            {...props}\n          />\n\n          {rightIcon && (\n            <div className=\"absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none\">\n              <span className=\"text-gray-400\">{rightIcon}</span>\n            </div>\n          )}\n        </div>\n\n        {error && <p className=\"mt-1 text-sm text-red-600\">{error}</p>}\n\n        {helperText && !error && (\n          <p className=\"mt-1 text-sm text-gray-500\">{helperText}</p>\n        )}\n      </div>\n    );\n  },\n);\n\nInput.displayName = \"Input\";\n\nexport { Input, inputVariants };\n","// ============================================================================\n// Select 컴포넌트 - 드롭다운 선택\n// ============================================================================\n\nimport React from \"react\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport { ChevronDown } from \"lucide-react\";\nimport { cn } from \"@/utils/cn\";\n\nconst selectVariants = cva(\n  \"flex w-full rounded-lg border bg-white px-3 py-2 text-sm transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 appearance-none cursor-pointer\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-gray-300 focus-visible:border-primary-500 focus-visible:ring-primary-500\",\n        error:\n          \"border-red-300 focus-visible:border-red-500 focus-visible:ring-red-500\",\n        success:\n          \"border-green-300 focus-visible:border-green-500 focus-visible:ring-green-500\",\n      },\n      size: {\n        sm: \"h-8 px-2 text-xs\",\n        md: \"h-10 px-3\",\n        lg: \"h-12 px-4 text-base\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"md\",\n    },\n  },\n);\n\nexport interface SelectOption {\n  value: string | number;\n  label: string;\n  disabled?: boolean;\n}\n\nexport interface SelectProps\n  extends Omit<React.SelectHTMLAttributes<HTMLSelectElement>, \"size\">,\n    VariantProps<typeof selectVariants> {\n  label?: string;\n  error?: string;\n  helperText?: string;\n  options: SelectOption[];\n  placeholder?: string;\n}\n\nconst Select = React.forwardRef<HTMLSelectElement, SelectProps>(\n  (\n    {\n      className,\n      variant,\n      size,\n      label,\n      error,\n      helperText,\n      options,\n      placeholder,\n      id,\n      ...props\n    },\n    ref,\n  ) => {\n    const selectId = id || `select-${Math.random().toString(36).substr(2, 9)}`;\n    const hasError = !!error;\n    const finalVariant = hasError ? \"error\" : variant;\n\n    return (\n      <div className=\"w-full\">\n        {label && (\n          <label\n            htmlFor={selectId}\n            className=\"block text-sm font-medium text-gray-700 mb-2\"\n          >\n            {label}\n            {props.required && <span className=\"text-red-500 ml-1\">*</span>}\n          </label>\n        )}\n\n        <div className=\"relative\">\n          <select\n            id={selectId}\n            className={cn(\n              selectVariants({ variant: finalVariant, size }),\n              \"pr-10\",\n              className,\n            )}\n            ref={ref}\n            {...props}\n          >\n            {placeholder && (\n              <option value=\"\" disabled>\n                {placeholder}\n              </option>\n            )}\n            {options.map((option) => (\n              <option\n                key={option.value}\n                value={option.value}\n                disabled={option.disabled}\n              >\n                {option.label}\n              </option>\n            ))}\n          </select>\n\n          <div className=\"absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none\">\n            <ChevronDown className=\"h-4 w-4 text-gray-400\" />\n          </div>\n        </div>\n\n        {error && <p className=\"mt-1 text-sm text-red-600\">{error}</p>}\n\n        {helperText && !error && (\n          <p className=\"mt-1 text-sm text-gray-500\">{helperText}</p>\n        )}\n      </div>\n    );\n  },\n);\n\nSelect.displayName = \"Select\";\n\nexport { Select, selectVariants };\n","// ============================================================================\n// Modal 컴포넌트 - 다이얼로그 모달\n// ============================================================================\n\nimport React, { useEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { X } from \"lucide-react\";\nimport { cn } from \"@/utils/cn\";\n\ninterface ModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  title?: string;\n  children: React.ReactNode;\n  size?: \"sm\" | \"md\" | \"lg\" | \"xl\" | \"full\";\n  closable?: boolean;\n  className?: string;\n}\n\nconst Modal: React.FC<ModalProps> = ({\n  isOpen,\n  onClose,\n  title,\n  children,\n  size = \"md\",\n  closable = true,\n  className,\n}) => {\n  // ESC 키로 모달 닫기\n  useEffect(() => {\n    const handleEscape = (event: KeyboardEvent) => {\n      if (event.key === \"Escape\" && closable) {\n        onClose();\n      }\n    };\n\n    if (isOpen) {\n      document.addEventListener(\"keydown\", handleEscape);\n      document.body.style.overflow = \"hidden\";\n    }\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleEscape);\n      document.body.style.overflow = \"unset\";\n    };\n  }, [isOpen, onClose, closable]);\n\n  if (!isOpen) return null;\n\n  const sizeClasses = {\n    sm: \"max-w-md\",\n    md: \"max-w-lg\",\n    lg: \"max-w-2xl\",\n    xl: \"max-w-4xl\",\n    full: \"max-w-full mx-4\",\n  };\n\n  const modal = (\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center p-4\">\n      {/* 배경 오버레이 */}\n      <div\n        className=\"fixed inset-0 bg-black bg-opacity-50 transition-opacity animate-fade-in\"\n        onClick={closable ? onClose : undefined}\n      />\n\n      {/* 모달 컨테이너 */}\n      <div\n        className={cn(\n          \"relative bg-white rounded-lg shadow-xl w-full max-h-[90vh] overflow-hidden animate-scale-in\",\n          sizeClasses[size],\n          className,\n        )}\n      >\n        {/* 헤더 */}\n        {(title || closable) && (\n          <div className=\"flex items-center justify-between p-6 border-b border-gray-200\">\n            {title && (\n              <h2 className=\"text-lg font-semibold text-gray-900\">{title}</h2>\n            )}\n            {closable && (\n              <button\n                onClick={onClose}\n                className=\"p-2 text-gray-400 hover:text-gray-600 hover:bg-gray-100 rounded-lg transition-colors\"\n              >\n                <X size={20} />\n              </button>\n            )}\n          </div>\n        )}\n\n        {/* 컨텐츠 */}\n        <div className=\"overflow-y-auto max-h-[calc(90vh-80px)]\">\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n\n  return createPortal(modal, document.body);\n};\n\n// 모달 헤더 컴포넌트\nexport const ModalHeader: React.FC<{\n  children: React.ReactNode;\n  className?: string;\n}> = ({ children, className }) => (\n  <div className={cn(\"p-6 border-b border-gray-200\", className)}>\n    {children}\n  </div>\n);\n\n// 모달 바디 컴포넌트\nexport const ModalBody: React.FC<{\n  children: React.ReactNode;\n  className?: string;\n}> = ({ children, className }) => (\n  <div className={cn(\"p-6\", className)}>{children}</div>\n);\n\n// 모달 푸터 컴포넌트\nexport const ModalFooter: React.FC<{\n  children: React.ReactNode;\n  className?: string;\n}> = ({ children, className }) => (\n  <div\n    className={cn(\n      \"flex justify-end space-x-3 p-6 border-t border-gray-200 bg-gray-50\",\n      className,\n    )}\n  >\n    {children}\n  </div>\n);\n\nexport { Modal };\n","// ============================================================================\n// Card 컴포넌트 - 카드 레이아웃\n// ============================================================================\n\nimport React from \"react\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport { cn } from \"@/utils/cn\";\n\nconst cardVariants = cva(\n  \"card rounded-lg border bg-white transition-all duration-200\",\n  {\n    variants: {\n      variant: {\n        default: \"border-gray-200 shadow-sm hover:shadow-md\",\n        elevated: \"border-gray-200 shadow-lg hover:shadow-xl\",\n        outline: \"border-gray-300\",\n        ghost: \"border-transparent shadow-none\",\n      },\n      padding: {\n        none: \"\",\n        sm: \"p-4\",\n        md: \"p-6\",\n        lg: \"p-8\",\n      },\n      clickable: {\n        true: \"cursor-pointer hover:border-gray-300 transform hover:-translate-y-0.5\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      padding: \"md\",\n    },\n  },\n);\n\nexport interface CardProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof cardVariants> {\n  children: React.ReactNode;\n}\n\nconst Card = React.forwardRef<HTMLDivElement, CardProps>(\n  ({ className, variant, padding, clickable, children, ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={cn(cardVariants({ variant, padding, clickable }), className)}\n        {...props}\n      >\n        {children}\n      </div>\n    );\n  },\n);\n\nCard.displayName = \"Card\";\n\n// 카드 헤더 컴포넌트\nexport const CardHeader: React.FC<{\n  children: React.ReactNode;\n  className?: string;\n}> = ({ children, className }) => (\n  <div className={cn(\"flex flex-col space-y-1.5 p-6 pb-4\", className)}>\n    {children}\n  </div>\n);\n\n// 카드 타이틀 컴포넌트\nexport const CardTitle: React.FC<{\n  children: React.ReactNode;\n  className?: string;\n}> = ({ children, className }) => (\n  <h3\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className,\n    )}\n  >\n    {children}\n  </h3>\n);\n\n// 카드 설명 컴포넌트\nexport const CardDescription: React.FC<{\n  children: React.ReactNode;\n  className?: string;\n}> = ({ children, className }) => (\n  <p className={cn(\"text-sm text-gray-600\", className)}>{children}</p>\n);\n\n// 카드 컨텐츠 컴포넌트\nexport const CardContent: React.FC<{\n  children: React.ReactNode;\n  className?: string;\n}> = ({ children, className }) => (\n  <div className={cn(\"p-6 pt-0\", className)}>{children}</div>\n);\n\n// 카드 푸터 컴포넌트\nexport const CardFooter: React.FC<{\n  children: React.ReactNode;\n  className?: string;\n}> = ({ children, className }) => (\n  <div className={cn(\"flex items-center p-6 pt-0\", className)}>{children}</div>\n);\n\nexport { Card, cardVariants };\n","// ============================================================================\n// Badge 컴포넌트 - 상태 표시 뱃지\n// ============================================================================\n\nimport React from \"react\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport { cn } from \"@/utils/cn\";\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full px-2.5 py-0.5 text-xs font-medium transition-colors\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-gray-100 text-gray-800\",\n        primary: \"bg-primary-100 text-primary-800\",\n        secondary: \"bg-gray-100 text-gray-600\",\n        success: \"bg-green-100 text-green-800\",\n        warning: \"bg-yellow-100 text-yellow-800\",\n        danger: \"bg-red-100 text-red-800\",\n        info: \"bg-blue-100 text-blue-800\",\n        // 매물 상태별 색상 (MVP 호환)\n        available: \"bg-green-100 text-green-800\", // 판매중\n        reserved: \"bg-yellow-100 text-yellow-800\", // 예약중\n        sold: \"bg-gray-100 text-gray-600\", // 거래완료\n        // 거래유형별 색상 (MVP 호환)\n        sale: \"bg-red-100 text-red-700\", // 매매\n        jeonse: \"bg-green-100 text-green-700\", // 전세\n        monthly: \"bg-blue-100 text-blue-700\", // 월세\n        // 테넌트 색상\n        tenant: \"bg-tenant-primary bg-opacity-10 text-tenant-primary\",\n      },\n      size: {\n        sm: \"px-2 py-0.5 text-xs\",\n        md: \"px-2.5 py-0.5 text-xs\",\n        lg: \"px-3 py-1 text-sm\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"md\",\n    },\n  },\n);\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {\n  children: React.ReactNode;\n}\n\nconst Badge = React.forwardRef<HTMLDivElement, BadgeProps>(\n  ({ className, variant, size, children, ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={cn(badgeVariants({ variant, size }), className)}\n        {...props}\n      >\n        {children}\n      </div>\n    );\n  },\n);\n\nBadge.displayName = \"Badge\";\n\n// 매물 상태 뱃지 (MVP 호환)\nexport const PropertyStatusBadge: React.FC<{\n  status: \"거래중\" | \"거래완료\";\n  className?: string;\n}> = ({ status, className }) => {\n  const variantMap = {\n    거래중: \"available\",\n    거래완료: \"sold\",\n  } as const;\n\n  return (\n    <Badge variant={variantMap[status]} className={className}>\n      {status}\n    </Badge>\n  );\n};\n\n// 거래유형 뱃지 (MVP 호환)\nexport const TransactionTypeBadge: React.FC<{\n  type: \"매매\" | \"전세\" | \"월세\" | \"단기임대\";\n  className?: string;\n}> = ({ type, className }) => {\n  const variantMap = {\n    매매: \"sale\",\n    전세: \"jeonse\",\n    월세: \"monthly\",\n    단기임대: \"info\",\n  } as const;\n\n  return (\n    <Badge variant={variantMap[type]} className={className}>\n      {type}\n    </Badge>\n  );\n};\n\nexport { Badge, badgeVariants };\n","// ============================================================================\n// Loading 컴포넌트 - 로딩 상태 표시\n// ============================================================================\n\nimport React from \"react\";\nimport { cn } from \"@/utils/cn\";\n\ninterface LoadingProps {\n  size?: \"sm\" | \"md\" | \"lg\";\n  text?: string;\n  className?: string;\n  fullScreen?: boolean;\n}\n\nconst Loading: React.FC<LoadingProps> = ({\n  size = \"md\",\n  text,\n  className,\n  fullScreen = false,\n}) => {\n  const sizeClasses = {\n    sm: \"h-4 w-4\",\n    md: \"h-8 w-8\",\n    lg: \"h-12 w-12\",\n  };\n\n  const spinner = (\n    <div className=\"flex flex-col items-center justify-center space-y-3\">\n      <svg\n        className={cn(\n          \"animate-spin text-primary-600\",\n          sizeClasses[size],\n          className,\n        )}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n      >\n        <circle\n          className=\"opacity-25\"\n          cx=\"12\"\n          cy=\"12\"\n          r=\"10\"\n          stroke=\"currentColor\"\n          strokeWidth=\"4\"\n        />\n        <path\n          className=\"opacity-75\"\n          fill=\"currentColor\"\n          d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n        />\n      </svg>\n      {text && <p className=\"text-sm text-gray-600 animate-pulse\">{text}</p>}\n    </div>\n  );\n\n  if (fullScreen) {\n    return (\n      <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-white bg-opacity-80\">\n        {spinner}\n      </div>\n    );\n  }\n\n  return spinner;\n};\n\n// 스켈레톤 로딩 컴포넌트\nexport const Skeleton: React.FC<{\n  className?: string;\n  lines?: number;\n}> = ({ className, lines = 1 }) => {\n  return (\n    <div className=\"animate-pulse space-y-2\">\n      {Array.from({ length: lines }).map((_, index) => (\n        <div\n          key={index}\n          className={cn(\n            \"bg-gray-200 rounded h-4\",\n            index === lines - 1 && lines > 1 && \"w-3/4\", // 마지막 줄은 짧게\n            className,\n          )}\n        />\n      ))}\n    </div>\n  );\n};\n\n// 카드 스켈레톤\nexport const CardSkeleton: React.FC<{\n  className?: string;\n}> = ({ className }) => {\n  return (\n    <div\n      className={cn(\n        \"bg-white rounded-lg border border-gray-200 p-6 animate-pulse\",\n        className,\n      )}\n    >\n      <div className=\"space-y-4\">\n        <div className=\"h-4 bg-gray-200 rounded w-1/4\" />\n        <div className=\"h-8 bg-gray-200 rounded w-3/4\" />\n        <div className=\"space-y-2\">\n          <div className=\"h-3 bg-gray-200 rounded\" />\n          <div className=\"h-3 bg-gray-200 rounded w-5/6\" />\n        </div>\n        <div className=\"flex space-x-2\">\n          <div className=\"h-8 bg-gray-200 rounded w-20\" />\n          <div className=\"h-8 bg-gray-200 rounded w-20\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// 리스트 스켈레톤\nexport const ListSkeleton: React.FC<{\n  items?: number;\n  className?: string;\n}> = ({ items = 5, className }) => {\n  return (\n    <div className={cn(\"space-y-3\", className)}>\n      {Array.from({ length: items }).map((_, index) => (\n        <div\n          key={index}\n          className=\"bg-white rounded-lg border border-gray-200 p-4 animate-pulse\"\n        >\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"h-10 w-10 bg-gray-200 rounded\" />\n            <div className=\"flex-1 space-y-2\">\n              <div className=\"h-4 bg-gray-200 rounded w-3/4\" />\n              <div className=\"h-3 bg-gray-200 rounded w-1/2\" />\n            </div>\n            <div className=\"h-8 w-20 bg-gray-200 rounded\" />\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport { Loading };\n","// ============================================================================\n// PWA 설치 프롬프트 컴포넌트 - PC 바로가기 만들기\n// ============================================================================\n\nimport React, { useState, useEffect } from \"react\";\nimport { Download, X, Monitor } from \"lucide-react\";\n\ninterface BeforeInstallPromptEvent extends Event {\n  readonly platforms: string[];\n  readonly userChoice: Promise<{\n    outcome: \"accepted\" | \"dismissed\";\n    platform: string;\n  }>;\n  prompt(): Promise<void>;\n}\n\nexport const InstallPrompt: React.FC = () => {\n  const [deferredPrompt, setDeferredPrompt] =\n    useState<BeforeInstallPromptEvent | null>(null);\n  const [showInstallPrompt, setShowInstallPrompt] = useState(false);\n  const [isInstalled, setIsInstalled] = useState(false);\n\n  useEffect(() => {\n    // PWA 설치 가능 이벤트 리스너\n    const handleBeforeInstallPrompt = (e: Event) => {\n      e.preventDefault();\n      setDeferredPrompt(e as BeforeInstallPromptEvent);\n      setShowInstallPrompt(true);\n    };\n\n    // PWA 설치 완료 이벤트 리스너\n    const handleAppInstalled = () => {\n      setIsInstalled(true);\n      setShowInstallPrompt(false);\n      setDeferredPrompt(null);\n    };\n\n    // 이미 설치되었는지 확인\n    const checkIfInstalled = () => {\n      if (\n        window.matchMedia &&\n        window.matchMedia(\"(display-mode: standalone)\").matches\n      ) {\n        setIsInstalled(true);\n      }\n    };\n\n    window.addEventListener(\"beforeinstallprompt\", handleBeforeInstallPrompt);\n    window.addEventListener(\"appinstalled\", handleAppInstalled);\n    checkIfInstalled();\n\n    return () => {\n      window.removeEventListener(\n        \"beforeinstallprompt\",\n        handleBeforeInstallPrompt,\n      );\n      window.removeEventListener(\"appinstalled\", handleAppInstalled);\n    };\n  }, []);\n\n  const handleInstallClick = async () => {\n    if (!deferredPrompt) return;\n\n    try {\n      await deferredPrompt.prompt();\n      const { outcome } = await deferredPrompt.userChoice;\n\n      if (outcome === \"accepted\") {\n        console.log(\"✅ PWA 설치 승인됨\");\n        setShowInstallPrompt(false);\n      } else {\n        console.log(\"❌ PWA 설치 거부됨\");\n      }\n\n      setDeferredPrompt(null);\n    } catch (error) {\n      console.error(\"PWA 설치 오류:\", error);\n    }\n  };\n\n  const handleDismiss = () => {\n    setShowInstallPrompt(false);\n    // 24시간 후에 다시 표시하도록 설정 (선택사항)\n    localStorage.setItem(\"pwa-install-dismissed\", Date.now().toString());\n  };\n\n  // 설치되었거나 설치 프롬프트가 없으면 표시하지 않음\n  if (isInstalled || !showInstallPrompt || !deferredPrompt) {\n    return null;\n  }\n\n  return (\n    <div className=\"fixed bottom-4 left-4 right-4 md:left-auto md:right-4 md:w-96 bg-white border border-gray-200 rounded-lg shadow-lg p-4 z-50\">\n      <div className=\"flex items-start space-x-3\">\n        <div className=\"flex-shrink-0\">\n          <div className=\"w-10 h-10 bg-blue-100 rounded-lg flex items-center justify-center\">\n            <Monitor className=\"w-5 h-5 text-blue-600\" />\n          </div>\n        </div>\n\n        <div className=\"flex-1 min-w-0\">\n          <h3 className=\"text-sm font-semibold text-gray-900 mb-1\">\n            PC에 바로가기 만들기\n          </h3>\n          <p className=\"text-xs text-gray-600 mb-3\">\n            리체 매물장을 PC 바탕화면에 설치하여 더 편리하게 사용하세요.\n          </p>\n\n          <div className=\"flex items-center space-x-2\">\n            <button\n              onClick={handleInstallClick}\n              className=\"inline-flex items-center px-3 py-1.5 bg-blue-600 text-white text-xs font-medium rounded hover:bg-blue-700 transition-colors\"\n            >\n              <Download className=\"w-3 h-3 mr-1\" />\n              설치하기\n            </button>\n\n            <button\n              onClick={handleDismiss}\n              className=\"inline-flex items-center px-3 py-1.5 bg-gray-100 text-gray-700 text-xs font-medium rounded hover:bg-gray-200 transition-colors\"\n            >\n              나중에\n            </button>\n          </div>\n        </div>\n\n        <button\n          onClick={handleDismiss}\n          className=\"flex-shrink-0 p-1 text-gray-400 hover:text-gray-600 transition-colors\"\n        >\n          <X className=\"w-4 h-4\" />\n        </button>\n      </div>\n    </div>\n  );\n};\n\n// 별도 설치 버튼 컴포넌트 (헤더나 설정에서 사용)\nexport const InstallButton: React.FC = () => {\n  const [deferredPrompt, setDeferredPrompt] =\n    useState<BeforeInstallPromptEvent | null>(null);\n  const [isInstalled, setIsInstalled] = useState(false);\n  const [isSupported, setIsSupported] = useState(false);\n\n  useEffect(() => {\n    const handleBeforeInstallPrompt = (e: Event) => {\n      e.preventDefault();\n      console.log(\"✅ PWA 설치 이벤트 감지됨\");\n      setDeferredPrompt(e as BeforeInstallPromptEvent);\n      setIsSupported(true);\n    };\n\n    const checkIfInstalled = () => {\n      // 이미 설치된 경우 확인\n      if (\n        window.matchMedia &&\n        window.matchMedia(\"(display-mode: standalone)\").matches\n      ) {\n        console.log(\"✅ 이미 PWA로 설치되어 실행 중\");\n        setIsInstalled(true);\n        return;\n      }\n\n      // iOS Safari에서 홈 화면에 추가된 경우\n      if ((window.navigator as any).standalone === true) {\n        console.log(\"✅ iOS에서 홈 화면에 추가되어 실행 중\");\n        setIsInstalled(true);\n        return;\n      }\n\n      // 브라우저가 PWA를 지원하는지 확인\n      if (\n        \"serviceWorker\" in navigator &&\n        \"BeforeInstallPromptEvent\" in window\n      ) {\n        setIsSupported(true);\n        console.log(\"✅ 브라우저가 PWA를 지원함\");\n      } else {\n        console.log(\"❌ 브라우저가 PWA를 지원하지 않음\");\n      }\n    };\n\n    window.addEventListener(\"beforeinstallprompt\", handleBeforeInstallPrompt);\n    checkIfInstalled();\n\n    return () => {\n      window.removeEventListener(\n        \"beforeinstallprompt\",\n        handleBeforeInstallPrompt,\n      );\n    };\n  }, []);\n\n  const handleInstallClick = async () => {\n    console.log(\"🔘 설치 버튼 클릭됨\");\n\n    if (!deferredPrompt) {\n      console.log(\"❌ deferredPrompt가 없음 - 수동 설치 안내\");\n\n      // 수동 설치 안내\n      const userAgent = navigator.userAgent.toLowerCase();\n      const isIOS =\n        userAgent.includes(\"ipad\") ||\n        userAgent.includes(\"iphone\") ||\n        userAgent.includes(\"ipod\");\n      const isAndroid = userAgent.includes(\"android\");\n\n      if (isIOS) {\n        alert(\n          'iOS Safari에서 설치하기:\\n\\n1. 하단의 공유 버튼(⬆️) 터치\\n2. \"홈 화면에 추가\" 선택\\n3. \"추가\" 버튼 터치',\n        );\n      } else if (isAndroid) {\n        alert(\n          'Android Chrome에서 설치하기:\\n\\n1. 우상단 메뉴(⋮) 터치\\n2. \"홈 화면에 추가\" 또는 \"앱 설치\" 선택',\n        );\n      } else {\n        alert(\n          'PC에서 설치하기:\\n\\n1. Chrome/Edge 주소창 우측의 설치 아이콘 클릭\\n2. 또는 브라우저 메뉴에서 \"앱 설치\" 선택',\n        );\n      }\n      return;\n    }\n\n    try {\n      console.log(\"⏳ PWA 설치 프롬프트 표시 중...\");\n      await deferredPrompt.prompt();\n      const { outcome } = await deferredPrompt.userChoice;\n\n      console.log(`📊 사용자 선택: ${outcome}`);\n\n      if (outcome === \"accepted\") {\n        console.log(\"✅ PWA 설치 승인됨\");\n        setIsInstalled(true);\n        alert(\"✅ 설치가 완료되었습니다! 바탕화면에서 앱을 확인해보세요.\");\n      } else {\n        console.log(\"❌ PWA 설치 거부됨\");\n      }\n\n      setDeferredPrompt(null);\n    } catch (error) {\n      console.error(\"💥 PWA 설치 오류:\", error);\n      alert(\n        '설치 중 오류가 발생했습니다. 브라우저 메뉴에서 \"앱 설치\"를 시도해보세요.',\n      );\n    }\n  };\n\n  // 이미 설치된 경우\n  if (isInstalled) {\n    return (\n      <div className=\"inline-flex items-center px-3 py-2 bg-green-100 text-green-700 text-sm font-medium rounded-lg\">\n        <span className=\"w-4 h-4 mr-2\">✅</span>\n        설치 완료\n      </div>\n    );\n  }\n\n  // PWA를 지원하지 않는 브라우저\n  if (!isSupported && !deferredPrompt) {\n    return (\n      <button\n        onClick={handleInstallClick}\n        className=\"inline-flex items-center px-3 py-2 bg-gray-500 text-white text-sm font-medium rounded-lg hover:bg-gray-600 transition-colors\"\n        title=\"브라우저에서 수동 설치 방법을 안내합니다\"\n      >\n        <Download className=\"w-4 h-4 mr-2\" />\n        설치 방법 보기\n      </button>\n    );\n  }\n\n  return (\n    <button\n      onClick={handleInstallClick}\n      className=\"inline-flex items-center px-3 py-2 bg-blue-600 text-white text-sm font-medium rounded-lg hover:bg-blue-700 transition-colors active:bg-blue-800\"\n      disabled={false}\n    >\n      <Download className=\"w-4 h-4 mr-2\" />\n      PC에 설치\n    </button>\n  );\n};\n","// ============================================================================\n// 회원가입 폼\n// ============================================================================\n\nimport React, { useState } from \"react\";\nimport {\n  Eye,\n  EyeOff,\n  Mail,\n  Lock,\n  User,\n  Building,\n  AlertCircle,\n  CheckCircle,\n  ArrowLeft,\n} from \"lucide-react\";\nimport {\n  Button,\n  Input,\n  Card,\n  CardHeader,\n  CardTitle,\n  CardContent,\n} from \"@/components/ui\";\nimport { useAuth } from \"@/contexts/AuthContext\";\nimport type { SignUpData } from \"@/types\";\n\ninterface SignUpFormProps {\n  onBackToLogin: () => void;\n}\n\nexport const SignUpForm: React.FC<SignUpFormProps> = ({ onBackToLogin }) => {\n  const { signUp } = useAuth();\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [success, setSuccess] = useState<string | null>(null);\n  const [formData, setFormData] = useState<\n    SignUpData & { confirmPassword: string }\n  >({\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    name: \"\",\n    company: \"\",\n  });\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    setSuccess(null);\n\n    // 비밀번호 확인\n    if (formData.password !== formData.confirmPassword) {\n      setError(\"비밀번호가 일치하지 않습니다.\");\n      setLoading(false);\n      return;\n    }\n\n    // 비밀번호 강도 검사\n    if (formData.password.length < 8) {\n      setError(\"비밀번호는 8자 이상이어야 합니다.\");\n      setLoading(false);\n      return;\n    }\n\n    const { error } = await signUp({\n      email: formData.email,\n      password: formData.password,\n      name: formData.name,\n      company: formData.company,\n    });\n\n    if (error) {\n      if (error.message.includes(\"User already registered\")) {\n        setError(\"이미 등록된 이메일 주소입니다.\");\n      } else {\n        setError(error.message);\n      }\n    } else {\n      setSuccess(\"회원가입이 완료되었습니다! 이메일을 확인해주세요.\");\n\n      // 3초 후 로그인 페이지로 이동\n      setTimeout(() => {\n        onBackToLogin();\n      }, 3000);\n    }\n\n    setLoading(false);\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setFormData((prev) => ({ ...prev, [name]: value }));\n    setError(null);\n    setSuccess(null);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-primary-50 to-blue-100 flex items-center justify-center p-4\">\n      <div className=\"w-full max-w-md\">\n        {/* 로고 및 헤더 */}\n        <div className=\"text-center mb-8\">\n          <div className=\"inline-flex items-center justify-center w-16 h-16 bg-primary-600 rounded-full text-white text-2xl font-bold mb-4\">\n            리\n          </div>\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">리체 매물장</h1>\n          <p className=\"text-gray-600\">부동산 전문 관리 솔루션</p>\n        </div>\n\n        <Card className=\"shadow-xl\">\n          <CardHeader>\n            <div className=\"flex items-center space-x-3\">\n              <button\n                onClick={onBackToLogin}\n                className=\"p-1 rounded-full hover:bg-gray-100 transition-colors\"\n              >\n                <ArrowLeft size={20} className=\"text-gray-600\" />\n              </button>\n              <CardTitle>회원가입</CardTitle>\n            </div>\n          </CardHeader>\n          <CardContent>\n            <form onSubmit={handleSubmit} className=\"space-y-4\">\n              {/* 베타 테스트 안내 */}\n              <div className=\"flex items-center space-x-2 p-3 bg-blue-50 border border-blue-200 rounded-lg text-blue-700\">\n                <CheckCircle size={16} />\n                <span className=\"text-sm\">\n                  <strong>베타 테스트 중:</strong> 이메일 인증 없이 즉시 로그인\n                  가능합니다.\n                </span>\n              </div>\n\n              {/* 오류/성공 메시지 */}\n              {error && (\n                <div className=\"flex items-center space-x-2 p-3 bg-red-50 border border-red-200 rounded-lg text-red-700\">\n                  <AlertCircle size={16} />\n                  <span className=\"text-sm\">{error}</span>\n                </div>\n              )}\n\n              {success && (\n                <div className=\"flex items-center space-x-2 p-3 bg-green-50 border border-green-200 rounded-lg text-green-700\">\n                  <CheckCircle size={16} />\n                  <span className=\"text-sm\">{success}</span>\n                </div>\n              )}\n\n              {/* 이름 */}\n              <div>\n                <Input\n                  type=\"text\"\n                  name=\"name\"\n                  placeholder=\"이름\"\n                  value={formData.name}\n                  onChange={handleInputChange}\n                  leftIcon={<User size={20} />}\n                  required\n                />\n              </div>\n\n              {/* 회사명 */}\n              <div>\n                <Input\n                  type=\"text\"\n                  name=\"company\"\n                  placeholder=\"회사명 (선택사항)\"\n                  value={formData.company}\n                  onChange={handleInputChange}\n                  leftIcon={<Building size={20} />}\n                />\n              </div>\n\n              {/* 이메일 */}\n              <div>\n                <Input\n                  type=\"email\"\n                  name=\"email\"\n                  placeholder=\"이메일 주소\"\n                  value={formData.email}\n                  onChange={handleInputChange}\n                  leftIcon={<Mail size={20} />}\n                  required\n                />\n              </div>\n\n              {/* 비밀번호 */}\n              <div>\n                <div className=\"relative\">\n                  <Input\n                    type={showPassword ? \"text\" : \"password\"}\n                    name=\"password\"\n                    placeholder=\"비밀번호 (8자 이상)\"\n                    value={formData.password}\n                    onChange={handleInputChange}\n                    leftIcon={<Lock size={20} />}\n                    required\n                  />\n                  <button\n                    type=\"button\"\n                    onClick={() => setShowPassword(!showPassword)}\n                    className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600\"\n                  >\n                    {showPassword ? <EyeOff size={20} /> : <Eye size={20} />}\n                  </button>\n                </div>\n              </div>\n\n              {/* 비밀번호 확인 */}\n              <div>\n                <div className=\"relative\">\n                  <Input\n                    type={showConfirmPassword ? \"text\" : \"password\"}\n                    name=\"confirmPassword\"\n                    placeholder=\"비밀번호 확인\"\n                    value={formData.confirmPassword}\n                    onChange={handleInputChange}\n                    leftIcon={<Lock size={20} />}\n                    required\n                  />\n                  <button\n                    type=\"button\"\n                    onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n                    className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600\"\n                  >\n                    {showConfirmPassword ? (\n                      <EyeOff size={20} />\n                    ) : (\n                      <Eye size={20} />\n                    )}\n                  </button>\n                </div>\n              </div>\n\n              {/* 비밀번호 강도 표시 */}\n              {formData.password && (\n                <div className=\"space-y-2\">\n                  <div className=\"flex space-x-1\">\n                    <div\n                      className={`h-1 flex-1 rounded ${\n                        formData.password.length >= 8\n                          ? \"bg-green-500\"\n                          : \"bg-red-500\"\n                      }`}\n                    />\n                    <div\n                      className={`h-1 flex-1 rounded ${\n                        formData.password.length >= 12\n                          ? \"bg-green-500\"\n                          : \"bg-gray-200\"\n                      }`}\n                    />\n                    <div\n                      className={`h-1 flex-1 rounded ${\n                        /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]/.test(\n                          formData.password,\n                        )\n                          ? \"bg-green-500\"\n                          : \"bg-gray-200\"\n                      }`}\n                    />\n                  </div>\n                  <p className=\"text-xs text-gray-600\">\n                    최소 8자, 12자 이상 및 특수문자 포함 권장\n                  </p>\n                </div>\n              )}\n\n              {/* 회원가입 버튼 */}\n              <Button\n                type=\"submit\"\n                variant=\"primary\"\n                size=\"lg\"\n                className=\"w-full\"\n                loading={loading}\n                disabled={success !== null}\n              >\n                회원가입\n              </Button>\n            </form>\n\n            {/* 로그인 링크 */}\n            <div className=\"mt-6 pt-4 border-t border-gray-200 text-center\">\n              <p className=\"text-sm text-gray-600\">\n                이미 계정이 있으신가요?{\" \"}\n                <button\n                  onClick={onBackToLogin}\n                  className=\"text-primary-600 hover:text-primary-700 font-medium underline\"\n                >\n                  로그인\n                </button>\n              </p>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* 푸터 */}\n        <div className=\"text-center mt-8 text-sm text-gray-500\">\n          <p>© 2025 리체 매물장. All rights reserved.</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n","// ============================================================================\n// 로그인 페이지\n// ============================================================================\n\nimport React, { useState } from \"react\";\nimport {\n  Eye,\n  EyeOff,\n  Mail,\n  Lock,\n  AlertCircle,\n  CheckCircle,\n} from \"lucide-react\";\nimport {\n  Button,\n  Input,\n  Card,\n  CardHeader,\n  CardTitle,\n  CardContent,\n} from \"@/components/ui\";\nimport { useAuth } from \"@/contexts/AuthContext\";\nimport { SignUpForm } from \"./SignUpForm\";\nimport type { SignInData } from \"@/types\";\n\nexport const LoginPage: React.FC = () => {\n  const { signIn, resetPassword } = useAuth();\n  const [isSignUp, setIsSignUp] = useState(false);\n  const [isResetPassword, setIsResetPassword] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [success, setSuccess] = useState<string | null>(null);\n  const [formData, setFormData] = useState<SignInData>({\n    email: \"\",\n    password: \"\",\n  });\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    setSuccess(null);\n\n    if (isResetPassword) {\n      const { error } = await resetPassword(formData.email);\n      if (error) {\n        setError(error.message);\n      } else {\n        setSuccess(\"비밀번호 재설정 이메일을 보냈습니다.\");\n        setIsResetPassword(false);\n      }\n    } else {\n      const { error } = await signIn(formData);\n      if (error) {\n        setError(\"이메일 또는 비밀번호가 올바르지 않습니다.\");\n      }\n    }\n\n    setLoading(false);\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setFormData((prev) => ({ ...prev, [name]: value }));\n    setError(null);\n    setSuccess(null);\n  };\n\n  if (isSignUp) {\n    return <SignUpForm onBackToLogin={() => setIsSignUp(false)} />;\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-primary-50 to-blue-100 flex items-center justify-center p-4\">\n      <div className=\"w-full max-w-md\">\n        {/* 로고 및 헤더 */}\n        <div className=\"text-center mb-8\">\n          <div className=\"inline-flex items-center justify-center w-16 h-16 bg-primary-600 rounded-full text-white text-2xl font-bold mb-4\">\n            리\n          </div>\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">리체 매물장</h1>\n          <p className=\"text-gray-600\">부동산 전문 관리 솔루션</p>\n        </div>\n\n        <Card className=\"shadow-xl\">\n          <CardHeader>\n            <CardTitle className=\"text-center\">\n              {isResetPassword ? \"비밀번호 재설정\" : \"로그인\"}\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <form onSubmit={handleSubmit} className=\"space-y-4\">\n              {/* 오류/성공 메시지 */}\n              {error && (\n                <div className=\"flex items-center space-x-2 p-3 bg-red-50 border border-red-200 rounded-lg text-red-700\">\n                  <AlertCircle size={16} />\n                  <span className=\"text-sm\">{error}</span>\n                </div>\n              )}\n\n              {success && (\n                <div className=\"flex items-center space-x-2 p-3 bg-green-50 border border-green-200 rounded-lg text-green-700\">\n                  <CheckCircle size={16} />\n                  <span className=\"text-sm\">{success}</span>\n                </div>\n              )}\n\n              {/* 이메일 */}\n              <div>\n                <Input\n                  type=\"email\"\n                  name=\"email\"\n                  placeholder=\"이메일 주소\"\n                  value={formData.email}\n                  onChange={handleInputChange}\n                  leftIcon={<Mail size={20} />}\n                  required\n                />\n              </div>\n\n              {/* 비밀번호 (비밀번호 재설정이 아닌 경우만) */}\n              {!isResetPassword && (\n                <div>\n                  <div className=\"relative\">\n                    <Input\n                      type={showPassword ? \"text\" : \"password\"}\n                      name=\"password\"\n                      placeholder=\"비밀번호\"\n                      value={formData.password}\n                      onChange={handleInputChange}\n                      leftIcon={<Lock size={20} />}\n                      required\n                    />\n                    <button\n                      type=\"button\"\n                      onClick={() => setShowPassword(!showPassword)}\n                      className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600\"\n                    >\n                      {showPassword ? <EyeOff size={20} /> : <Eye size={20} />}\n                    </button>\n                  </div>\n                </div>\n              )}\n\n              {/* 로그인/재설정 버튼 */}\n              <Button\n                type=\"submit\"\n                variant=\"primary\"\n                size=\"lg\"\n                className=\"w-full\"\n                loading={loading}\n              >\n                {isResetPassword ? \"재설정 이메일 전송\" : \"로그인\"}\n              </Button>\n\n              {/* 비밀번호 재설정 링크 */}\n              {!isResetPassword && (\n                <div className=\"text-center\">\n                  <button\n                    type=\"button\"\n                    onClick={() => setIsResetPassword(true)}\n                    className=\"text-sm text-primary-600 hover:text-primary-700 underline\"\n                  >\n                    비밀번호를 잊으셨나요?\n                  </button>\n                </div>\n              )}\n\n              {/* 뒤로 가기 */}\n              {isResetPassword && (\n                <div className=\"text-center\">\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      setIsResetPassword(false);\n                      setError(null);\n                      setSuccess(null);\n                    }}\n                    className=\"text-sm text-gray-600 hover:text-gray-700 underline\"\n                  >\n                    로그인으로 돌아가기\n                  </button>\n                </div>\n              )}\n            </form>\n\n            {/* 회원가입 링크 */}\n            {!isResetPassword && (\n              <div className=\"mt-6 pt-4 border-t border-gray-200 text-center\">\n                <p className=\"text-sm text-gray-600\">\n                  계정이 없으신가요?{\" \"}\n                  <button\n                    onClick={() => setIsSignUp(true)}\n                    className=\"text-primary-600 hover:text-primary-700 font-medium underline\"\n                  >\n                    회원가입\n                  </button>\n                </p>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n\n        {/* 푸터 */}\n        <div className=\"text-center mt-8 text-sm text-gray-500\">\n          <p>© 2025 리체 매물장. All rights reserved.</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n","// ============================================================================\n// 인증 가드 - 로그인 필수 컴포넌트\n// ============================================================================\n\nimport React from \"react\";\nimport { useAuth } from \"@/contexts/AuthContext\";\nimport { LoginPage } from \"./LoginPage\";\nimport { Loading } from \"@/components/ui\";\n\ninterface AuthGuardProps {\n  children: React.ReactNode;\n  fallback?: React.ReactNode;\n}\n\nexport const AuthGuard: React.FC<AuthGuardProps> = ({\n  children,\n  fallback = <LoginPage />,\n}) => {\n  const { user, loading, signOut } = useAuth();\n\n  const handleForceSignOut = async () => {\n    try {\n      await signOut();\n      window.location.reload();\n    } catch (error) {\n      console.error(\"Force sign out error:\", error);\n      // 강제로 로컬스토리지 정리\n      localStorage.clear();\n      sessionStorage.clear();\n      window.location.reload();\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-center space-y-4\">\n          <Loading size=\"lg\" text=\"로딩 중...\" />\n          <p className=\"text-sm text-gray-500 mt-4\">\n            5초 이상 로딩이 지속되면 아래 버튼을 클릭하세요\n          </p>\n          <button\n            onClick={handleForceSignOut}\n            className=\"px-4 py-2 text-sm bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors\"\n          >\n            강제 로그아웃\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  if (!user) {\n    return <>{fallback}</>;\n  }\n\n  return <>{children}</>;\n};\n","// ============================================================================\n// 사용자 메뉴 컴포넌트\n// ============================================================================\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { User, Settings, LogOut, ChevronDown } from \"lucide-react\";\nimport { useAuth } from \"@/contexts/AuthContext\";\n\nexport const UserMenu: React.FC = () => {\n  const { user, signOut } = useAuth();\n  const [isOpen, setIsOpen] = useState(false);\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  // 외부 클릭 시 메뉴 닫기\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (menuRef.current && !menuRef.current.contains(event.target as Node)) {\n        setIsOpen(false);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\n  }, []);\n\n  const handleSignOut = async () => {\n    try {\n      await signOut();\n    } catch (error) {\n      console.error(\"로그아웃 오류:\", error);\n    }\n  };\n\n  if (!user) {\n    return null;\n  }\n\n  return (\n    <div className=\"relative\" ref={menuRef}>\n      {/* 사용자 버튼 */}\n      <button\n        onClick={() => setIsOpen(!isOpen)}\n        className=\"flex items-center space-x-3 p-2 rounded-lg hover:bg-gray-100 transition-colors\"\n      >\n        {/* 아바타 */}\n        <div className=\"w-8 h-8 bg-gradient-to-r from-primary-400 to-primary-600 rounded-full flex items-center justify-center text-white font-semibold text-sm\">\n          {user.avatar_url ? (\n            <img\n              src={user.avatar_url}\n              alt={user.name}\n              className=\"w-8 h-8 rounded-full object-cover\"\n            />\n          ) : (\n            user.name.charAt(0).toUpperCase()\n          )}\n        </div>\n\n        {/* 사용자 정보 */}\n        <div className=\"text-left hidden md:block\">\n          <p className=\"text-sm font-medium text-gray-900\">{user.name}</p>\n          <p className=\"text-xs text-gray-500\">\n            {user.role === \"owner\"\n              ? \"업체 대표\"\n              : user.role === \"manager\"\n                ? \"팀장/실장\"\n                : user.role === \"agent\"\n                  ? \"중개사\"\n                  : \"조회자\"}\n          </p>\n        </div>\n\n        <ChevronDown\n          size={16}\n          className={`text-gray-400 transition-transform hidden md:block ${\n            isOpen ? \"rotate-180\" : \"\"\n          }`}\n        />\n      </button>\n\n      {/* 드롭다운 메뉴 */}\n      {isOpen && (\n        <div className=\"absolute right-0 top-full mt-2 w-56 bg-white rounded-lg shadow-lg border border-gray-200 py-2 z-50\">\n          {/* 사용자 정보 헤더 */}\n          <div className=\"px-4 py-2 border-b border-gray-100\">\n            <p className=\"text-sm font-medium text-gray-900\">{user.name}</p>\n            <p className=\"text-xs text-gray-500\">{user.email}</p>\n            <p className=\"text-xs text-gray-400 mt-1\">\n              가입일: {new Date(user.created_at).toLocaleDateString()}\n            </p>\n          </div>\n\n          {/* 메뉴 아이템 */}\n          <div className=\"py-1\">\n            <a\n              href=\"/profile\"\n              className=\"flex items-center px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 transition-colors\"\n              onClick={() => setIsOpen(false)}\n            >\n              <User size={16} className=\"mr-3\" />내 프로필\n            </a>\n\n            <a\n              href=\"/settings\"\n              className=\"flex items-center px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 transition-colors\"\n              onClick={() => setIsOpen(false)}\n            >\n              <Settings size={16} className=\"mr-3\" />\n              설정\n            </a>\n          </div>\n\n          {/* 구분선 */}\n          <div className=\"border-t border-gray-100 my-1\"></div>\n\n          {/* 로그아웃 */}\n          <button\n            onClick={handleSignOut}\n            className=\"flex items-center w-full px-4 py-2 text-sm text-red-600 hover:bg-red-50 transition-colors\"\n          >\n            <LogOut size={16} className=\"mr-3\" />\n            로그아웃\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n","// ============================================================================\n// 메인 애플리케이션 레이아웃\n// ============================================================================\n\nimport React, { useState } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { Home, Plus, Users, Settings, X, BookOpen, Calendar } from \"lucide-react\";\nimport { Button } from \"@/components/ui\";\nimport { useTenant } from \"@/contexts/TenantContext\";\nimport { UserMenu } from \"./UserMenu\";\nimport { cn } from \"@/utils/cn\";\n\ninterface AppLayoutProps {\n  children: React.ReactNode;\n}\n\nconst AppLayout: React.FC<AppLayoutProps> = ({ children }) => {\n  const [sidebarOpen, setSidebarOpen] = useState(false);\n  const { tenant } = useTenant();\n  const location = useLocation();\n\n  const navigation = [\n    { name: \"대시보드\", href: \"/\", icon: Home },\n    { name: \"매물 관리\", href: \"/properties\", icon: Home },\n    { name: \"일정 관리\", href: \"/schedule\", icon: Calendar },\n    { name: \"팀 관리\", href: \"/team\", icon: Users },\n    { name: \"설정\", href: \"/settings\", icon: Settings },\n    { name: \"사용설명서\", href: \"/guide\", icon: BookOpen },\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* 모바일 사이드바 오버레이 */}\n      {sidebarOpen && (\n        <div\n          className=\"fixed inset-0 z-40 bg-black bg-opacity-50 lg:hidden\"\n          onClick={() => setSidebarOpen(false)}\n        />\n      )}\n\n      {/* 데스크톱 사이드바 */}\n      <div\n        className={cn(\n          \"sidebar fixed inset-y-0 left-0 z-50 w-64 bg-white border-r border-gray-200 transition-transform duration-300 ease-in-out lg:translate-x-0 hidden lg:block\",\n          sidebarOpen ? \"translate-x-0\" : \"-translate-x-full lg:translate-x-0\",\n        )}\n      >\n        <div className=\"flex flex-col h-full\">\n          {/* 헤더 */}\n          <div className=\"flex items-center justify-between h-16 px-6 border-b border-gray-200\">\n            <div className=\"flex items-center space-x-3\">\n              <div\n                className=\"w-8 h-8 rounded-lg flex items-center justify-center\"\n                style={{\n                  background: `linear-gradient(135deg, ${tenant?.branding?.primary_color || \"#3b82f6\"}, ${tenant?.branding?.secondary_color || \"#1d4ed8\"})`,\n                }}\n              >\n                <Home size={18} className=\"text-white\" />\n              </div>\n              <div>\n                <h1 className=\"text-lg font-bold\">\n                  {tenant?.name || \"리체 매물장\"}\n                </h1>\n                <p className=\"text-xs text-gray-500\">{tenant?.plan} 플랜</p>\n              </div>\n            </div>\n            <button\n              onClick={() => setSidebarOpen(false)}\n              className=\"lg:hidden p-1 text-gray-400 hover:text-gray-600\"\n            >\n              <X size={20} />\n            </button>\n          </div>\n\n          {/* 매물 등록 버튼 */}\n          <div className=\"p-4\">\n            <Link to=\"/properties?create=true\">\n              <Button\n                fullWidth\n                variant=\"tenant\"\n                leftIcon={<Plus size={18} />}\n                className=\"justify-center\"\n              >\n                매물 등록\n              </Button>\n            </Link>\n          </div>\n\n          {/* 네비게이션 */}\n          <nav className=\"flex-1 px-4 space-y-1\">\n            {navigation.map((item) => {\n              const isCurrent = location.pathname === item.href;\n              return (\n                <Link\n                  key={item.name}\n                  to={item.href}\n                  className={cn(\n                    \"nav-item flex items-center px-3 py-2 text-sm font-medium rounded-lg transition-colors\",\n                    isCurrent\n                      ? \"bg-primary-50 text-primary-700 border-primary-200\"\n                      : \"text-gray-600 hover:text-gray-900 hover:bg-gray-100\",\n                  )}\n                >\n                  <item.icon className=\"w-5 h-5 mr-3\" />\n                  {item.name}\n                </Link>\n              );\n            })}\n          </nav>\n\n          {/* 하단 정보 */}\n          <div className=\"p-4 border-t border-gray-200\">\n            <div className=\"text-xs text-gray-500 space-y-2\">\n              <div>\n                <p>매물: {tenant?.limits.max_properties || 0}개 제한</p>\n                <p>사용자: {tenant?.limits.max_users || 0}명 제한</p>\n              </div>\n\n              {/* 개발회사 정보 */}\n              <div className=\"pt-2 border-t border-gray-300 space-y-1\">\n                <p>\n                  <strong>개발회사:</strong> 리체부동산\n                </p>\n                <p>\n                  <strong>대표:</strong> 김선미 공인중개사\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* 모바일 하단 네비게이션 - 개선된 터치 최적화 */}\n      <div className=\"lg:hidden fixed bottom-0 left-0 right-0 z-50 bg-white border-t border-gray-200 shadow-lg pb-safe\">\n        <div className=\"grid grid-cols-6 h-16 bg-white\">\n          {navigation.map((item) => {\n            const isCurrent = location.pathname === item.href;\n            return (\n              <Link\n                key={item.name}\n                to={item.href}\n                className={cn(\n                  \"nav-item flex flex-col items-center justify-center px-1 py-2 text-xs font-medium transition-all duration-200 touch-manipulation active:scale-95\",\n                  \"min-h-[44px] relative\",\n                  isCurrent\n                    ? \"text-primary-600 bg-primary-50\"\n                    : \"text-gray-500 hover:text-gray-700 hover:bg-gray-50\",\n                )}\n              >\n                {isCurrent && (\n                  <div className=\"absolute top-0 left-1/2 w-8 h-1 bg-primary-600 rounded-b-full transform -translate-x-1/2\" />\n                )}\n                <item.icon size={18} className=\"mb-1 flex-shrink-0\" />\n                <span className=\"truncate text-center leading-tight max-w-full\">\n                  {item.name.split(\" \")[0]}\n                </span>\n              </Link>\n            );\n          })}\n        </div>\n      </div>\n\n      {/* 메인 컨텐츠 */}\n      <div className=\"lg:ml-64\">\n        {/* 상단 헤더 */}\n        <header className=\"bg-white border-b border-gray-200 h-16 flex items-center justify-between px-4 sm:px-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex items-center space-x-3 lg:hidden\">\n              <div\n                className=\"w-8 h-8 rounded-lg flex items-center justify-center\"\n                style={{\n                  background: `linear-gradient(135deg, ${tenant?.branding?.primary_color || \"#3b82f6\"}, ${tenant?.branding?.secondary_color || \"#1d4ed8\"})`,\n                }}\n              >\n                <Home size={16} className=\"text-white\" />\n              </div>\n              <h2 className=\"text-lg font-semibold\">\n                {tenant?.name || \"리체 매물장\"}\n              </h2>\n            </div>\n            <h2 className=\"hidden lg:block text-lg font-semibold\">매물장</h2>\n          </div>\n\n          <div className=\"flex items-center space-x-2 sm:space-x-4\">\n            {/* 모바일용 매물 등록 버튼 */}\n            <Link to=\"/properties?create=true\" className=\"lg:hidden\">\n              <Button\n                size=\"sm\"\n                variant=\"tenant\"\n                leftIcon={<Plus size={16} />}\n                className=\"px-3 py-2\"\n              >\n                등록\n              </Button>\n            </Link>\n\n            <UserMenu />\n          </div>\n        </header>\n\n        {/* 페이지 컨텐츠 */}\n        <main className=\"p-4 sm:p-6 pb-24 lg:pb-6 min-h-screen\">\n          {children}\n        </main>\n      </div>\n    </div>\n  );\n};\n\nexport { AppLayout };\n","import React from 'react';\n\ninterface ErrorBoundaryState {\n  hasError: boolean;\n  error?: Error;\n}\n\ninterface ErrorBoundaryProps {\n  children: React.ReactNode;\n}\n\nexport class ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\n  constructor(props: ErrorBoundaryProps) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error: Error): ErrorBoundaryState {\n    return { hasError: true, error };\n  }\n\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\n    console.error('ErrorBoundary caught an error:', error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n          <div className=\"max-w-md p-8 bg-white rounded-lg shadow-lg text-center\">\n            <h1 className=\"text-2xl font-bold text-red-600 mb-4\">앱 오류 발생</h1>\n            <p className=\"text-gray-600 mb-4\">\n              예상치 못한 오류가 발생했습니다. 페이지를 새로고침해 보세요.\n            </p>\n            <div className=\"space-y-4\">\n              <button\n                onClick={() => window.location.reload()}\n                className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n              >\n                새로고침\n              </button>\n              <details className=\"text-left\">\n                <summary className=\"text-sm text-gray-500 cursor-pointer\">\n                  기술적 세부사항 보기\n                </summary>\n                <pre className=\"text-xs text-red-600 mt-2 p-2 bg-red-50 rounded overflow-auto\">\n                  {this.state.error?.stack}\n                </pre>\n              </details>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}","// ============================================================================\n// 매물 관련 상수 정의\n// ============================================================================\n\n// 구조화된 description 태그\nexport const DESCRIPTION_TAGS = {\n  LANDLORD_INFO: \"임대인정보\",\n  EXIT_DATE: \"퇴실예정\",\n  FACILITIES: \"편의시설\",\n  DETAILED_ADDRESS: \"상세주소\",\n  OCCUPANCY_STATUS: \"거주현황\",\n  STATUS: \"상태\",\n} as const;\n\n// 정규식 패턴\nexport const DESCRIPTION_PATTERNS = {\n  LANDLORD: /\\[임대인정보\\]\\s*([^\\n\\[]+)/,\n  LANDLORD_NAME: /임대인:\\s*([^|]+)/,\n  LANDLORD_PHONE: /연락처:\\s*([^|]+)/,\n  EXIT_DATE: /\\[퇴실예정\\]\\s*([^\\n\\[]+)/,\n  VACANT: /\\[거주현황\\]\\s*공실/,\n  FACILITIES: /\\[편의시설\\]\\s*([^\\n\\[]+)/,\n  DETAILED_ADDRESS: /\\[상세주소\\]\\s*([^\\n\\[]+)/,\n  STATUS: /\\[상태\\]\\s*([^\\n\\[]+)/,\n  CONSECUTIVE_NEWLINES: /\\n\\s*\\n/g,\n} as const;\n\n// 편의시설 키워드\nexport const FACILITY_KEYWORDS = {\n  PARKING: \"주차가능\",\n  ELEVATOR: \"엘리베이터\",\n} as const;\n\n// 매물 상태 관련 코드 완전 삭제\n\n// 기본값\nexport const DEFAULT_VALUES = {\n  FLOOR: 1,\n  TOTAL_FLOORS: 1,\n  AREA: 0,\n  ROOMS: 1,\n  BATHROOMS: 1,\n} as const;\n\n// 에러 메시지\nexport const ERROR_MESSAGES = {\n  MISSING_TENANT_USER: \"테넌트 ID 또는 사용자 ID가 없습니다.\",\n  MISSING_REQUIRED_FIELDS: \"제목과 주소는 필수 입력 항목입니다.\",\n  DATABASE_ERROR: \"데이터베이스 오류\",\n  PROPERTY_NOT_FOUND: \"Property not found\",\n} as const;\n","// ============================================================================\n// 매물 데이터 파싱 유틸리티\n// ============================================================================\n\nimport {\n  DESCRIPTION_PATTERNS,\n  FACILITY_KEYWORDS,\n} from \"@/constants/propertyConstants\";\nimport type {\n  ParsedPropertyInfo,\n  PropertyDbRow,\n} from \"@/types/propertyService\";\nimport type { Property, PropertyStatus } from \"@/types\";\nimport { logger } from \"@/utils/logger\";\n\n// 캐시 메모리 (성능 최적화)\nconst parseCache = new Map<string, ParsedPropertyInfo>();\n\n// 구조화된 description 파싱 (캐싱 적용)\nexport const parseStructuredDescription = (\n  desc: string | null,\n): ParsedPropertyInfo => {\n  if (!desc) {\n    return {\n      landlord_name: undefined,\n      landlord_phone: undefined,\n      exit_date: undefined,\n      detailed_address: undefined,\n      parking: false,\n      elevator: false,\n      cleanDescription: \"\",\n      is_vacant: false,\n      // 매물 상태 관련 코드 완전 삭제\n      // status: '거래중' // 임시 기본값\n    };\n  }\n\n  // 캐시 확인\n  if (parseCache.has(desc)) {\n    return parseCache.get(desc)!;\n  }\n\n  let cleanDescription = desc;\n  let landlord_name: string | undefined;\n  let landlord_phone: string | undefined;\n  let exit_date: string | undefined;\n  let detailed_address: string | undefined;\n  // 매물 상태 관련 코드 완전 삭제\n  let parking = false;\n  let elevator = false;\n  let is_vacant = false;\n\n  // 상태 정보 파싱 로직 완전 삭제\n\n  // 임대인 정보 파싱\n  const landlordMatch = desc.match(DESCRIPTION_PATTERNS.LANDLORD);\n  if (landlordMatch) {\n    const landlordText = landlordMatch[1];\n    const nameMatch = landlordText.match(DESCRIPTION_PATTERNS.LANDLORD_NAME);\n    const phoneMatch = landlordText.match(DESCRIPTION_PATTERNS.LANDLORD_PHONE);\n\n    if (nameMatch) {\n      landlord_name = nameMatch[1].trim();\n    }\n    if (phoneMatch) {\n      landlord_phone = phoneMatch[1].trim();\n    }\n\n    cleanDescription = cleanDescription.replace(landlordMatch[0], \"\").trim();\n  }\n\n  // 퇴실 예정일 파싱\n  const exitMatch = desc.match(DESCRIPTION_PATTERNS.EXIT_DATE);\n  if (exitMatch) {\n    exit_date = exitMatch[1].trim();\n    cleanDescription = cleanDescription.replace(exitMatch[0], \"\").trim();\n  }\n\n  // 거주현황(공실) 파싱\n  const vacantMatch = desc.match(DESCRIPTION_PATTERNS.VACANT);\n  if (vacantMatch) {\n    is_vacant = true;\n    cleanDescription = cleanDescription.replace(vacantMatch[0], \"\").trim();\n  }\n\n  // 편의시설 파싱\n  const facilityMatch = desc.match(DESCRIPTION_PATTERNS.FACILITIES);\n  if (facilityMatch) {\n    const facilityText = facilityMatch[1];\n    parking = facilityText.includes(FACILITY_KEYWORDS.PARKING);\n    elevator = facilityText.includes(FACILITY_KEYWORDS.ELEVATOR);\n    cleanDescription = cleanDescription.replace(facilityMatch[0], \"\").trim();\n  }\n\n  // 상세주소 파싱\n  const addressMatch = desc.match(DESCRIPTION_PATTERNS.DETAILED_ADDRESS);\n  if (addressMatch) {\n    detailed_address = addressMatch[1].trim();\n    cleanDescription = cleanDescription.replace(addressMatch[0], \"\").trim();\n  }\n\n  // 연속된 줄바꿈 정리\n  cleanDescription = cleanDescription\n    .replace(DESCRIPTION_PATTERNS.CONSECUTIVE_NEWLINES, \"\\n\")\n    .trim();\n\n  const result: ParsedPropertyInfo = {\n    landlord_name,\n    landlord_phone,\n    exit_date,\n    detailed_address,\n    parking,\n    elevator,\n    cleanDescription,\n    is_vacant,\n    // 매물 상태 관련 코드 완전 삭제\n  };\n\n  // 결과 캐싱 (메모리 제한)\n  if (parseCache.size > 100) {\n    const firstKey = parseCache.keys().next().value;\n    if (firstKey) {\n      parseCache.delete(firstKey);\n    }\n  }\n  parseCache.set(desc, result);\n\n  return result;\n};\n\n// DB row를 Property 타입으로 변환\nexport const transformDbRowToProperty = (\n  item: PropertyDbRow,\n  parsedInfo: ParsedPropertyInfo,\n): Property => {\n  if (!item.description && Object.keys(parsedInfo).length === 0) {\n    // 빈 파싱 정보 처리\n  }\n  return {\n    id: item.id,\n    tenant_id: item.tenant_id,\n    created_by: item.user_id,\n    title: item.title,\n    type: item.property_type as any,\n    transaction_type: item.transaction_type as any,\n    status: (item.status as PropertyStatus) || \"거래중\", // DB 값 우선, 기본값은 '거래중'\n    address: item.address,\n    detailed_address: parsedInfo.detailed_address,\n    area: item.area_exclusive,\n    floor: item.floor_current,\n    total_floors: item.floor_total,\n    rooms: item.rooms,\n    bathrooms: item.bathrooms,\n    price: item.price\n      ? (() => {\n          const parsed = parseFloat(String(item.price));\n          // 개발 환경에서 가격 변환 추적\n          if (import.meta.env.DEV && parsed && parsed >= 10000) {\n            logger.debug(\"Price 변환:\", {\n              title: item.title,\n              original: item.price,\n              parsed,\n            });\n          }\n          return parsed;\n        })()\n      : undefined,\n    deposit: item.deposit\n      ? (() => {\n          const parsed = parseFloat(String(item.deposit));\n          // 개발 환경에서 보증금 변환 추적\n          if (import.meta.env.DEV && parsed && parsed >= 1000) {\n            logger.debug(\"Deposit 변환:\", {\n              title: item.title,\n              original: item.deposit,\n              parsed,\n            });\n          }\n          return parsed;\n        })()\n      : undefined,\n    monthly_rent: item.monthly_rent\n      ? (() => {\n          const parsed = parseFloat(String(item.monthly_rent));\n          // 개발 환경에서 월세 변환 추적\n          if (import.meta.env.DEV && parsed && parsed >= 10) {\n            logger.debug(\"Monthly rent 변환:\", {\n              title: item.title,\n              original: item.monthly_rent,\n              parsed,\n            });\n          }\n          return parsed;\n        })()\n      : undefined,\n    description: parsedInfo.cleanDescription || item.description || \"\",\n    landlord_name: parsedInfo.landlord_name,\n    landlord_phone: parsedInfo.landlord_phone,\n    exit_date: parsedInfo.exit_date,\n    parking: parsedInfo.parking,\n    elevator: parsedInfo.elevator,\n    images: [],\n    is_featured: false,\n    view_count: 0,\n    created_at: item.created_at,\n    updated_at: item.updated_at,\n    // 매물 상태 관련 코드 완전 삭제\n    options: [],\n    inquiry_count: 0,\n    is_urgent: false,\n    is_favorite: false,\n  };\n};\n","// ============================================================================\n// 매물 관리 서비스 - Supabase 통합\n// ============================================================================\n\nimport { supabase } from \"./supabase\";\nimport type {\n  SimplePropertyFilters,\n  CreatePropertyData,\n  UpdatePropertyData,\n} from \"@/types\";\nimport type { PropertyDbRow } from \"@/types/propertyService\";\nimport {\n  parseStructuredDescription,\n  transformDbRowToProperty,\n} from \"@/utils/propertyParsing\";\nimport { ERROR_MESSAGES, DEFAULT_VALUES } from \"@/constants/propertyConstants\";\nimport { logger } from \"@/utils/logger\";\n\n// 실제 Supabase 서비스 사용\n\n// 매물 조회 (사용자별 개별 관리) - 자동 복구 로직 포함\nexport const getProperties = async (\n  userId: string,\n  filters?: SimplePropertyFilters,\n) => {\n  try {\n    logger.info(\"🔍 getProperties 시작\", {\n      userId,\n      component: \"propertyService\",\n      action: \"getProperties\",\n    });\n    // 개발 환경에서 필터 로깅\n    logger.debug(\"Service getProperties 필터\", {\n      filters,\n      component: \"propertyService\",\n      action: \"getProperties\",\n    });\n\n    // 사용자의 올바른 tenant_id 조회 (자동 복구 로직 포함)\n    let { data: userProfile, error: userError } = await supabase\n      .from(\"user_profiles\")\n      .select(\"tenant_id\")\n      .eq(\"id\", userId)\n      .single();\n\n    // user_profile이 없는 경우 자동 생성\n    if (userError || !userProfile) {\n      logger.warn(\"⚠️ user_profile 누락 감지 - 자동 복구 시작\");\n\n      // 사용자 이메일 조회\n      const { data: authUser } = await supabase.auth.getUser();\n      if (!authUser.user?.email) {\n        throw new Error(\"사용자 정보를 찾을 수 없습니다.\");\n      }\n\n      // 자동 테넌트 및 프로필 생성 (트리거가 실행되지 않았을 경우의 fallback)\n      const userName = authUser.user.email.split(\"@\")[0];\n\n      // 테넌트 생성\n      const { data: newTenant } = await supabase\n        .from(\"tenants\")\n        .insert({\n          name: `${userName}의 부동산`,\n          created_at: new Date().toISOString(),\n        })\n        .select()\n        .single();\n\n      if (newTenant) {\n        // 프로필 생성\n        await supabase.from(\"user_profiles\").insert({\n          id: userId,\n          tenant_id: newTenant.id,\n          name: userName,\n          role: \"admin\",\n          company: `${userName}의 부동산`,\n          created_at: new Date().toISOString(),\n        });\n\n        // 다시 조회\n        const { data: recoveredProfile } = await supabase\n          .from(\"user_profiles\")\n          .select(\"tenant_id\")\n          .eq(\"id\", userId)\n          .single();\n\n        userProfile = recoveredProfile;\n        console.log(\"✅ 자동 복구 완료 - tenant_id:\", userProfile?.tenant_id);\n      }\n    }\n\n    const actualTenantId = userProfile?.tenant_id;\n    if (!actualTenantId) {\n      throw new Error(\"사용자에게 할당된 테넌트가 없습니다.\");\n    }\n\n    console.log(\"📋 실제 tenant_id:\", actualTenantId);\n\n    // 사용자의 실제 tenant_id로 매물 조회\n    let query = supabase\n      .from(\"properties\")\n      .select(\"*\")\n      .eq(\"tenant_id\", actualTenantId) // 정확한 tenant_id로 필터링\n      .order(\"created_at\", { ascending: false });\n\n    // 필터 적용\n    if (filters) {\n      if (filters.search) {\n        query = query.or(\n          `title.ilike.%${filters.search}%,address.ilike.%${filters.search}%`,\n        );\n      }\n\n      if (filters.transaction_type && filters.transaction_type !== \"전체\") {\n        query = query.eq(\"transaction_type\", filters.transaction_type);\n      }\n\n      if (filters.property_type && filters.property_type !== \"전체\") {\n        query = query.eq(\"property_type\", filters.property_type);\n      }\n\n      if (filters.property_status && filters.property_status !== \"전체\") {\n        query = query.eq(\"status\", filters.property_status);\n      }\n    }\n\n    const { data, error } = await query;\n\n    if (error) {\n      console.error(\"❌ Supabase 조회 에러:\", error);\n      console.error(\"❌ 에러 세부사항:\", {\n        message: error.message,\n        details: error.details,\n        hint: error.hint,\n        code: error.code,\n      });\n      throw error;\n    }\n\n    // 데이터 변환하여 프론트엔드 타입에 맞춤\n    let transformedData = (data || []).map((item: PropertyDbRow) => {\n      const parsedInfo = parseStructuredDescription(item.description || null);\n\n      // 개발 환경에서 매매가 데이터 확인\n      if (import.meta.env.DEV && item.transaction_type === \"매매\") {\n        console.log(\"Service DB 원본:\", {\n          title: item.title,\n          price: item.price,\n          type: typeof item.price,\n        });\n      }\n\n      // 구조화된 description에서 파싱된 상태 사용 (로컬 저장소 제거)\n      const property = transformDbRowToProperty(item, parsedInfo);\n\n      // 개발 환경에서 상태 파싱 결과 확인\n      if (import.meta.env.DEV) {\n        console.log(\"🔍 상태 파싱 결과:\", {\n          title: item.title,\n          rawDescription: item.description,\n          parsedStatus: parsedInfo,\n          finalStatus: /* status removed */ \"거래중\",\n        });\n      }\n\n      // 개발 환경에서 변환 후 데이터 확인\n      if (import.meta.env.DEV && property.transaction_type === \"매매\") {\n        console.log(\"Service 변환 후:\", {\n          title: property.title,\n          price: property.price,\n          type: typeof property.price,\n        });\n      }\n\n      return property;\n    });\n\n    // 매물 상태 필터링 로직 완전 삭제\n\n    return transformedData;\n  } catch (error) {\n    console.error(\"💥 getProperties 전체 에러:\", error);\n    console.error(\"💥 에러 타입:\", typeof error);\n    console.error(\n      \"💥 에러 정보:\",\n      error instanceof Error\n        ? { name: error.name, message: error.message, stack: error.stack }\n        : error,\n    );\n    throw error;\n  }\n};\n\n// 매물 상세 조회\nexport const getProperty = async (propertyId: string, tenantId: string) => {\n  try {\n    const { data, error } = await supabase\n      .from(\"properties\")\n      .select(\n        `\n        *,\n        landlord:user_profiles!properties_landlord_id_fkey(\n          id,\n          name,\n          phone,\n          email\n        )\n      `,\n      )\n      .eq(\"id\", propertyId)\n      .eq(\"tenant_id\", tenantId)\n      .single();\n\n    if (error) {\n      console.error(\"Error fetching property:\", error);\n      throw error;\n    }\n\n    return data;\n  } catch (error) {\n    console.error(\"Error in getProperty:\", error);\n    throw error;\n  }\n};\n\n// 매물 생성\nexport const createProperty = async (\n  propertyData: CreatePropertyData,\n  tenantId: string,\n  userId: string,\n) => {\n  // 필수 파라미터 검증\n  if (!tenantId || !userId) {\n    console.error(\"❌ 필수 파라미터 누락:\", { tenantId, userId });\n    throw new Error(ERROR_MESSAGES.MISSING_TENANT_USER);\n  }\n\n  // 필수 필드 검증\n  if (!propertyData.title || !propertyData.address) {\n    console.error(\"❌ 필수 필드 누락:\", {\n      title: propertyData.title,\n      address: propertyData.address,\n    });\n    throw new Error(ERROR_MESSAGES.MISSING_REQUIRED_FIELDS);\n  }\n\n  try {\n    // 사용자의 올바른 tenant_id 조회\n    const { data: userProfile, error: userError } = await supabase\n      .from(\"user_profiles\")\n      .select(\"tenant_id\")\n      .eq(\"id\", userId)\n      .single();\n\n    if (userError) {\n      console.error(\"❌ 사용자 정보 조회 실패:\", userError);\n      throw new Error(\"사용자 정보를 찾을 수 없습니다.\");\n    }\n\n    const actualTenantId = userProfile.tenant_id;\n    if (!actualTenantId) {\n      throw new Error(\"사용자에게 할당된 테넌트가 없습니다.\");\n    }\n    // 프론트엔드 데이터를 데이터베이스 스키마에 맞게 변환\n\n    // 임대인 정보와 기타 정보를 description에 구조화하여 저장\n    let structuredDescription = propertyData.description || \"\";\n\n    // 임대인 정보 추가\n    if (propertyData.landlord_name || propertyData.landlord_phone) {\n      const landlordInfo = [];\n      if (propertyData.landlord_name)\n        landlordInfo.push(`임대인: ${propertyData.landlord_name}`);\n      if (propertyData.landlord_phone)\n        landlordInfo.push(`연락처: ${propertyData.landlord_phone}`);\n\n      const landlordSection = `[임대인정보] ${landlordInfo.join(\" | \")}`;\n      structuredDescription =\n        landlordSection +\n        (structuredDescription ? `\\n\\n${structuredDescription}` : \"\");\n    }\n\n    // 퇴실 예정일 또는 공실 상태 추가\n    if (propertyData.exit_date) {\n      const exitInfo = `[퇴실예정] ${propertyData.exit_date}`;\n      structuredDescription =\n        (structuredDescription ? `${structuredDescription}\\n\\n` : \"\") +\n        exitInfo;\n    } else {\n      // exit_date가 없으면 공실로 처리\n      const vacantInfo = `[거주현황] 공실`;\n      structuredDescription =\n        (structuredDescription ? `${structuredDescription}\\n\\n` : \"\") +\n        vacantInfo;\n    }\n\n    // 편의시설 정보 추가\n    const facilities = [];\n    if (propertyData.parking) facilities.push(\"주차가능\");\n    if (propertyData.elevator) facilities.push(\"엘리베이터\");\n    if (facilities.length > 0) {\n      const facilityInfo = `[편의시설] ${facilities.join(\", \")}`;\n      structuredDescription =\n        (structuredDescription ? `${structuredDescription}\\n\\n` : \"\") +\n        facilityInfo;\n    }\n\n    // 상세 주소 정보 추가\n    if (propertyData.detailed_address) {\n      const addressInfo = `[상세주소] ${propertyData.detailed_address}`;\n      structuredDescription =\n        (structuredDescription ? `${structuredDescription}\\n\\n` : \"\") +\n        addressInfo;\n    }\n\n    // 매물 상태 정보 추가\n    if (propertyData.status) {\n      const statusInfo = `[상태] ${propertyData.status}`;\n      structuredDescription =\n        (structuredDescription ? `${structuredDescription}\\n\\n` : \"\") +\n        statusInfo;\n    }\n\n    // 실제 DB에 존재하는 컬럼만 사용 - 올바른 tenant_id 사용\n    const dbData = {\n      tenant_id: actualTenantId, // 사용자의 실제 tenant_id 사용\n      user_id: userId,\n      title: propertyData.title,\n      address: propertyData.address || \"\",\n      property_type: propertyData.type,\n      transaction_type: propertyData.transaction_type,\n      status: propertyData.status || \"거래중\",\n      price: propertyData.price || null,\n      deposit: propertyData.deposit || null,\n      monthly_rent: propertyData.monthly_rent || null,\n      floor_current: propertyData.floor || DEFAULT_VALUES.FLOOR,\n      floor_total: propertyData.total_floors || DEFAULT_VALUES.TOTAL_FLOORS,\n      area_exclusive: propertyData.area || DEFAULT_VALUES.AREA,\n      rooms: propertyData.rooms || DEFAULT_VALUES.ROOMS,\n      bathrooms: propertyData.bathrooms || DEFAULT_VALUES.BATHROOMS,\n      description: structuredDescription || null,\n    };\n\n    // 개발 환경에서 DB 저장 데이터 확인\n    if (import.meta.env.DEV && dbData.transaction_type === \"매매\") {\n      console.log(\"Service DB 저장:\", {\n        title: dbData.title,\n        price: dbData.price,\n        type: typeof dbData.price,\n      });\n    }\n\n    const { data, error } = await supabase\n      .from(\"properties\")\n      .insert(dbData)\n      .select(\"*\")\n      .single();\n\n    if (error) {\n      console.error(\"❌ 매물 생성 실패:\", error);\n      console.error(\"❌ 에러 코드:\", error.code);\n      console.error(\"❌ 에러 메시지:\", error.message);\n      console.error(\"❌ 에러 세부사항:\", error.details);\n      console.error(\"❌ 에러 힌트:\", error.hint);\n      throw new Error(`${ERROR_MESSAGES.DATABASE_ERROR}: ${error.message}`);\n    }\n\n    // 개발 환경에서 DB 저장 결과 확인\n    if (import.meta.env.DEV && data.transaction_type === \"매매\") {\n      console.log(\"Service DB 결과:\", {\n        title: data.title,\n        price: data.price,\n        type: typeof data.price,\n      });\n    }\n\n    const parsedInfo = parseStructuredDescription(data.description);\n    const transformedData = transformDbRowToProperty(\n      data as PropertyDbRow,\n      parsedInfo,\n    );\n    // 매물 상태 관련 코드 완전 삭제\n    transformedData.updated_at = data.updated_at;\n\n    // 개발 환경에서 최종 결과 확인\n    if (import.meta.env.DEV && transformedData.transaction_type === \"매매\") {\n      console.log(\"Service 최종 결과:\", {\n        title: transformedData.title,\n        price: transformedData.price,\n        type: typeof transformedData.price,\n      });\n    }\n\n    return transformedData;\n  } catch (error) {\n    console.error(\"Error in createProperty:\", error);\n    throw error;\n  }\n};\n\n// 매물 수정\nexport const updateProperty = async (\n  propertyId: string,\n  propertyData: UpdatePropertyData,\n  userId: string,\n) => {\n  try {\n    // 사용자의 올바른 tenant_id 조회\n    const { data: userProfile, error: userError } = await supabase\n      .from(\"user_profiles\")\n      .select(\"tenant_id\")\n      .eq(\"id\", userId)\n      .single();\n\n    if (userError) {\n      console.error(\"❌ 사용자 정보 조회 실패:\", userError);\n      throw new Error(\"사용자 정보를 찾을 수 없습니다.\");\n    }\n\n    const actualTenantId = userProfile.tenant_id;\n    if (!actualTenantId) {\n      throw new Error(\"사용자에게 할당된 테넌트가 없습니다.\");\n    }\n\n    // 기존 데이터 조회 (실제 tenant_id 사용)\n    const { data: existingData } = await supabase\n      .from(\"properties\")\n      .select(\"description\")\n      .eq(\"id\", propertyId)\n      .eq(\"tenant_id\", actualTenantId) // 정확한 tenant_id로 필터링\n      .single();\n\n    // 기존 description에서 정보 파싱\n    const parseExistingInfo = (desc: string | null) => {\n      if (!desc) return { cleanDescription: \"\" };\n\n      let cleanDescription = desc;\n\n      // 기존 구조화된 정보들 제거\n      cleanDescription = cleanDescription\n        .replace(/\\[임대인정보\\][^\\n\\[]*/, \"\")\n        .trim();\n      cleanDescription = cleanDescription\n        .replace(/\\[퇴실예정\\][^\\n\\[]*/, \"\")\n        .trim();\n      cleanDescription = cleanDescription\n        .replace(/\\[편의시설\\][^\\n\\[]*/, \"\")\n        .trim();\n      cleanDescription = cleanDescription\n        .replace(/\\[상세주소\\][^\\n\\[]*/, \"\")\n        .trim();\n      cleanDescription = cleanDescription\n        .replace(/\\[상태\\][^\\n\\[]*/, \"\")\n        .trim();\n      cleanDescription = cleanDescription.replace(/\\n\\s*\\n/g, \"\\n\").trim();\n\n      return { cleanDescription };\n    };\n\n    const existingInfo = parseExistingInfo(existingData?.description);\n\n    // 새로운 구조화된 description 생성\n    let newStructuredDescription =\n      propertyData.description !== undefined\n        ? propertyData.description\n        : existingInfo.cleanDescription;\n\n    // 임대인 정보 추가\n    if (propertyData.landlord_name || propertyData.landlord_phone) {\n      const landlordInfo = [];\n      if (propertyData.landlord_name)\n        landlordInfo.push(`임대인: ${propertyData.landlord_name}`);\n      if (propertyData.landlord_phone)\n        landlordInfo.push(`연락처: ${propertyData.landlord_phone}`);\n\n      const landlordSection = `[임대인정보] ${landlordInfo.join(\" | \")}`;\n      newStructuredDescription =\n        landlordSection +\n        (newStructuredDescription ? `\\n\\n${newStructuredDescription}` : \"\");\n    }\n\n    // 퇴실 예정일 추가\n    if (propertyData.exit_date) {\n      const exitInfo = `[퇴실예정] ${propertyData.exit_date}`;\n      newStructuredDescription =\n        (newStructuredDescription ? `${newStructuredDescription}\\n\\n` : \"\") +\n        exitInfo;\n    }\n\n    // 편의시설 정보 추가\n    const facilities = [];\n    if (propertyData.parking) facilities.push(\"주차가능\");\n    if (propertyData.elevator) facilities.push(\"엘리베이터\");\n    if (facilities.length > 0) {\n      const facilityInfo = `[편의시설] ${facilities.join(\", \")}`;\n      newStructuredDescription =\n        (newStructuredDescription ? `${newStructuredDescription}\\n\\n` : \"\") +\n        facilityInfo;\n    }\n\n    // 상세 주소 정보 추가\n    if (propertyData.detailed_address) {\n      const addressInfo = `[상세주소] ${propertyData.detailed_address}`;\n      newStructuredDescription =\n        (newStructuredDescription ? `${newStructuredDescription}\\n\\n` : \"\") +\n        addressInfo;\n    }\n\n    // 매물 상태 정보 추가\n    if (propertyData.status) {\n      const statusInfo = `[상태] ${propertyData.status}`;\n      newStructuredDescription =\n        (newStructuredDescription ? `${newStructuredDescription}\\n\\n` : \"\") +\n        statusInfo;\n\n      // 개발 환경에서 상태 저장 확인\n      if (import.meta.env.DEV) {\n        console.log(\"🔄 매물 수정 - 상태 저장:\", {\n          매물ID: propertyId,\n          상태: propertyData.status,\n          구조화된설명: newStructuredDescription,\n        });\n      }\n    }\n\n    // 프론트엔드 데이터를 데이터베이스 스키마에 맞게 변환\n    interface DatabasePropertyData {\n      [key: string]: string | number | boolean | null | undefined;\n      title?: string;\n      property_type?: string;\n      transaction_type?: string;\n      status?: string;\n      address?: string;\n      area_exclusive?: number;\n      floor_current?: number;\n      floor_total?: number;\n      rooms?: number;\n      bathrooms?: number;\n      price?: number;\n      deposit?: number;\n    }\n\n    const dbData: DatabasePropertyData = {};\n\n    // 기본 필드들만 DB에 저장\n    if (propertyData.title !== undefined) dbData.title = propertyData.title;\n    if (propertyData.type !== undefined)\n      dbData.property_type = propertyData.type;\n    if (propertyData.transaction_type !== undefined)\n      dbData.transaction_type = propertyData.transaction_type;\n    if (propertyData.status !== undefined) dbData.status = propertyData.status;\n    if (propertyData.address !== undefined)\n      dbData.address = propertyData.address;\n    if (propertyData.area !== undefined)\n      dbData.area_exclusive = propertyData.area;\n    if (propertyData.floor !== undefined)\n      dbData.floor_current = propertyData.floor;\n    if (propertyData.total_floors !== undefined)\n      dbData.floor_total = propertyData.total_floors;\n    if (propertyData.rooms !== undefined) dbData.rooms = propertyData.rooms;\n    if (propertyData.bathrooms !== undefined)\n      dbData.bathrooms = propertyData.bathrooms;\n    if (propertyData.price !== undefined) dbData.price = propertyData.price;\n    if (propertyData.deposit !== undefined)\n      dbData.deposit = propertyData.deposit;\n    if (propertyData.monthly_rent !== undefined)\n      dbData.monthly_rent = propertyData.monthly_rent;\n\n    // 구조화된 description 저장\n    dbData.description = newStructuredDescription || null;\n\n    const { data, error } = await supabase\n      .from(\"properties\")\n      .update(dbData)\n      .eq(\"id\", propertyId)\n      .eq(\"tenant_id\", actualTenantId) // 정확한 tenant_id로 필터링\n      .select()\n      .single();\n\n    if (error) {\n      console.error(\"❌ 매물 수정 실패:\", error);\n      throw new Error(`데이터베이스 오류: ${error.message}`);\n    }\n\n    // description에서 구조화된 정보 파싱\n    const parseStructuredDescription = (desc: string | null) => {\n      if (!desc)\n        return {\n          landlord_name: undefined,\n          landlord_phone: undefined,\n          exit_date: undefined,\n          detailed_address: undefined,\n          parking: false,\n          elevator: false,\n          status: undefined,\n          cleanDescription: \"\",\n        };\n\n      let cleanDescription = desc;\n      let landlord_name, landlord_phone, exit_date, detailed_address, status;\n      let parking = false,\n        elevator = false;\n\n      // 임대인 정보 파싱\n      const landlordMatch = desc.match(/\\[임대인정보\\]\\s*([^\\n\\[]+)/);\n      if (landlordMatch) {\n        const landlordText = landlordMatch[1];\n        const nameMatch = landlordText.match(/임대인:\\s*([^|]+)/);\n        const phoneMatch = landlordText.match(/연락처:\\s*([^|]+)/);\n\n        if (nameMatch) landlord_name = nameMatch[1].trim();\n        if (phoneMatch) landlord_phone = phoneMatch[1].trim();\n\n        cleanDescription = cleanDescription\n          .replace(landlordMatch[0], \"\")\n          .trim();\n      }\n\n      // 퇴실 예정일 파싱\n      const exitMatch = desc.match(/\\[퇴실예정\\]\\s*([^\\n\\[]+)/);\n      if (exitMatch) {\n        exit_date = exitMatch[1].trim();\n        cleanDescription = cleanDescription.replace(exitMatch[0], \"\").trim();\n      }\n\n      // 편의시설 파싱\n      const facilityMatch = desc.match(/\\[편의시설\\]\\s*([^\\n\\[]+)/);\n      if (facilityMatch) {\n        const facilityText = facilityMatch[1];\n        parking = facilityText.includes(\"주차가능\");\n        elevator = facilityText.includes(\"엘리베이터\");\n        cleanDescription = cleanDescription\n          .replace(facilityMatch[0], \"\")\n          .trim();\n      }\n\n      // 상세주소 파싱\n      const addressMatch = desc.match(/\\[상세주소\\]\\s*([^\\n\\[]+)/);\n      if (addressMatch) {\n        detailed_address = addressMatch[1].trim();\n        cleanDescription = cleanDescription.replace(addressMatch[0], \"\").trim();\n      }\n\n      // 상태 정보 파싱\n      const statusMatch = desc.match(/\\[상태\\]\\s*([^\\n\\[]+)/);\n      if (statusMatch) {\n        status = statusMatch[1].trim();\n        cleanDescription = cleanDescription.replace(statusMatch[0], \"\").trim();\n      }\n\n      // 연속된 줄바꿈 정리\n      cleanDescription = cleanDescription.replace(/\\n\\s*\\n/g, \"\\n\").trim();\n\n      return {\n        landlord_name,\n        landlord_phone,\n        exit_date,\n        detailed_address,\n        parking,\n        elevator,\n        status,\n        cleanDescription,\n      };\n    };\n\n    const parsedInfo = parseStructuredDescription(data.description);\n\n    // 프론트엔드 타입에 맞게 변환하여 반환\n    const transformedData = {\n      id: data.id,\n      tenant_id: data.tenant_id,\n      created_by: data.user_id,\n      title: data.title,\n      type: data.property_type,\n      transaction_type: data.transaction_type,\n      address: data.address,\n      detailed_address: parsedInfo.detailed_address,\n      area: data.area_exclusive,\n      floor: data.floor_current,\n      total_floors: data.floor_total,\n      rooms: data.rooms,\n      bathrooms: data.bathrooms,\n      price: data.price ? parseFloat(data.price) : undefined,\n      deposit: data.deposit ? parseFloat(data.deposit) : undefined,\n      monthly_rent: data.monthly_rent\n        ? parseFloat(data.monthly_rent)\n        : undefined,\n      description: parsedInfo.cleanDescription || data.description,\n      // description에서 파싱된 임대인 정보 사용\n      landlord_name: parsedInfo.landlord_name,\n      landlord_phone: parsedInfo.landlord_phone,\n      exit_date: parsedInfo.exit_date,\n      parking: parsedInfo.parking,\n      elevator: parsedInfo.elevator,\n      images: [],\n      is_featured: false,\n      view_count: 0,\n      created_at: data.created_at,\n      updated_at: data.updated_at,\n      status: data.status || propertyData.status || \"거래중\",\n      options: [],\n      inquiry_count: 0,\n      is_urgent: false,\n      is_favorite: false,\n    };\n\n    return transformedData;\n  } catch (error) {\n    console.error(\"💥 updateProperty 전체 에러:\", error);\n    throw error;\n  }\n};\n\n// 매물 삭제\nexport const deleteProperty = async (propertyId: string, userId: string) => {\n  try {\n    // 사용자의 올바른 tenant_id 조회\n    const { data: userProfile, error: userError } = await supabase\n      .from(\"user_profiles\")\n      .select(\"tenant_id\")\n      .eq(\"id\", userId)\n      .single();\n\n    if (userError) {\n      console.error(\"❌ 사용자 정보 조회 실패:\", userError);\n      throw new Error(\"사용자 정보를 찾을 수 없습니다.\");\n    }\n\n    const actualTenantId = userProfile.tenant_id;\n    if (!actualTenantId) {\n      throw new Error(\"사용자에게 할당된 테넌트가 없습니다.\");\n    }\n\n    // 데이터베이스에서 삭제 (실제 tenant_id 사용)\n    const { error } = await supabase\n      .from(\"properties\")\n      .delete()\n      .eq(\"id\", propertyId)\n      .eq(\"tenant_id\", actualTenantId); // 정확한 tenant_id로 필터링\n\n    if (error) {\n      console.error(\"❌ 매물 삭제 실패:\", error);\n      throw new Error(`데이터베이스 오류: ${error.message}`);\n    }\n\n    return true;\n  } catch (error) {\n    console.error(\"💥 deleteProperty 전체 에러:\", error);\n    throw error;\n  }\n};\n\n// 매물 통계 조회 (사용자별 개별 관리)\nexport const getPropertyStats = async (userId: string) => {\n  try {\n    // 사용자의 올바른 tenant_id 조회\n    const { data: userProfile, error: userError } = await supabase\n      .from(\"user_profiles\")\n      .select(\"tenant_id\")\n      .eq(\"id\", userId)\n      .single();\n\n    if (userError) {\n      console.error(\"❌ 사용자 정보 조회 실패:\", userError);\n      throw new Error(\"사용자 정보를 찾을 수 없습니다.\");\n    }\n\n    const actualTenantId = userProfile.tenant_id;\n    if (!actualTenantId) {\n      throw new Error(\"사용자에게 할당된 테넌트가 없습니다.\");\n    }\n\n    const { data, error } = await supabase\n      .from(\"properties\")\n      .select(\"transaction_type, created_at, status\")\n      .eq(\"tenant_id\", actualTenantId); // 정확한 tenant_id로 필터링\n\n    if (error) {\n      console.error(\"❌ 매물 통계 조회 실패:\", error);\n      throw error;\n    }\n\n    // 완료된 매물 수 계산 (거래완료 상태)\n    const completedCount = data.filter((p) => p.status === \"거래완료\").length;\n    \n    const stats = {\n      total: data.length,\n      active: data.length - completedCount, // 총 매물 - 완료 매물\n      reserved: 0,\n      sold: completedCount, // 거래완료 매물 수\n      this_month: data.filter((p) => {\n        const created = new Date(p.created_at);\n        const now = new Date();\n        return (\n          created.getMonth() === now.getMonth() &&\n          created.getFullYear() === now.getFullYear()\n        );\n      }).length,\n      by_transaction_type: {\n        sale: data.filter((p) => p.transaction_type === \"매매\").length,\n        jeonse: data.filter((p) => p.transaction_type === \"전세\").length,\n        monthly: data.filter((p) => p.transaction_type === \"월세\").length,\n      },\n    };\n\n    return stats;\n  } catch (error) {\n    console.error(\"Error in getPropertyStats:\", error);\n    throw error;\n  }\n};\n\n// 매물 즐겨찾기 토글\nexport const togglePropertyFavorite = async (\n  propertyId: string,\n  userId: string,\n) => {\n  try {\n    // 사용자의 올바른 tenant_id 조회\n    const { data: userProfile, error: userError } = await supabase\n      .from(\"user_profiles\")\n      .select(\"tenant_id\")\n      .eq(\"id\", userId)\n      .single();\n\n    if (userError) {\n      console.error(\"❌ 사용자 정보 조회 실패:\", userError);\n      throw new Error(\"사용자 정보를 찾을 수 없습니다.\");\n    }\n\n    const actualTenantId = userProfile.tenant_id;\n    if (!actualTenantId) {\n      throw new Error(\"사용자에게 할당된 테넌트가 없습니다.\");\n    }\n\n    // 현재 즐겨찾기 상태 조회 (실제 tenant_id 사용)\n    const { data: currentProperty } = await supabase\n      .from(\"properties\")\n      .select(\"is_favorite\")\n      .eq(\"id\", propertyId)\n      .eq(\"tenant_id\", actualTenantId) // 정확한 tenant_id로 필터링\n      .single();\n\n    if (!currentProperty) {\n      throw new Error(ERROR_MESSAGES.PROPERTY_NOT_FOUND);\n    }\n\n    // 즐겨찾기 상태 토글 (실제 tenant_id 사용)\n    const { data, error } = await supabase\n      .from(\"properties\")\n      .update({ is_favorite: !currentProperty.is_favorite })\n      .eq(\"id\", propertyId)\n      .eq(\"tenant_id\", actualTenantId) // 정확한 tenant_id로 필터링\n      .select()\n      .single();\n\n    if (error) {\n      console.error(\"Error toggling property favorite:\", error);\n      throw error;\n    }\n\n    return data;\n  } catch (error) {\n    console.error(\"Error in togglePropertyFavorite:\", error);\n    throw error;\n  }\n};\n","// ============================================================================\n// Supabase 클라이언트 설정 (멀티테넌트 지원)\n// ============================================================================\n\nimport { createClient } from \"@supabase/supabase-js\";\nimport type { Database } from \"@/types/database\";\nimport { logger } from \"@/utils/logger\";\n\nconst supabaseUrl = import.meta.env.VITE_SUPABASE_URL;\nconst supabaseAnonKey = import.meta.env.VITE_SUPABASE_ANON_KEY;\n\nif (!supabaseUrl || !supabaseAnonKey) {\n  throw new Error(\n    \"Supabase URL과 Anon Key가 환경변수에 설정되어 있지 않습니다.\\n\" +\n      \"VITE_SUPABASE_URL과 VITE_SUPABASE_ANON_KEY를 .env 파일에 추가해주세요.\",\n  );\n}\n\n// Supabase 클라이언트 생성\nexport const supabase = createClient<Database>(supabaseUrl, supabaseAnonKey, {\n  auth: {\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true,\n    storageKey: \"propertydesk-auth\",\n  },\n  global: {\n    headers: {\n      \"X-Client\": \"PropertyDesk-SaaS\",\n    },\n  },\n});\n\n// 멀티테넌트 지원을 위한 RLS 컨텍스트 설정\nexport const setTenantContext = async (tenantId: string) => {\n  const { error } = await supabase.rpc(\"set_current_tenant_id\", {\n    tenant_id: tenantId,\n  });\n\n  if (error) {\n    console.error(\"테넌트 컨텍스트 설정 실패:\", error);\n    throw error;\n  }\n};\n\n// 현재 테넌트 컨텍스트 해제\nexport const clearTenantContext = async () => {\n  const { error } = await supabase.rpc(\"clear_current_tenant_id\");\n\n  if (error) {\n    console.error(\"테넌트 컨텍스트 해제 실패:\", error);\n    throw error;\n  }\n};\n\n// 테넌트별 실시간 구독 설정\nexport const createTenantChannel = (tenantId: string, table: string) => {\n  return supabase.channel(`tenant-${tenantId}-${table}`).on(\n    \"postgres_changes\",\n    {\n      event: \"*\",\n      schema: \"public\",\n      table,\n      filter: `tenant_id=eq.${tenantId}`,\n    },\n    (payload) => {\n      logger.info(\"실시간 데이터 변경:\", payload);\n    },\n  );\n};\n\n// 파일 업로드 헬퍼 (테넌트별 폴더 구조)\nexport const uploadFile = async (\n  file: File,\n  bucket: string,\n  path: string,\n  tenantId: string,\n) => {\n  const fileExt = file.name.split(\".\").pop();\n  const fileName = `${Date.now()}-${Math.random().toString(36).substring(2)}.${fileExt}`;\n  const filePath = `${tenantId}/${path}/${fileName}`;\n\n  const { data, error } = await supabase.storage\n    .from(bucket)\n    .upload(filePath, file, {\n      cacheControl: \"3600\",\n      upsert: false,\n    });\n\n  if (error) {\n    throw error;\n  }\n\n  // 공개 URL 생성\n  const {\n    data: { publicUrl },\n  } = supabase.storage.from(bucket).getPublicUrl(filePath);\n\n  return {\n    path: data.path,\n    url: publicUrl,\n    fileName,\n  };\n};\n\n// 에러 핸들링 헬퍼\nexport const handleSupabaseError = (error: any) => {\n  console.error(\"Supabase 에러:\", error);\n\n  // 일반적인 에러 메시지 변환\n  const errorMessages: Record<string, string> = {\n    \"Invalid login credentials\": \"이메일 또는 비밀번호가 올바르지 않습니다.\",\n    \"Email not confirmed\": \"이메일 인증이 필요합니다.\",\n    \"User already registered\": \"이미 등록된 이메일 주소입니다.\",\n    \"Password should be at least 6 characters\":\n      \"비밀번호는 최소 6자 이상이어야 합니다.\",\n    \"Unable to validate email address\": \"유효하지 않은 이메일 주소입니다.\",\n    \"duplicate key value\": \"중복된 데이터입니다.\",\n    \"foreign key constraint\": \"참조된 데이터가 존재하지 않습니다.\",\n  };\n\n  const message =\n    errorMessages[error.message] ||\n    error.message ||\n    \"알 수 없는 오류가 발생했습니다.\";\n\n  return {\n    code: error.code || \"UNKNOWN_ERROR\",\n    message,\n    details: error.details || error.hint,\n  };\n};\n\n// 헬스 체크\nexport const checkSupabaseHealth = async () => {\n  try {\n    const { error } = await supabase\n      .from(\"tenants\")\n      .select(\"id\")\n      .limit(1)\n      .single();\n\n    return {\n      status: \"healthy\" as const,\n      database: !error,\n      timestamp: new Date().toISOString(),\n    };\n  } catch (error) {\n    return {\n      status: \"unhealthy\" as const,\n      database: false,\n      error: handleSupabaseError(error),\n      timestamp: new Date().toISOString(),\n    };\n  }\n};\n","// ============================================================================\n// Service Error Handling Utilities\n// ============================================================================\n\nimport type { ApiError } from \"@/types/api\";\nimport { logger } from \"./logger\";\n\nexport class ServiceError extends Error {\n  public readonly code: string;\n  public readonly field?: string;\n  public readonly details?: Record<string, any>;\n\n  constructor(error: ApiError | string, context?: any) {\n    if (typeof error === \"string\") {\n      super(error);\n      this.code = \"UNKNOWN_ERROR\";\n    } else {\n      super(error.message);\n      this.code = error.code;\n      this.field = error.field || undefined;\n      this.details = error.details || undefined;\n    }\n\n    this.name = \"ServiceError\";\n\n    if (context) {\n      logger.error(\"ServiceError occurred:\", {\n        code: this.code,\n        message: this.message,\n        field: this.field,\n        context,\n      });\n    }\n  }\n}\n\nexport const createServiceError = (\n  code: string,\n  message: string,\n  field?: string,\n) => {\n  return new ServiceError({\n    code,\n    message,\n    ...(field && { field }),\n  });\n};\n\nexport const handleSupabaseError = (error: any, context?: string) => {\n  logger.error(`Supabase error${context ? ` in ${context}` : \"\"}:`, error);\n\n  if (error.code) {\n    return new ServiceError({\n      code: error.code,\n      message: error.message || \"Database operation failed\",\n      details: error.details,\n    });\n  }\n\n  return new ServiceError(\n    \"DATABASE_ERROR\",\n    error.message || \"An unknown database error occurred\",\n  );\n};\n\nexport const isServiceError = (error: any): error is ServiceError => {\n  return error instanceof ServiceError;\n};\n","// ============================================================================\n// 스케줄 관리 서비스\n// ============================================================================\n\nimport { supabase } from \"@/lib/supabase\";\nimport { Schedule, ScheduleFormData, ScheduleFilters } from \"@/types/schedule\";\nimport { ServiceError } from \"@/utils/serviceError\";\n\nclass ScheduleService {\n  /**\n   * 모든 스케줄 조회 (필터 적용)\n   */\n  async getSchedules(\n    tenantId: string,\n    filters?: ScheduleFilters\n  ): Promise<Schedule[]> {\n    try {\n      let query = supabase\n        .from(\"schedules\")\n        .select(\"*\")\n        .eq(\"tenant_id\", tenantId)\n        .order(\"start_date\", { ascending: true });\n\n      // 필터 적용\n      if (filters) {\n        if (filters.category) {\n          query = query.eq(\"category\", filters.category);\n        }\n        \n        if (filters.priority) {\n          query = query.eq(\"priority\", filters.priority);\n        }\n\n        if (filters.status) {\n          query = query.eq(\"status\", filters.status);\n        }\n\n        if (filters.date_range) {\n          query = query\n            .gte(\"start_date\", filters.date_range.start)\n            .lte(\"end_date\", filters.date_range.end);\n        }\n\n        if (filters.created_by) {\n          query = query.eq(\"created_by\", filters.created_by);\n        }\n      }\n\n      const { data, error } = await query;\n\n      if (error) {\n        throw new ServiceError({\n          code: \"SCHEDULE_FETCH_ERROR\",\n          message: \"스케줄 목록을 불러오는 중 오류가 발생했습니다.\",\n          details: error as Record<string, any>\n        });\n      }\n\n      return data || [];\n    } catch (error) {\n      if (error instanceof ServiceError) throw error;\n      \n      throw new ServiceError({\n        code: \"SCHEDULE_FETCH_UNEXPECTED_ERROR\",\n        message: \"스케줄 목록을 불러오는 중 예상치 못한 오류가 발생했습니다.\",\n        details: error as Record<string, any>\n      });\n    }\n  }\n\n  /**\n   * 특정 기간의 스케줄 조회\n   */\n  async getSchedulesByDateRange(\n    tenantId: string,\n    startDate: string,\n    endDate: string\n  ): Promise<Schedule[]> {\n    return this.getSchedules(tenantId, {\n      date_range: { start: startDate, end: endDate }\n    });\n  }\n\n  /**\n   * 특정 날짜의 스케줄 조회\n   */\n  async getSchedulesByDate(tenantId: string, date: string): Promise<Schedule[]> {\n    const startOfDay = new Date(date);\n    startOfDay.setHours(0, 0, 0, 0);\n    \n    const endOfDay = new Date(date);\n    endOfDay.setHours(23, 59, 59, 999);\n\n    return this.getSchedulesByDateRange(\n      tenantId,\n      startOfDay.toISOString(),\n      endOfDay.toISOString()\n    );\n  }\n\n  /**\n   * 단일 스케줄 조회\n   */\n  async getSchedule(id: string): Promise<Schedule | null> {\n    try {\n      const { data, error } = await supabase\n        .from(\"schedules\")\n        .select(\"*\")\n        .eq(\"id\", id)\n        .single();\n\n      if (error) {\n        if (error.code === \"PGRST116\") {\n          return null;\n        }\n        throw new ServiceError({\n          code: \"SCHEDULE_GET_ERROR\",\n          message: \"스케줄을 불러오는 중 오류가 발생했습니다.\",\n          details: error as Record<string, any>\n        });\n      }\n\n      return data;\n    } catch (error) {\n      if (error instanceof ServiceError) throw error;\n      \n      throw new ServiceError({\n        code: \"SCHEDULE_GET_UNEXPECTED_ERROR\",\n        message: \"스케줄을 불러오는 중 예상치 못한 오류가 발생했습니다.\",\n        details: error as Record<string, any>\n      });\n    }\n  }\n\n  /**\n   * 스케줄 생성\n   */\n  async createSchedule(\n    tenantId: string,\n    userId: string,\n    formData: ScheduleFormData\n  ): Promise<Schedule> {\n    try {\n      console.log(\"🔄 scheduleService.createSchedule 시작:\", {\n        tenantId,\n        userId,\n        formData\n      });\n\n      // UUID 필드 처리: 빈 문자열은 undefined로 변환 (DB에서는 NULL)\n      const cleanedFormData = { ...formData };\n      \n      // property_id가 빈 문자열이거나 undefined이면 제거 (DB에서 NULL로 처리됨)\n      if (!cleanedFormData.property_id || cleanedFormData.property_id.trim() === '') {\n        delete cleanedFormData.property_id;\n      }\n      \n      // attendees가 빈 배열이면 제거 (DB에서 NULL로 처리됨)\n      if (Array.isArray(cleanedFormData.attendees) && cleanedFormData.attendees.length === 0) {\n        delete cleanedFormData.attendees;\n      }\n\n      const scheduleData = {\n        ...cleanedFormData,\n        tenant_id: tenantId,\n        created_by: userId,\n        status: \"scheduled\" as const,\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString(),\n      };\n\n      console.log(\"📝 Supabase에 삽입할 데이터:\", scheduleData);\n\n      // RLS 디버깅을 위한 현재 사용자 확인\n      const { data: { user: currentAuthUser } } = await supabase.auth.getUser();\n      console.log(\"🔐 현재 인증된 사용자 (RLS 확인):\", {\n        userId: currentAuthUser?.id,\n        email: currentAuthUser?.email,\n        tenant_id_in_data: scheduleData.tenant_id,\n        created_by_in_data: scheduleData.created_by,\n        match_tenant: scheduleData.tenant_id === currentAuthUser?.id,\n        match_created_by: scheduleData.created_by === currentAuthUser?.id\n      });\n\n      const { data, error } = await supabase\n        .from(\"schedules\")\n        .insert([scheduleData])\n        .select()\n        .single();\n\n      console.log(\"📊 Supabase 응답:\", { data, error });\n\n      if (error) {\n        console.error(\"❌ Supabase 삽입 오류:\", error);\n        throw new ServiceError({\n          code: \"SCHEDULE_CREATE_ERROR\",\n          message: `스케줄 등록 중 오류가 발생했습니다: ${error.message}`,\n          details: error as Record<string, any>\n        });\n      }\n\n      console.log(\"✅ 스케줄 생성 성공:\", data);\n      return data;\n    } catch (error) {\n      console.error(\"❌ scheduleService.createSchedule 오류:\", error);\n      \n      if (error instanceof ServiceError) throw error;\n      \n      throw new ServiceError({\n        code: \"SCHEDULE_CREATE_UNEXPECTED_ERROR\",\n        message: \"스케줄 등록 중 예상치 못한 오류가 발생했습니다.\",\n        details: error as Record<string, any>\n      });\n    }\n  }\n\n  /**\n   * 스케줄 업데이트 - 권한 검사 포함\n   */\n  async updateSchedule(\n    id: string,\n    updates: Partial<ScheduleFormData>,\n    currentUserId?: string // 옵션: 현재 사용자 ID 전달받기\n  ): Promise<Schedule> {\n    try {\n      console.log(\"🔄 스케줄 수정 시작:\", { id, updates });\n\n      // 1. 현재 사용자 확인 - 전달받은 userId 사용 또는 Supabase에서 확인\n      let userId: string;\n      \n      if (currentUserId) {\n        console.log(\"🔐 전달받은 사용자 ID 사용:\", currentUserId);\n        userId = currentUserId;\n      } else {\n        console.log(\"🔐 Supabase에서 현재 사용자 확인 중...\");\n        const { data: { user: currentUser }, error: userError } = await supabase.auth.getUser();\n        console.log(\"🔐 Supabase 인증 상태:\", {\n          hasUser: !!currentUser,\n          userId: currentUser?.id,\n          email: currentUser?.email,\n          userError: userError\n        });\n        \n        if (userError || !currentUser) {\n          console.error(\"❌ Supabase 인증 실패:\", userError);\n          throw new ServiceError({\n            code: \"SCHEDULE_UPDATE_AUTH_ERROR\",\n            message: \"인증이 필요합니다.\",\n            details: userError as Record<string, any>\n          });\n        }\n        \n        userId = currentUser.id;\n      }\n\n      // 2. 기존 스케줄 확인 및 권한 검사 (본인 것만 조회)\n      const { data: existingSchedule, error: fetchError } = await supabase\n        .from(\"schedules\")\n        .select(\"*\")\n        .eq(\"id\", id)\n        .eq(\"created_by\", userId) // 추가 보안: 본인 것만 조회\n        .eq(\"tenant_id\", userId)  // 추가 보안: 본인 테넌트 데이터만 조회\n        .single();\n\n      console.log(\"📊 기존 스케줄 조회 결과:\", {\n        hasData: !!existingSchedule,\n        fetchError,\n        scheduleId: id,\n        queryFilters: {\n          id,\n          created_by: userId,\n          tenant_id: userId\n        }\n      });\n\n      if (fetchError || !existingSchedule) {\n        console.error(\"❌ 스케줄 조회 실패:\", fetchError);\n        throw new ServiceError({\n          code: \"SCHEDULE_NOT_FOUND\",\n          message: \"수정할 스케줄을 찾을 수 없거나 권한이 없습니다.\",\n          details: fetchError as Record<string, any>\n        });\n      }\n\n      // 3. 권한 확인은 이미 쿼리에서 처리됨 (이중 확인)\n      if (existingSchedule.created_by !== userId || existingSchedule.tenant_id !== userId) {\n        console.error(\"❌ 권한 확인 실패:\", {\n          scheduleCreatedBy: existingSchedule.created_by,\n          scheduleTenantId: existingSchedule.tenant_id,\n          currentUserId: userId\n        });\n        throw new ServiceError({\n          code: \"SCHEDULE_UPDATE_PERMISSION_ERROR\",\n          message: \"이 스케줄을 수정할 권한이 없습니다.\",\n          details: { scheduleCreatedBy: existingSchedule.created_by, currentUserId: userId }\n        });\n      }\n\n      // 4. 업데이트 데이터 정리 (UUID 필드 처리)\n      const cleanedUpdates = { ...updates };\n      \n      // property_id가 빈 문자열이면 제거\n      if (cleanedUpdates.property_id !== undefined && (!cleanedUpdates.property_id || cleanedUpdates.property_id.trim() === '')) {\n        delete cleanedUpdates.property_id;\n      }\n      \n      // attendees가 빈 배열이면 제거\n      if (Array.isArray(cleanedUpdates.attendees) && cleanedUpdates.attendees.length === 0) {\n        delete cleanedUpdates.attendees;\n      }\n\n      const updateData = {\n        ...cleanedUpdates,\n        updated_at: new Date().toISOString(),\n      };\n\n      const { data, error } = await supabase\n        .from(\"schedules\")\n        .update(updateData)\n        .eq(\"id\", id)\n        .eq(\"created_by\", userId) // 추가 보안: 본인 데이터만 수정\n        .eq(\"tenant_id\", userId)  // 추가 보안: 본인 테넌트 데이터만 수정\n        .select()\n        .single();\n\n      if (error) {\n        throw new ServiceError({\n          code: \"SCHEDULE_UPDATE_ERROR\",\n          message: \"스케줄 수정 중 오류가 발생했습니다.\",\n          details: error as Record<string, any>\n        });\n      }\n\n      console.log(\"✅ 스케줄 수정 완료:\", data);\n      return data;\n    } catch (error) {\n      if (error instanceof ServiceError) throw error;\n      \n      throw new ServiceError({\n        code: \"SCHEDULE_UPDATE_UNEXPECTED_ERROR\",\n        message: \"스케줄 수정 중 예상치 못한 오류가 발생했습니다.\",\n        details: error as Record<string, any>\n      });\n    }\n  }\n\n  /**\n   * 스케줄 상태 변경\n   */\n  async updateScheduleStatus(\n    id: string,\n    status: Schedule[\"status\"]\n  ): Promise<Schedule> {\n    return this.updateSchedule(id, { status } as any);\n  }\n\n  /**\n   * 스케줄 삭제 - 권한 검사 포함\n   */\n  async deleteSchedule(id: string, currentUserId?: string): Promise<void> {\n    try {\n      console.log(\"🗑️ 스케줄 삭제 시작:\", { id });\n\n      // 1. 현재 사용자 확인 - 전달받은 userId 사용 또는 Supabase에서 확인\n      let userId: string;\n      \n      if (currentUserId) {\n        console.log(\"🔐 전달받은 사용자 ID 사용 (삭제):\", currentUserId);\n        userId = currentUserId;\n      } else {\n        console.log(\"🔐 Supabase에서 현재 사용자 확인 중 (삭제)...\");\n        const { data: { user: currentUser }, error: userError } = await supabase.auth.getUser();\n        if (userError || !currentUser) {\n          console.error(\"❌ 삭제 시 인증 실패:\", userError);\n          throw new ServiceError({\n            code: \"SCHEDULE_DELETE_AUTH_ERROR\",\n            message: \"인증이 필요합니다.\",\n            details: userError as Record<string, any>\n          });\n        }\n        userId = currentUser.id;\n      }\n\n      // 2. 스케줄 삭제 (권한 확인 포함 - 본인 것만 삭제)\n      const { error } = await supabase\n        .from(\"schedules\")\n        .delete()\n        .eq(\"id\", id)\n        .eq(\"created_by\", userId) // 추가 보안: 본인 데이터만 삭제\n        .eq(\"tenant_id\", userId); // 추가 보안: 본인 테넌트 데이터만 삭제\n\n      console.log(\"🗑️ 스케줄 삭제 쿼리 실행:\", {\n        scheduleId: id,\n        userId,\n        error\n      });\n\n      if (error) {\n        throw new ServiceError({\n          code: \"SCHEDULE_DELETE_ERROR\",\n          message: \"스케줄 삭제 중 오류가 발생했습니다.\",\n          details: error as Record<string, any>\n        });\n      }\n\n      console.log(\"✅ 스케줄 삭제 완료\");\n    } catch (error) {\n      if (error instanceof ServiceError) throw error;\n      \n      throw new ServiceError({\n        code: \"SCHEDULE_DELETE_UNEXPECTED_ERROR\",\n        message: \"스케줄 삭제 중 예상치 못한 오류가 발생했습니다.\",\n        details: error as Record<string, any>\n      });\n    }\n  }\n\n  /**\n   * 당일 스케줄 조회 (대시보드용)\n   */\n  async getTodaySchedules(\n    tenantId: string,\n    limit: number = 3\n  ): Promise<Schedule[]> {\n    try {\n      const today = new Date();\n      const startOfDay = new Date(today);\n      startOfDay.setHours(0, 0, 0, 0);\n      \n      const endOfDay = new Date(today);\n      endOfDay.setHours(23, 59, 59, 999);\n\n      const { data, error } = await supabase\n        .from(\"schedules\")\n        .select(\"*\")\n        .eq(\"tenant_id\", tenantId)\n        .gte(\"start_date\", startOfDay.toISOString())\n        .lte(\"start_date\", endOfDay.toISOString())\n        .in(\"status\", [\"scheduled\", \"in_progress\"])\n        .order(\"start_date\", { ascending: true })\n        .limit(limit);\n\n      if (error) {\n        throw new ServiceError({\n          code: \"SCHEDULE_TODAY_ERROR\",\n          message: \"당일 일정을 불러오는 중 오류가 발생했습니다.\",\n          details: error as Record<string, any>\n        });\n      }\n\n      return data || [];\n    } catch (error) {\n      if (error instanceof ServiceError) throw error;\n      \n      throw new ServiceError({\n        code: \"SCHEDULE_TODAY_UNEXPECTED_ERROR\",\n        message: \"당일 일정을 불러오는 중 예상치 못한 오류가 발생했습니다.\",\n        details: error as Record<string, any>\n      });\n    }\n  }\n\n  /**\n   * 다가오는 스케줄 조회 (대시보드용 - 내일부터)\n   */\n  async getUpcomingSchedules(\n    tenantId: string,\n    limit: number = 3\n  ): Promise<Schedule[]> {\n    try {\n      const tomorrow = new Date();\n      tomorrow.setDate(tomorrow.getDate() + 1);\n      tomorrow.setHours(0, 0, 0, 0);\n\n      const { data, error } = await supabase\n        .from(\"schedules\")\n        .select(\"*\")\n        .eq(\"tenant_id\", tenantId)\n        .gte(\"start_date\", tomorrow.toISOString())\n        .in(\"status\", [\"scheduled\", \"in_progress\"])\n        .order(\"start_date\", { ascending: true })\n        .limit(limit);\n\n      if (error) {\n        throw new ServiceError({\n          code: \"SCHEDULE_UPCOMING_ERROR\",\n          message: \"다가오는 일정을 불러오는 중 오류가 발생했습니다.\",\n          details: error as Record<string, any>\n        });\n      }\n\n      return data || [];\n    } catch (error) {\n      if (error instanceof ServiceError) throw error;\n      \n      throw new ServiceError({\n        code: \"SCHEDULE_UPCOMING_UNEXPECTED_ERROR\",\n        message: \"다가오는 일정을 불러오는 중 예상치 못한 오류가 발생했습니다.\",\n        details: error as Record<string, any>\n      });\n    }\n  }\n\n  /**\n   * 스케줄 통계 조회\n   */\n  async getScheduleStats(tenantId: string): Promise<{\n    total: number;\n    scheduled: number;\n    inProgress: number;\n    completed: number;\n    overdue: number;\n  }> {\n    try {\n      const { data: allSchedules, error } = await supabase\n        .from(\"schedules\")\n        .select(\"status, start_date, end_date\")\n        .eq(\"tenant_id\", tenantId);\n\n      if (error) {\n        throw new ServiceError({\n          code: \"SCHEDULE_STATS_ERROR\",\n          message: \"스케줄 통계를 불러오는 중 오류가 발생했습니다.\",\n          details: error as Record<string, any>\n        });\n      }\n\n      const now = new Date();\n      const schedules = allSchedules || [];\n\n      const stats = {\n        total: schedules.length,\n        scheduled: 0,\n        inProgress: 0,\n        completed: 0,\n        overdue: 0,\n      };\n\n      schedules.forEach(schedule => {\n        const endDate = new Date(schedule.end_date);\n        \n        switch (schedule.status) {\n          case \"scheduled\":\n            if (endDate < now) {\n              stats.overdue++;\n            } else {\n              stats.scheduled++;\n            }\n            break;\n          case \"in_progress\":\n            stats.inProgress++;\n            break;\n          case \"completed\":\n            stats.completed++;\n            break;\n        }\n      });\n\n      return stats;\n    } catch (error) {\n      if (error instanceof ServiceError) throw error;\n      \n      throw new ServiceError({\n        code: \"SCHEDULE_STATS_UNEXPECTED_ERROR\",\n        message: \"스케줄 통계를 불러오는 중 예상치 못한 오류가 발생했습니다.\",\n        details: error as Record<string, any>\n      });\n    }\n  }\n}\n\n// 싱글톤 인스턴스 생성 및 export\nexport const scheduleService = new ScheduleService();","// ============================================================================\n// 서비스 레이어 - Supabase 통합\n// ============================================================================\n\nimport * as mockService from \"./mockPropertyService\";\nimport * as realService from \"./propertyService\";\n\n// Mock API 사용 여부 결정 (개발 환경에서만)\nconst useMockAPI = import.meta.env.VITE_MOCK_API === \"true\";\nconst propertyService = useMockAPI ? mockService : realService;\n\nexport const {\n  getProperties,\n  getProperty,\n  createProperty,\n  updateProperty,\n  deleteProperty,\n  getPropertyStats,\n  togglePropertyFavorite,\n} = propertyService;\n\n// 차트 서비스 export\nexport { chartService } from \"./chartService\";\n\n// 스케줄 서비스 export  \nexport { scheduleService } from \"./scheduleService\";\n","// ============================================================================\n// 매물 관리 커스텀 훅\n// ============================================================================\n\nimport { useState, useEffect, useCallback } from \"react\";\nimport { useAuth } from \"@/contexts/AuthContext\";\nimport {\n  getProperties,\n  getPropertyStats,\n  createProperty,\n  updateProperty,\n  deleteProperty,\n} from \"@/services\";\nimport type {\n  Property,\n  SimplePropertyFilters,\n  CreatePropertyData,\n  UpdatePropertyData,\n} from \"@/types\";\n\nexport const useProperties = (filters?: SimplePropertyFilters) => {\n  const { user } = useAuth();\n  const [properties, setProperties] = useState<Property[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const fetchProperties = useCallback(async () => {\n    if (!user?.id) {\n      setLoading(false);\n      setError(null);\n      setProperties([]);\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setError(null);\n\n      // 개발환경에서는 모사 데이터 사용 (환경변수가 없을 때만)\n      if (!import.meta.env.VITE_SUPABASE_URL) {\n        console.log(\"🔧 개발환경: 모사 매물 데이터 사용\");\n        const mockProperties: Property[] = [\n          {\n            id: \"prop-1\",\n            tenant_id: user.id,\n            created_by: user.id,\n            title: \"강남구 신축 아파트\",\n            type: \"아파트\" as any,\n            transaction_type: \"매매\" as any,\n            status: \"active\" as any,\n            price: 800000000,\n            address: \"서울시 강남구 역삼동\",\n            area: 84,\n            floor: 15,\n            total_floors: 25,\n            rooms: 3,\n            bathrooms: 2,\n            description: \"신축 아파트입니다.\",\n            parking: true,\n            elevator: true,\n            images: [],\n            view_count: 0,\n            options: [],\n            is_favorite: false,\n            inquiry_count: 0,\n            is_featured: false,\n            is_urgent: false,\n            created_at: new Date().toISOString(),\n            updated_at: new Date().toISOString(),\n          },\n          {\n            id: \"prop-2\", \n            tenant_id: user.id,\n            created_by: user.id,\n            title: \"서초구 오피스텔\",\n            type: \"오피스텔\" as any,\n            transaction_type: \"전세\" as any,\n            status: \"active\" as any,\n            price: 300000000,\n            address: \"서울시 서초구 서초동\",\n            area: 42,\n            floor: 8,\n            total_floors: 15,\n            rooms: 1,\n            bathrooms: 1,\n            description: \"깨끗한 오피스텔입니다.\",\n            parking: true,\n            elevator: true,\n            images: [],\n            view_count: 0,\n            options: [],\n            is_favorite: false,\n            inquiry_count: 0,\n            is_featured: false,\n            is_urgent: false,\n            created_at: new Date().toISOString(),\n            updated_at: new Date().toISOString(),\n          }\n        ];\n        \n        setProperties(mockProperties);\n        setLoading(false);\n        return;\n      }\n\n      // 프로덕션 환경에서만 실제 API 호출\n      const data = await getProperties(user.id, filters);\n      setProperties((data as Property[]) || []);\n    } catch (err) {\n      console.error(\"❌ 데이터 로딩 실패:\", err);\n      setError(\"매물을 불러오는 중 오류가 발생했습니다.\");\n      // 에러 발생시 빈 배열로 설정\n      setProperties([]);\n    } finally {\n      setLoading(false);\n    }\n  }, [user?.id, filters]);\n\n  useEffect(() => {\n    fetchProperties();\n  }, [fetchProperties]);\n\n  const createNewProperty = useCallback(\n    async (propertyData: CreatePropertyData) => {\n      if (!user?.id) {\n        throw new Error(\"사용자 인증 정보가 없습니다. 다시 로그인 해주세요.\");\n      }\n\n      try {\n        const newProperty = await createProperty(\n          propertyData,\n          user.id,\n          user.id,\n        );\n\n        setProperties((prev) => [newProperty, ...prev]);\n        return newProperty;\n      } catch (err) {\n        console.error(\"❌ useProperties.createNewProperty 실패:\", err);\n        console.error(\"❌ 에러 타입:\", typeof err);\n        console.error(\n          \"❌ 에러 상세:\",\n          err instanceof Error\n            ? {\n                name: err.name,\n                message: err.message,\n                stack: err.stack,\n              }\n            : err,\n        );\n\n        // 더 구체적인 에러 메시지 제공\n        if (err instanceof Error) {\n          throw err; // 원본 에러 메시지 사용\n        } else {\n          throw new Error(\"매물 생성 중 알 수 없는 오류가 발생했습니다.\");\n        }\n      }\n    },\n    [user?.id],\n  );\n\n  const updateExistingProperty = useCallback(\n    async (propertyId: string, propertyData: UpdatePropertyData) => {\n      if (!user?.id) {\n        throw new Error(\"사용자 정보가 없습니다.\");\n      }\n\n      try {\n        const updatedProperty = await updateProperty(\n          propertyId,\n          propertyData,\n          user.id,\n        );\n        setProperties((prev) =>\n          prev\n            .map((p) => (p.id === propertyId ? updatedProperty : p))\n            .filter((p): p is Property => p !== null),\n        );\n        return updatedProperty;\n      } catch (err) {\n        console.error(\"Error updating property:\", err);\n        throw new Error(\"매물 수정 중 오류가 발생했습니다.\");\n      }\n    },\n    [user?.id],\n  );\n\n  const deleteExistingProperty = useCallback(\n    async (propertyId: string) => {\n      if (!user?.id) {\n        throw new Error(\"사용자 정보가 없습니다.\");\n      }\n\n      try {\n        await deleteProperty(propertyId, user.id);\n        setProperties((prev) => prev.filter((p) => p.id !== propertyId));\n      } catch (err) {\n        console.error(\"Error deleting property:\", err);\n        throw new Error(\"매물 삭제 중 오류가 발생했습니다.\");\n      }\n    },\n    [user?.id],\n  );\n\n  // 매물 상태 업데이트 기능 삭제됨\n\n  return {\n    properties,\n    loading,\n    error,\n    refreshProperties: fetchProperties,\n    createProperty: createNewProperty,\n    updateProperty: updateExistingProperty,\n    deleteProperty: deleteExistingProperty,\n    // updatePropertyStatus: 매물 상태 업데이트 기능 삭제됨\n  };\n};\n\nexport const usePropertyStats = () => {\n  const { user } = useAuth();\n  const [stats, setStats] = useState<any>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchStats = async () => {\n      if (!user?.id) return;\n\n      try {\n        setLoading(true);\n        setError(null);\n        \n        // 개발환경에서는 모사 데이터 사용 (환경변수가 없을 때만)\n        if (!import.meta.env.VITE_SUPABASE_URL) {\n          console.log(\"🔧 개발환경: 모사 통계 데이터 사용\");\n          const mockStats = {\n            total: 2,\n            active: 2, // 모사 데이터에서는 완료된 매물이 없으므로 전체가 활성\n            reserved: 0,\n            sold: 0, // 거래완료 매물 없음\n            this_month: 2,\n            total_users: 1,\n            active_users: 1,\n            by_transaction_type: {\n              sale: 1,\n              jeonse: 1,\n              monthly: 0,\n            },\n          };\n          setStats(mockStats);\n          setLoading(false);\n          return;\n        }\n        \n        const data = await getPropertyStats(user.id);\n        setStats(data);\n      } catch (err) {\n        console.error(\"Error fetching property stats:\", err);\n        // 오류 발생시 모사 데이터로 fallback\n        console.log(\"🔧 오류로 인한 모사 통계 데이터 사용\");\n        const mockStats = {\n          total: 2,\n          active: 2, // 모사 데이터에서는 완료된 매물이 없으므로 전체가 활성\n          reserved: 0,\n          sold: 0, // 거래완료 매물 없음\n          this_month: 2,\n          total_users: 1,\n          active_users: 1,\n          by_transaction_type: {\n            sale: 1,\n            jeonse: 1,\n            monthly: 0,\n          },\n        };\n        setStats(mockStats);\n        setError(null);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchStats();\n  }, [user?.id]);\n\n  return { stats, loading, error };\n};\n","// ============================================================================\n// 통계 카드 컴포넌트\n// ============================================================================\n\nimport React, { memo } from \"react\";\nimport { LucideIcon } from \"lucide-react\";\nimport { Card, CardHeader, CardTitle, CardContent } from \"@/components/ui\";\n\ninterface StatCardProps {\n  title: string;\n  value: string;\n  change?: string;\n  icon: LucideIcon;\n  color?: string;\n  loading?: boolean;\n}\n\nexport const StatCard: React.FC<StatCardProps> = memo(\n  ({\n    title,\n    value,\n    change,\n    icon: Icon,\n    color = \"text-gray-600\",\n    loading = false,\n  }) => {\n    return (\n      <Card className=\"transition-all hover:shadow-md\">\n        <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2 px-3 sm:px-6 pt-3 sm:pt-6\">\n          <CardTitle className=\"text-xs sm:text-sm font-medium text-gray-600 truncate pr-2\">\n            {title}\n          </CardTitle>\n          <Icon className={`h-3 w-3 sm:h-4 sm:w-4 ${color} flex-shrink-0`} />\n        </CardHeader>\n        <CardContent className=\"px-3 sm:px-6 pb-3 sm:pb-6\">\n          {loading ? (\n            <div className=\"animate-pulse\">\n              <div className=\"h-6 sm:h-8 bg-gray-200 rounded w-3/4 mb-1 sm:mb-2\"></div>\n              <div className=\"h-3 sm:h-4 bg-gray-200 rounded w-1/2\"></div>\n            </div>\n          ) : (\n            <>\n              <div className=\"text-lg sm:text-2xl font-bold text-gray-900 leading-none\">\n                {value}\n              </div>\n              {change && (\n                <p className=\"text-xs sm:text-xs text-gray-500 mt-1 leading-none\">\n                  <span className=\"hidden sm:inline\">{change} 지난달 대비</span>\n                  <span className=\"sm:hidden\">{change}</span>\n                </p>\n              )}\n            </>\n          )}\n        </CardContent>\n      </Card>\n    );\n  },\n);\n","// ============================================================================\n// 대시보드 일정 요약 컴포넌트\n// ============================================================================\n\nimport React from \"react\";\nimport { \n  Calendar as CalendarIcon, \n  Clock, \n  MapPin, \n  User, \n  Tag, \n  AlertCircle,\n  ChevronRight \n} from \"lucide-react\";\nimport { Card, CardContent } from \"@/components/ui\";\nimport { Schedule } from \"@/types/schedule\";\n\ninterface ScheduleSummaryProps {\n  title: string;\n  schedules: Schedule[];\n  loading: boolean;\n  emptyMessage: string;\n  onViewAll?: () => void;\n}\n\nconst ScheduleSummary: React.FC<ScheduleSummaryProps> = ({\n  title,\n  schedules,\n  loading,\n  emptyMessage,\n  onViewAll,\n}) => {\n  // 카테고리별 색상 및 아이콘\n  const categoryInfo = {\n    property_viewing: { \n      label: \"매물 보기\", \n      color: \"bg-blue-500\", \n      icon: <MapPin className=\"w-3 h-3\" /> \n    },\n    contract_signing: { \n      label: \"계약 체결\", \n      color: \"bg-green-500\", \n      icon: <Tag className=\"w-3 h-3\" /> \n    },\n    maintenance: { \n      label: \"유지보수\", \n      color: \"bg-yellow-500\", \n      icon: <AlertCircle className=\"w-3 h-3\" /> \n    },\n    client_meeting: { \n      label: \"고객 미팅\", \n      color: \"bg-purple-500\", \n      icon: <User className=\"w-3 h-3\" /> \n    },\n    team_meeting: { \n      label: \"팀 회의\", \n      color: \"bg-indigo-500\", \n      icon: <User className=\"w-3 h-3\" /> \n    },\n    personal: { \n      label: \"개인 일정\", \n      color: \"bg-pink-500\", \n      icon: <CalendarIcon className=\"w-3 h-3\" /> \n    },\n    other: { \n      label: \"기타\", \n      color: \"bg-gray-500\", \n      icon: <Tag className=\"w-3 h-3\" /> \n    },\n  };\n\n  const formatTime = (dateString: string, allDay: boolean) => {\n    const date = new Date(dateString);\n    if (allDay) {\n      return \"종일\";\n    }\n    return date.toLocaleTimeString(\"ko-KR\", {\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      hour12: false,\n    });\n  };\n\n  const formatDate = (dateString: string) => {\n    const date = new Date(dateString);\n    const today = new Date();\n    const tomorrow = new Date(today);\n    tomorrow.setDate(today.getDate() + 1);\n    \n    if (date.toDateString() === today.toDateString()) {\n      return \"오늘\";\n    } else if (date.toDateString() === tomorrow.toDateString()) {\n      return \"내일\";\n    } else {\n      return date.toLocaleDateString(\"ko-KR\", {\n        month: \"short\",\n        day: \"numeric\",\n      });\n    }\n  };\n\n  const truncateTitle = (title: string, maxLength: number = 25) => {\n    return title.length > maxLength ? `${title.slice(0, maxLength)}...` : title;\n  };\n\n  if (loading) {\n    return (\n      <Card>\n        <CardContent className=\"p-4\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h3 className=\"text-lg font-semibold\">{title}</h3>\n            {onViewAll && (\n              <button className=\"text-sm text-blue-600 hover:text-blue-800 flex items-center\">\n                더보기\n                <ChevronRight className=\"w-4 h-4 ml-1\" />\n              </button>\n            )}\n          </div>\n          \n          <div className=\"space-y-3\">\n            {[1, 2, 3].map((i) => (\n              <div key={i} className=\"flex items-center space-x-3 animate-pulse\">\n                <div className=\"w-3 h-3 rounded-full bg-gray-200\" />\n                <div className=\"flex-1 space-y-1\">\n                  <div className=\"h-4 bg-gray-200 rounded w-3/4\" />\n                  <div className=\"h-3 bg-gray-200 rounded w-1/2\" />\n                </div>\n                <div className=\"h-3 bg-gray-200 rounded w-12\" />\n              </div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card>\n      <CardContent className=\"p-4\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <h3 className=\"text-lg font-semibold\">{title}</h3>\n          {onViewAll && (\n            <button\n              onClick={onViewAll}\n              className=\"text-sm text-blue-600 hover:text-blue-800 flex items-center transition-colors\"\n            >\n              더보기\n              <ChevronRight className=\"w-4 h-4 ml-1\" />\n            </button>\n          )}\n        </div>\n        \n        {schedules.length === 0 ? (\n          <div className=\"text-center py-8\">\n            <CalendarIcon className=\"w-12 h-12 mx-auto mb-3 text-gray-300\" />\n            <p className=\"text-gray-500 text-sm\">{emptyMessage}</p>\n          </div>\n        ) : (\n          <div className=\"space-y-3\">\n            {schedules.map((schedule) => {\n              const categoryData = categoryInfo[schedule.category];\n              \n              return (\n                <div\n                  key={schedule.id}\n                  className=\"flex items-center justify-between p-2 sm:p-3 hover:bg-gray-50 rounded-lg transition-colors cursor-pointer border border-transparent hover:border-gray-200 group\"\n                  title={`${schedule.title} - ${categoryData.label}`}\n                >\n                  <div className=\"flex items-center space-x-3 flex-1 min-w-0\">\n                    {/* 카테고리 색상 표시 */}\n                    <div className={`w-3 h-3 rounded-full ${categoryData.color} flex-shrink-0`} />\n                    \n                    <div className=\"flex-1 min-w-0\">\n                      <div className=\"flex items-center space-x-2\">\n                        <h4 className=\"text-sm font-medium text-gray-900 truncate\">\n                          {truncateTitle(schedule.title)}\n                        </h4>\n                        {schedule.priority === 'urgent' && (\n                          <span className=\"inline-flex items-center px-1.5 py-0.5 rounded text-xs font-medium bg-red-100 text-red-600\">\n                            긴급\n                          </span>\n                        )}\n                      </div>\n                      \n                      <div className=\"flex items-center space-x-1 sm:space-x-2 mt-1\">\n                        <span className=\"text-xs text-gray-500\">\n                          {categoryData.label}\n                        </span>\n                        {schedule.location && (\n                          <>\n                            <span className=\"text-gray-300 hidden sm:inline\">•</span>\n                            <span className=\"text-xs text-gray-400 truncate max-w-16 sm:max-w-24\">\n                              {schedule.location}\n                            </span>\n                          </>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                  \n                  {/* 시간 정보 */}\n                  <div className=\"flex flex-col items-end text-right flex-shrink-0 ml-2 sm:ml-3\">\n                    <div className=\"flex items-center text-xs text-gray-600\">\n                      <Clock className=\"w-3 h-3 mr-1\" />\n                      <span className=\"hidden sm:inline\">{formatTime(schedule.start_date, schedule.all_day)}</span>\n                      <span className=\"sm:hidden\">{schedule.all_day ? \"종일\" : formatTime(schedule.start_date, schedule.all_day).slice(0, 5)}</span>\n                    </div>\n                    <div className=\"text-xs text-gray-400 mt-0.5\">\n                      {formatDate(schedule.start_date)}\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport { ScheduleSummary };","// ============================================================================\n// 매물 관련 유틸리티 함수들\n// ============================================================================\n\nimport { Property } from \"@/types/property\";\nimport { logger } from \"@/utils/logger\";\n\n/**\n * 주소에서 동(네이버후드) 추출\n */\nexport const extractNeighborhood = (address: string): string => {\n  // 주소에서 동 단위 추출 (예: \"서울특별시 강남구 신사동 123-45\" → \"신사동\")\n  const parts = address.split(\" \");\n\n  // 동으로 끝나는 부분 찾기\n  const dong = parts.find((part) => part.endsWith(\"동\"));\n  if (dong) return dong;\n\n  // 동이 없으면 구 단위 반환\n  const gu = parts.find((part) => part.endsWith(\"구\"));\n  if (gu) return gu;\n\n  // 그것도 없으면 마지막 두 단어 반환\n  return parts.slice(-2).join(\" \");\n};\n\n/**\n * 가격 포맷팅\n */\nexport const formatPrice = (property: Property): string => {\n  const { transaction_type, price, deposit, monthly_rent, title } = property;\n\n  // 매매가 디버깅 (모든 매물)\n  if (transaction_type === \"매매\") {\n    logger.debug(\"🔍 매매가 가격 포맷팅:\", {\n      title,\n      transaction_type,\n      price,\n      priceType: typeof price,\n      result: price ? `${formatMoney(price)}` : \"가격 협의\",\n    });\n  }\n\n  switch (transaction_type) {\n    case \"매매\":\n      return price ? `${formatMoney(price)}` : \"가격 협의\";\n\n    case \"전세\":\n      return deposit ? `전세 ${formatMoney(deposit)}` : \"보증금 협의\";\n\n    case \"월세\":\n      const depositStr = deposit ? formatMoney(deposit) : \"0\";\n      const rentStr = monthly_rent ? formatMoney(monthly_rent) : \"0\";\n      return `${depositStr}/${rentStr}`;\n\n    case \"단기임대\":\n      return monthly_rent ? `월 ${formatMoney(monthly_rent)}` : \"가격 협의\";\n\n    default:\n      return \"가격 정보 없음\";\n  }\n};\n\n/**\n * 금액을 억/만원 단위로 포맷팅\n */\nexport const formatMoney = (amount: number): string => {\n  // 매매가 관련 디버깅 (고액 매매가 추적)\n  if (amount >= 10000) {\n    logger.debug(\"💰 formatMoney 매매가 디버깅:\", {\n      amount,\n      type: typeof amount,\n      eok: Math.floor(amount / 10000),\n      man: amount % 10000,\n      결과:\n        amount >= 10000\n          ? amount % 10000 === 0\n            ? `${Math.floor(amount / 10000)}억`\n            : `${Math.floor(amount / 10000)}억 ${(amount % 10000).toLocaleString()}만원`\n          : `${amount.toLocaleString()}만원`,\n    });\n  }\n\n  if (amount >= 10000) {\n    const eok = Math.floor(amount / 10000);\n    const man = amount % 10000;\n\n    if (man === 0) {\n      return `${eok}억`;\n    } else {\n      return `${eok}억 ${man.toLocaleString()}만원`;\n    }\n  } else {\n    return `${amount.toLocaleString()}만원`;\n  }\n};\n\n/**\n * 면적 포맷팅\n */\nexport const formatArea = (area: number): string => {\n  const pyeong = (area / 3.3058).toFixed(1);\n  return `${area}㎡ (${pyeong}평)`;\n};\n\n/**\n * 매물 상태에 따른 색상 클래스 반환\n */\nexport const getStatusColor = (status: string): string => {\n  switch (status) {\n    case \"거래중\":\n      return \"text-green-600\";\n    case \"거래완료\":\n      return \"text-gray-600\";\n    default:\n      return \"text-gray-600\";\n  }\n};\n\n/**\n * 매물 상태에 따른 배경 색상 클래스 반환\n */\nexport const getStatusBgColor = (status: string): string => {\n  switch (status) {\n    case \"거래중\":\n      return \"bg-green-100\";\n    case \"거래완료\":\n      return \"bg-gray-100\";\n    default:\n      return \"bg-gray-100\";\n  }\n};\n\n/**\n * 상대적 시간 표시 (예: \"2시간 전\", \"3일 전\")\n */\nexport const getRelativeTime = (dateString: string): string => {\n  const now = new Date();\n  const date = new Date(dateString);\n  const diffInMs = now.getTime() - date.getTime();\n  const diffInHours = Math.floor(diffInMs / (1000 * 60 * 60));\n  const diffInDays = Math.floor(diffInHours / 24);\n\n  if (diffInHours < 1) {\n    return \"방금 전\";\n  } else if (diffInHours < 24) {\n    return `${diffInHours}시간 전`;\n  } else if (diffInDays < 7) {\n    return `${diffInDays}일 전`;\n  } else {\n    return date.toLocaleDateString(\"ko-KR\", {\n      month: \"long\",\n      day: \"numeric\",\n    });\n  }\n};\n\n/**\n * 퇴실날짜까지 남은 일수 계산\n */\nexport const getDaysUntilExit = (exitDate: string): number => {\n  const today = new Date();\n  const exit = new Date(exitDate);\n  const diffInMs = exit.getTime() - today.getTime();\n  return Math.ceil(diffInMs / (1000 * 60 * 60 * 24));\n};\n\n/**\n * 퇴실날짜 긴급도 판단\n */\nexport const getExitUrgency = (\n  exitDate: string,\n): \"urgent\" | \"warning\" | \"normal\" => {\n  const daysLeft = getDaysUntilExit(exitDate);\n\n  if (daysLeft <= 7) {\n    return \"urgent\";\n  } else if (daysLeft <= 30) {\n    return \"warning\";\n  } else {\n    return \"normal\";\n  }\n};\n\n/**\n * 매물 카드에 표시할 핵심 정보만 추출\n */\nexport const getPropertyCardData = (property: Property) => {\n  return {\n    id: property.id,\n    title: property.title,\n    neighborhood: extractNeighborhood(property.address),\n    price: formatPrice(property),\n    exitDate: property.exit_date,\n    status: /* status removed */ \"거래중\",\n    type: property.type,\n    transactionType: property.transaction_type,\n    isUrgent: property.is_urgent,\n    createdAt: property.created_at,\n  };\n};\n","// ============================================================================\n// 매물 카드 컴포넌트 - 빠른 스캔을 위한 간단한 정보 표시\n// ============================================================================\n\nimport React, { memo } from \"react\";\nimport { Calendar, MapPin, DollarSign } from \"lucide-react\";\nimport { Property } from \"@/types/property\";\nimport { formatPrice, extractNeighborhood } from \"@/utils/propertyUtils\";\nimport { PropertyStatusBadge } from \"@/components/ui/Badge\";\n\ninterface PropertyCardProps {\n  property: Property;\n  onClick?: (property: Property) => void;\n  className?: string;\n}\n\nexport const PropertyCard: React.FC<PropertyCardProps> = memo(\n  ({ property, onClick, className = \"\" }) => {\n    const neighborhood = extractNeighborhood(property.address);\n    const price = formatPrice(property);\n\n    return (\n      <div\n        className={`\n        card bg-white rounded-xl border border-gray-200 hover:border-blue-300 \n        hover:shadow-md transition-all duration-200 cursor-pointer\n        p-3 sm:p-4 space-y-3 group active:scale-[0.98] touch-target\n        relative\n        ${className}\n      `}\n        onClick={() => onClick?.(property)}\n      >\n        {/* 거래완료 워터마크 오버레이 */}\n        {property.status === \"거래완료\" && (\n          <div className=\"absolute top-2 right-2 z-10\">\n            <div className=\"bg-red-600/90 text-white px-3 py-1.5 rounded-lg transform rotate-12 shadow-lg\">\n              <span className=\"text-sm sm:text-base font-bold tracking-wide\">\n                완료\n              </span>\n            </div>\n          </div>\n        )}\n\n        {/* 모바일 최적화된 헤더 - 매물명과 급매 태그 */}\n        <div className=\"flex items-start justify-between gap-2\">\n          <h3 className=\"font-semibold text-base sm:text-lg leading-tight line-clamp-2 group-hover:text-blue-600 transition-colors flex-1 min-w-0\">\n            {property.title}\n          </h3>\n          {property.is_urgent && (\n            <span className=\"bg-red-100 text-red-600 text-xs px-2 py-1 rounded-full font-medium flex-shrink-0\">\n              급매\n            </span>\n          )}\n        </div>\n\n        {/* 모바일 최적화된 주소 표시 */}\n        <div className=\"flex items-center text-gray-600\">\n          <MapPin className=\"w-4 h-4 mr-2 flex-shrink-0 text-gray-400\" />\n          <span className=\"text-sm sm:text-base truncate\">{neighborhood}</span>\n        </div>\n\n        {/* 모바일 최적화된 가격 표시 */}\n        <div className=\"flex items-center text-gray-900\">\n          <DollarSign className=\"w-4 h-4 mr-2 text-blue-600 flex-shrink-0\" />\n          <span className=\"font-bold text-lg sm:text-xl text-blue-600\">\n            {price}\n          </span>\n        </div>\n\n        {/* 모바일 최적화된 거주 현황 */}\n        {property.exit_date ? (\n          <div className=\"flex items-center text-orange-600\">\n            <Calendar className=\"w-4 h-4 mr-2 flex-shrink-0\" />\n            <span className=\"text-sm font-medium\">\n              퇴실:{\" \"}\n              {new Date(property.exit_date).toLocaleDateString(\"ko-KR\", {\n                month: \"short\",\n                day: \"numeric\",\n              })}\n            </span>\n          </div>\n        ) : (\n          <div className=\"flex items-center text-green-600\">\n            <Calendar className=\"w-4 h-4 mr-2 flex-shrink-0\" />\n            <span className=\"text-sm font-medium\">공실</span>\n          </div>\n        )}\n\n        {/* 모바일 최적화된 하단 정보 */}\n        <div className=\"border-t border-gray-100 pt-3\">\n          {/* 첫 번째 줄: 매물 유형과 거래 유형 */}\n          <div className=\"flex items-center justify-between mb-2\">\n            <div className=\"flex items-center space-x-2 text-xs sm:text-sm text-gray-500\">\n              <span>{property.type}</span>\n              <span className=\"text-gray-300\">•</span>\n              <span>{property.transaction_type}</span>\n            </div>\n            <PropertyStatusBadge status={property.status} />\n          </div>\n\n          {/* 두 번째 줄: 상세 정보 (모바일에서 더 많은 정보 표시) */}\n          <div className=\"flex items-center justify-between text-xs text-gray-500\">\n            <div className=\"flex items-center space-x-3\">\n              <span>\n                {property.area}m² ({Math.floor(property.area / 3.3)}평)\n              </span>\n              <span>{property.rooms}룸</span>\n              {property.floor && <span>{property.floor}층</span>}\n            </div>\n\n            {/* 편의시설 아이콘 - 모바일 친화적 */}\n            <div className=\"flex items-center space-x-2\">\n              {property.parking && (\n                <span className=\"text-green-600\" title=\"주차 가능\">\n                  🚗\n                </span>\n              )}\n              {property.elevator && (\n                <span className=\"text-blue-600\" title=\"엘리베이터\">\n                  🏢\n                </span>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  },\n);\n","// ============================================================================\n// 고급 모바일 감지 훅\n// ============================================================================\n\nimport { useState, useEffect } from \"react\";\n\nexport interface MobileDetectionResult {\n  isMobile: boolean;\n  width: number;\n  height: number;\n  detectionDetails: {\n    isMobileWidth: boolean;\n    isMobileUA: boolean;\n    isTouchDevice: boolean;\n    isPortraitOrientation: boolean;\n    mediaQueryMatch: boolean;\n    isHighDPR: boolean;\n    mobileScore: number;\n    userAgent: string;\n  };\n}\n\n/**\n * 고급 모바일 디바이스 감지 훅\n *\n * 다중 감지 방식을 사용하여 크롬 모바일을 포함한 모든 모바일 디바이스를 정확히 감지\n * - 화면 크기 기반 감지 (가중치 높음)\n * - 개선된 User-Agent 패턴 매칭 (크롬 모바일 특화)\n * - 터치 기능 지원 여부\n * - 화면 방향 및 비율\n * - CSS 미디어 쿼리 매치\n * - 디바이스 픽셀 비율\n */\nexport const useMobileDetection = (): MobileDetectionResult => {\n  const [detection, setDetection] = useState<MobileDetectionResult>({\n    isMobile: false,\n    width: 0,\n    height: 0,\n    detectionDetails: {\n      isMobileWidth: false,\n      isMobileUA: false,\n      isTouchDevice: false,\n      isPortraitOrientation: false,\n      mediaQueryMatch: false,\n      isHighDPR: false,\n      mobileScore: 0,\n      userAgent: \"\",\n    },\n  });\n\n  useEffect(() => {\n    const detectMobile = () => {\n      const width = window.innerWidth;\n      const height = window.innerHeight;\n      const userAgent = navigator.userAgent.toLowerCase();\n\n      // 1. 화면 크기 기반 감지 (우선순위 1)\n      const isMobileWidth = width < 1024; // lg breakpoint\n\n      // 2. 강화된 User-Agent 감지 (크롬 모바일 특화)\n      const isMobileUA =\n        // 기본 모바일 디바이스\n        /android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini/i.test(\n          userAgent,\n        ) ||\n        // 크롬 모바일 특화 패턴 (더 엄격한 조건)\n        (userAgent.includes(\"chrome\") && userAgent.includes(\"mobile\")) ||\n        (userAgent.includes(\"chrome\") && userAgent.includes(\"android\") && userAgent.includes(\"mobile\")) ||\n        (userAgent.includes(\"crios\") && userAgent.includes(\"mobile\")) || // 크롬 iOS\n        // 안드로이드 크롬 명확한 패턴\n        /chrome.*android.*mobile/i.test(userAgent) ||\n        /android.*chrome.*mobile/i.test(userAgent) ||\n        // 삼성 브라우저\n        userAgent.includes(\"samsungbrowser\") ||\n        // 기타 모바일 브라우저\n        userAgent.includes(\"mobile\") ||\n        userAgent.includes(\"phone\") ||\n        // 추가: 웹뷰 패턴\n        userAgent.includes(\"wv\") ||\n        // 안드로이드 디바이스 명시적 체크\n        (userAgent.includes(\"android\") && !userAgent.includes(\"desktop\"));\n\n      // 3. 터치 기능 감지\n      const isTouchDevice =\n        \"ontouchstart\" in window ||\n        navigator.maxTouchPoints > 0 ||\n        // @ts-ignore - IE 호환성\n        navigator.msMaxTouchPoints > 0;\n\n      // 4. 화면 비율 감지 (모바일은 보통 세로가 더 김)\n      const isPortraitOrientation = height > width;\n\n      // 5. CSS 미디어 쿼리 매치 감지\n      const mediaQueryMatch = window.matchMedia(\"(max-width: 1023px)\").matches;\n\n      // 6. 디바이스 픽셀 비율 (모바일은 보통 높음)\n      const isHighDPR = window.devicePixelRatio > 1.5;\n\n      // 7. 추가: 화면 밀도 기반 감지\n      const isSmallScreen = width < 768 && height < 1024;\n\n      // 특별 조건: 크롬 모바일 명시적 체크\n      const isChromeAndroid = userAgent.includes(\"chrome\") && userAgent.includes(\"android\") && userAgent.includes(\"mobile\");\n      const isExplicitMobile = userAgent.includes(\"mobile\") && (width < 768 || isTouchDevice);\n      \n      // 종합 판단 로직 (가중치 기반 점수 시스템 - 크롬 모바일 최적화)\n      let mobileScore = [\n        isMobileWidth ? 4 : 0, // 화면 크기 (가중치 최고)\n        isMobileUA ? 3 : 0, // User-Agent (크롬 모바일 가중치 증가)\n        isTouchDevice ? 2 : 0, // 터치 지원 (중요도 상승)\n        isPortraitOrientation && width < 800 ? 1.5 : 0, // 세로 방향 + 좁은 화면\n        mediaQueryMatch ? 2 : 0, // CSS 미디어 쿼리 (가중치 증가)\n        isHighDPR ? 1 : 0, // 고해상도 (모바일에서 일반적)\n        isSmallScreen ? 2 : 0, // 작은 화면 (가중치 증가)\n      ].reduce((sum, score) => sum + score, 0);\n\n      // 크롬 모바일이거나 명시적 모바일 조건에서는 점수 보너스\n      if (isChromeAndroid || isExplicitMobile) {\n        mobileScore += 2;\n      }\n\n      // 강제 모바일 모드 조건들 (확실한 모바일 디바이스)\n      const forceMobile = \n        // 화면이 작고 터치 기능이 있으면 무조건 모바일\n        (width <= 768 && isTouchDevice) ||\n        // 모바일 User-Agent이고 화면이 작으면 모바일\n        (isMobileUA && width < 1024) ||\n        // 크롬 모바일 확실한 패턴\n        isChromeAndroid ||\n        // 세로 모드이고 화면이 좁으면 모바일\n        (isPortraitOrientation && width < 768) ||\n        // CSS 미디어 쿼리가 모바일이고 터치가 가능하면 모바일\n        (mediaQueryMatch && isTouchDevice);\n\n      const finalIsMobile = forceMobile || mobileScore >= 4; // 강제 모바일 조건 추가\n\n      const detectionDetails = {\n        isMobileWidth,\n        isMobileUA,\n        isTouchDevice,\n        isPortraitOrientation,\n        mediaQueryMatch,\n        isHighDPR,\n        mobileScore,\n        userAgent: navigator.userAgent,\n      };\n\n      // 디버깅 정보 출력 (크롬 모바일 특화)\n      if (process.env.NODE_ENV === \"development\") {\n        console.log(\"📱 강화된 모바일 감지 결과:\", {\n          width,\n          height,\n          finalIsMobile,\n          forceMobile,\n          isChromeAndroid,\n          isExplicitMobile,\n          forceConditions: {\n            smallWithTouch: width <= 768 && isTouchDevice,\n            mobileUAWithSmallScreen: isMobileUA && width < 1024,\n            chromeAndroid: isChromeAndroid,\n            portraitSmall: isPortraitOrientation && width < 768,\n            mediaQueryWithTouch: mediaQueryMatch && isTouchDevice,\n          },\n          mobileScoreBreakdown: {\n            width: isMobileWidth ? 4 : 0,\n            userAgent: isMobileUA ? 3 : 0,\n            touch: isTouchDevice ? 2 : 0,\n            portrait: isPortraitOrientation && width < 800 ? 1.5 : 0,\n            mediaQuery: mediaQueryMatch ? 2 : 0,\n            highDPR: isHighDPR ? 1 : 0,\n            smallScreen: isSmallScreen ? 2 : 0,\n            bonus: (isChromeAndroid || isExplicitMobile) ? 2 : 0,\n            total: mobileScore\n          },\n          ...detectionDetails,\n        });\n      }\n\n      setDetection({\n        isMobile: finalIsMobile,\n        width,\n        height,\n        detectionDetails,\n      });\n    };\n\n    // 초기 감지\n    detectMobile();\n\n    // 이벤트 리스너 등록\n    window.addEventListener(\"resize\", detectMobile);\n    window.addEventListener(\"orientationchange\", detectMobile);\n\n    return () => {\n      window.removeEventListener(\"resize\", detectMobile);\n      window.removeEventListener(\"orientationchange\", detectMobile);\n    };\n  }, []);\n\n  return detection;\n};\n\n/**\n * 간단한 모바일 감지 훅 (boolean만 반환)\n */\nexport const useIsMobile = (): boolean => {\n  const { isMobile } = useMobileDetection();\n  return isMobile;\n};\n","// ============================================================================\n// 매물 상세 정보 팝업 모달 - 모든 매물 정보 표시\n// ============================================================================\n\nimport React from \"react\";\nimport { X, MapPin, User, Car, ChevronUp, Edit, Trash2 } from \"lucide-react\";\nimport { Property } from \"@/types/property\";\nimport { formatPrice, formatArea, formatMoney } from \"@/utils/propertyUtils\";\nimport { PropertyStatusBadge } from \"@/components/ui/Badge\";\nimport { useIsMobile } from \"@/hooks/useMobileDetection\";\nimport \"@/styles/mobile-modal.css\";\n\ninterface PropertyDetailModalProps {\n  property: Property | null;\n  isOpen: boolean;\n  onClose: () => void;\n  onEdit?: (property: Property) => void;\n  onDelete?: (property: Property) => void;\n}\n\nexport const PropertyDetailModal: React.FC<PropertyDetailModalProps> = ({\n  property,\n  isOpen,\n  onClose,\n  onEdit,\n  onDelete,\n}) => {\n  const isMobile = useIsMobile();\n\n  if (!isOpen || !property) return null;\n\n  const price = formatPrice(property);\n\n  // 방갯수 포맷팅 (소수점 포함)\n  const formatRooms = (rooms: number) => {\n    return rooms % 1 === 0 ? `${rooms}룸` : `${rooms}룸`;\n  };\n\n  const handleEditClick = () => {\n    if (onEdit) {\n      onEdit(property);\n    }\n  };\n\n  const handleDeleteClick = () => {\n    if (onDelete) {\n      onDelete(property);\n    }\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-end sm:items-center justify-center p-0 sm:p-4 z-50 touch-manipulation\">\n      <div className=\"bg-white rounded-t-2xl sm:rounded-lg w-full max-w-7xl max-h-[95vh] h-[95vh] sm:h-auto overflow-hidden flex flex-col shadow-2xl\">\n        {/* 헤더 - 모바일 최적화 */}\n        <div className=\"border-b border-gray-200 bg-gradient-to-r from-blue-50 to-indigo-50\">\n          {/* 모바일 스와이프 인디케이터 */}\n          {isMobile && (\n            <div className=\"flex justify-center pt-2 pb-1\">\n              <div className=\"w-10 h-1 bg-gray-300 rounded-full\"></div>\n            </div>\n          )}\n\n          {/* 모바일: 세로 배치 */}\n          {isMobile && (\n            <div className=\"p-3 sm:p-4 space-y-3\">\n              <div className=\"flex items-start justify-between\">\n                <h2 className=\"text-lg sm:text-xl font-bold text-gray-900 flex-1 pr-4\">\n                  {property.title}\n                </h2>\n                <div className=\"flex items-center space-x-1 flex-shrink-0\">\n                  <button\n                    onClick={handleEditClick}\n                    className=\"p-2 text-blue-600 hover:text-blue-700 hover:bg-blue-50 rounded-lg transition-colors min-w-[36px] min-h-[36px] flex items-center justify-center\"\n                    aria-label=\"매물 수정\"\n                  >\n                    <Edit className=\"w-4 h-4\" />\n                  </button>\n                  <button\n                    onClick={handleDeleteClick}\n                    className=\"p-2 text-red-600 hover:text-red-700 hover:bg-red-50 rounded-lg transition-colors min-w-[36px] min-h-[36px] flex items-center justify-center\"\n                    aria-label=\"매물 삭제\"\n                  >\n                    <Trash2 className=\"w-4 h-4\" />\n                  </button>\n                  <button\n                    onClick={onClose}\n                    className=\"p-2 text-gray-400 hover:text-gray-600 hover:bg-gray-100 rounded-lg transition-colors min-w-[36px] min-h-[36px] flex items-center justify-center\"\n                    aria-label=\"닫기\"\n                  >\n                    <X className=\"w-5 h-5\" />\n                  </button>\n                </div>\n              </div>\n\n              <div className=\"flex items-start space-x-2\">\n                <MapPin className=\"w-4 h-4 text-gray-500 mt-0.5 flex-shrink-0\" />\n                <span className=\"text-sm sm:text-base text-gray-600 leading-relaxed\">\n                  {property.address}\n                </span>\n              </div>\n\n              <div className=\"text-center py-2 bg-white rounded-lg border border-blue-200\">\n                <div className=\"text-xl sm:text-2xl font-bold text-blue-600 mb-1\">\n                  {price}\n                </div>\n                <div className=\"flex flex-wrap justify-center gap-2\">\n                  <span className=\"px-3 py-1 bg-blue-100 text-blue-800 rounded-full text-sm font-medium\">\n                    {property.type}\n                  </span>\n                  <span className=\"px-3 py-1 bg-green-100 text-green-800 rounded-full text-sm font-medium\">\n                    {property.transaction_type}\n                  </span>\n                  {/* 매물 상태 배지 */}\n                  <PropertyStatusBadge status={property.status} />\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* 데스크톱: 개선된 가로 배치 */}\n          {!isMobile && (\n            <div className=\"hidden lg:flex items-center justify-between p-6 space-x-6\">\n              <div className=\"flex-1 flex items-center space-x-6\">\n                <div className=\"flex-1\">\n                  <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">\n                    {property.title}\n                  </h2>\n                  <div className=\"flex items-center text-gray-600\">\n                    <MapPin className=\"w-4 h-4 mr-2\" />\n                    <span className=\"text-base\">{property.address}</span>\n                  </div>\n                </div>\n\n                <div className=\"text-right\">\n                  <div className=\"text-3xl font-bold text-blue-600 mb-2\">\n                    {price}\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <span className=\"px-3 py-1.5 bg-blue-100 text-blue-800 rounded-full font-medium text-sm\">\n                      {property.type}\n                    </span>\n                    <span className=\"px-3 py-1.5 bg-green-100 text-green-800 rounded-full font-medium text-sm\">\n                      {property.transaction_type}\n                    </span>\n                    {/* 매물 상태 배지 */}\n                    <PropertyStatusBadge status={property.status} />\n                  </div>\n                </div>\n              </div>\n\n              <button\n                onClick={onClose}\n                className=\"p-3 text-gray-400 hover:text-gray-600 hover:bg-gray-100 rounded-lg transition-colors\"\n              >\n                <X className=\"w-6 h-6\" />\n              </button>\n            </div>\n          )}\n        </div>\n\n        {/* 콘텐츠 - 모바일 최적화 */}\n        <div className=\"flex-1 overflow-y-auto overscroll-contain\">\n          <div className=\"px-3 py-2 sm:p-4 space-y-2 sm:space-y-4 pb-safe pb-24\">\n            {/* 모바일: 초컴팩트 레이아웃 */}\n            {isMobile && (\n              <div className=\"space-y-2\">\n                {/* 기본 정보 - 초컴팩트 디자인 */}\n                <div className=\"bg-gradient-to-r from-blue-50 to-blue-100 rounded-lg p-2\">\n                  <h3 className=\"text-sm font-bold text-gray-900 mb-2 flex items-center\">\n                    <div className=\"w-2 h-2 bg-blue-500 rounded-full mr-1\"></div>\n                    기본 정보\n                  </h3>\n                  <div className=\"space-y-1\">\n                    <div className=\"flex justify-between items-center py-1\">\n                      <span className=\"text-sm text-gray-700 font-medium\">\n                        면적\n                      </span>\n                      <span className=\"text-sm font-bold text-gray-900\">\n                        {formatArea(property.area)}\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between items-center py-1 border-t border-blue-200\">\n                      <span className=\"text-sm text-gray-700 font-medium\">\n                        층수\n                      </span>\n                      <span className=\"text-sm font-bold text-gray-900\">\n                        {property.floor}F/{property.total_floors}F\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between items-center py-1 border-t border-blue-200\">\n                      <span className=\"text-sm text-gray-700 font-medium\">\n                        구조\n                      </span>\n                      <span className=\"text-sm font-bold text-gray-900\">\n                        {formatRooms(property.rooms)} {property.bathrooms}욕실\n                      </span>\n                    </div>\n\n                    {/* 편의시설 - 한줄 표시 */}\n                    <div className=\"pt-1 border-t border-blue-200\">\n                      <div className=\"flex items-center justify-between\">\n                        <span className=\"text-sm font-medium text-gray-700\">\n                          편의시설\n                        </span>\n                        <div className=\"flex items-center gap-2\">\n                          <div\n                            className={`flex items-center px-2 py-1 rounded text-xs font-medium ${\n                              property.parking\n                                ? \"bg-green-100 text-green-800\"\n                                : \"bg-gray-100 text-gray-600\"\n                            }`}\n                          >\n                            <Car className=\"w-3 h-3 mr-1\" />\n                            주차\n                          </div>\n                          <div\n                            className={`flex items-center px-2 py-1 rounded text-xs font-medium ${\n                              property.elevator\n                                ? \"bg-green-100 text-green-800\"\n                                : \"bg-gray-100 text-gray-600\"\n                            }`}\n                          >\n                            <ChevronUp className=\"w-3 h-3 mr-1\" />\n                            EV\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                {/* 위치 정보 - 초컴팩트 */}\n                <div className=\"bg-gradient-to-r from-green-50 to-green-100 rounded-lg p-2\">\n                  <h3 className=\"text-sm font-bold text-gray-900 mb-2 flex items-center\">\n                    <div className=\"w-2 h-2 bg-green-500 rounded-full mr-1\"></div>\n                    위치 정보\n                  </h3>\n                  <div className=\"flex items-start space-x-2 p-2 bg-white rounded border border-green-200\">\n                    <MapPin className=\"w-3 h-3 text-green-500 mt-0.5 flex-shrink-0\" />\n                    <div className=\"flex-1 min-w-0\">\n                      <div className=\"text-sm font-bold text-gray-900 leading-tight break-words\">\n                        {property.address}\n                      </div>\n                      {property.detailed_address && (\n                        <div className=\"text-xs text-gray-600 mt-0.5\">\n                          {property.detailed_address}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n\n                {/* 가격 정보 - 초컴팩트 */}\n                <div className=\"bg-gradient-to-r from-yellow-50 to-yellow-100 rounded-lg p-2\">\n                  <h3 className=\"text-sm font-bold text-gray-900 mb-2 flex items-center\">\n                    <div className=\"w-2 h-2 bg-yellow-500 rounded-full mr-1\"></div>\n                    가격 정보\n                  </h3>\n                  <div className=\"space-y-1\">\n                    {property.transaction_type === \"매매\" && property.price && (\n                      <div className=\"bg-blue-100 border border-blue-300 rounded p-2\">\n                        <div className=\"flex justify-between items-center\">\n                          <span className=\"text-sm font-bold text-blue-800\">\n                            매매가\n                          </span>\n                          <span className=\"text-base font-bold text-blue-900\">\n                            {formatMoney(property.price)}\n                          </span>\n                        </div>\n                      </div>\n                    )}\n\n                    {(property.transaction_type === \"전세\" ||\n                      property.transaction_type === \"월세\") &&\n                      property.deposit !== undefined && (\n                        <div className=\"bg-green-100 border border-green-300 rounded p-2\">\n                          <div className=\"flex justify-between items-center\">\n                            <span className=\"text-sm font-bold text-green-800\">\n                              {property.transaction_type === \"전세\"\n                                ? \"전세금\"\n                                : \"보증금\"}\n                            </span>\n                            <span className=\"text-base font-bold text-green-900\">\n                              {formatMoney(property.deposit)}\n                            </span>\n                          </div>\n                        </div>\n                      )}\n\n                    {property.transaction_type === \"월세\" &&\n                      property.monthly_rent && (\n                        <div className=\"bg-orange-100 border border-orange-300 rounded p-2\">\n                          <div className=\"flex justify-between items-center\">\n                            <span className=\"text-sm font-bold text-orange-800\">\n                              월세\n                            </span>\n                            <span className=\"text-base font-bold text-orange-900\">\n                              {property.monthly_rent}만원/월\n                            </span>\n                          </div>\n                        </div>\n                      )}\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {/* 데스크톱: 공간 최적화된 레이아웃 */}\n            {!isMobile && (\n              <div className=\"block\">\n                {/* 첫 번째 행: 4열 그리드 - 더 큰 글씨와 여백 축소 */}\n                <div className=\"grid grid-cols-4 gap-4 mb-4\">\n                  {/* 기본 정보 */}\n                  <div className=\"bg-gradient-to-br from-blue-50 to-blue-100 rounded-lg p-4 border border-blue-200\">\n                    <h3 className=\"text-base font-bold text-gray-900 mb-3 flex items-center\">\n                      <div className=\"w-3 h-3 bg-blue-500 rounded-full mr-2\"></div>\n                      기본 정보\n                    </h3>\n                    <div className=\"space-y-2\">\n                      <div className=\"flex justify-between items-center bg-white rounded p-2 border border-blue-200\">\n                        <span className=\"text-sm text-gray-700 font-semibold\">\n                          전용면적\n                        </span>\n                        <span className=\"text-base font-bold text-gray-900\">\n                          {formatArea(property.area)}\n                        </span>\n                      </div>\n                      <div className=\"flex justify-between items-center bg-white rounded p-2 border border-blue-200\">\n                        <span className=\"text-sm text-gray-700 font-semibold\">\n                          층수\n                        </span>\n                        <span className=\"text-base font-bold text-gray-900\">\n                          {property.floor}F / {property.total_floors}F\n                        </span>\n                      </div>\n                      <div className=\"flex justify-between items-center bg-white rounded p-2 border border-blue-200\">\n                        <span className=\"text-sm text-gray-700 font-semibold\">\n                          구조\n                        </span>\n                        <span className=\"text-base font-bold text-gray-900\">\n                          {formatRooms(property.rooms)} {property.bathrooms}욕실\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* 가격 정보 */}\n                  <div className=\"bg-gradient-to-br from-yellow-50 to-yellow-100 rounded-lg p-4 border border-yellow-200\">\n                    <h3 className=\"text-base font-bold text-gray-900 mb-3 flex items-center\">\n                      <div className=\"w-3 h-3 bg-yellow-500 rounded-full mr-2\"></div>\n                      가격 정보\n                    </h3>\n                    <div className=\"space-y-2\">\n                      {property.transaction_type === \"매매\" &&\n                        property.price && (\n                          <div className=\"bg-blue-100 border border-blue-300 rounded p-2\">\n                            <div className=\"flex justify-between items-center\">\n                              <span className=\"text-sm font-bold text-blue-800\">\n                                매매가\n                              </span>\n                              <span className=\"text-base font-bold text-blue-900\">\n                                {formatMoney(property.price)}\n                              </span>\n                            </div>\n                          </div>\n                        )}\n\n                      {(property.transaction_type === \"전세\" ||\n                        property.transaction_type === \"월세\") &&\n                        property.deposit !== undefined && (\n                          <div className=\"bg-green-100 border border-green-300 rounded p-2\">\n                            <div className=\"flex justify-between items-center\">\n                              <span className=\"text-sm font-bold text-green-800\">\n                                {property.transaction_type === \"전세\"\n                                  ? \"전세금\"\n                                  : \"보증금\"}\n                              </span>\n                              <span className=\"text-base font-bold text-green-900\">\n                                {formatMoney(property.deposit)}\n                              </span>\n                            </div>\n                          </div>\n                        )}\n\n                      {property.transaction_type === \"월세\" &&\n                        property.monthly_rent && (\n                          <div className=\"bg-orange-100 border border-orange-300 rounded p-2\">\n                            <div className=\"flex justify-between items-center\">\n                              <span className=\"text-sm font-bold text-orange-800\">\n                                월세\n                              </span>\n                              <span className=\"text-base font-bold text-orange-900\">\n                                {property.monthly_rent}만원/월\n                              </span>\n                            </div>\n                          </div>\n                        )}\n                    </div>\n                  </div>\n\n                  {/* 편의시설 & 위치 */}\n                  <div className=\"bg-gradient-to-br from-green-50 to-green-100 rounded-lg p-4 border border-green-200\">\n                    <h3 className=\"text-base font-bold text-gray-900 mb-3 flex items-center\">\n                      <div className=\"w-3 h-3 bg-green-500 rounded-full mr-2\"></div>\n                      편의시설 & 위치\n                    </h3>\n                    <div className=\"space-y-2\">\n                      <div className=\"grid grid-cols-2 gap-2\">\n                        <div\n                          className={`flex items-center justify-center py-2 px-2 rounded text-sm font-semibold ${\n                            property.parking\n                              ? \"bg-green-100 text-green-800 border border-green-300\"\n                              : \"bg-gray-100 text-gray-600 border border-gray-300\"\n                          }`}\n                        >\n                          <Car className=\"w-4 h-4 mr-1\" />\n                          <span>주차</span>\n                        </div>\n                        <div\n                          className={`flex items-center justify-center py-2 px-2 rounded text-sm font-semibold ${\n                            property.elevator\n                              ? \"bg-green-100 text-green-800 border border-green-300\"\n                              : \"bg-gray-100 text-gray-600 border border-gray-300\"\n                          }`}\n                        >\n                          <ChevronUp className=\"w-4 h-4 mr-1\" />\n                          <span>EV</span>\n                        </div>\n                      </div>\n                      <div className=\"bg-white rounded p-2 border border-green-200\">\n                        <div className=\"flex items-start\">\n                          <MapPin className=\"w-4 h-4 text-green-500 mr-2 mt-0.5 flex-shrink-0\" />\n                          <div className=\"text-sm text-gray-900 leading-tight font-medium\">\n                            {property.address}\n                          </div>\n                        </div>\n                        {property.detailed_address && (\n                          <div className=\"text-sm text-gray-600 mt-1 ml-6 font-medium\">\n                            {property.detailed_address}\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* 임대인 & 날짜 정보 */}\n                  <div className=\"bg-gradient-to-br from-purple-50 to-purple-100 rounded-lg p-4 border border-purple-200\">\n                    <h3 className=\"text-base font-bold text-gray-900 mb-3 flex items-center\">\n                      <div className=\"w-3 h-3 bg-purple-500 rounded-full mr-2\"></div>\n                      임대인 & 날짜\n                    </h3>\n                    <div className=\"space-y-2 mb-3\">\n                      {property.landlord_name || property.landlord_phone ? (\n                        <>\n                          {property.landlord_name && (\n                            <div className=\"bg-white rounded p-2 border border-purple-200\">\n                              <div className=\"flex justify-between items-center\">\n                                <span className=\"text-sm font-semibold text-gray-700\">\n                                  임대인\n                                </span>\n                                <span className=\"text-base font-bold text-gray-900\">\n                                  {property.landlord_name}\n                                </span>\n                              </div>\n                            </div>\n                          )}\n                          {property.landlord_phone && (\n                            <div className=\"bg-white rounded p-2 border border-purple-200\">\n                              <div className=\"flex justify-between items-center\">\n                                <span className=\"text-sm font-semibold text-gray-700\">\n                                  연락처\n                                </span>\n                                <span className=\"text-base font-bold text-gray-900\">\n                                  {property.landlord_phone}\n                                </span>\n                              </div>\n                            </div>\n                          )}\n                        </>\n                      ) : (\n                        <div className=\"bg-white rounded p-2 border border-purple-200 text-center text-gray-500\">\n                          <User className=\"w-4 h-4 mx-auto mb-1 opacity-50\" />\n                          <div className=\"text-sm font-medium\">정보 없음</div>\n                        </div>\n                      )}\n                    </div>\n                    <div className=\"space-y-2\">\n                      {property.exit_date ? (\n                        <div className=\"bg-red-100 border border-red-300 rounded p-2\">\n                          <div className=\"flex justify-between items-center\">\n                            <span className=\"text-sm font-bold text-red-800\">\n                              퇴실예정\n                            </span>\n                            <span className=\"text-sm font-bold text-red-900\">\n                              {new Date(property.exit_date).toLocaleDateString(\n                                \"ko-KR\",\n                              )}\n                            </span>\n                          </div>\n                        </div>\n                      ) : (\n                        <div className=\"bg-green-100 border border-green-300 rounded p-2\">\n                          <div className=\"flex justify-between items-center\">\n                            <span className=\"text-sm font-bold text-green-800\">\n                              거주현황\n                            </span>\n                            <span className=\"text-sm font-bold text-green-900\">\n                              공실\n                            </span>\n                          </div>\n                        </div>\n                      )}\n\n                      <div className=\"bg-white border border-purple-200 rounded p-2\">\n                        <div className=\"flex justify-between items-center\">\n                          <span className=\"text-sm font-bold text-gray-800\">\n                            등록일\n                          </span>\n                          <span className=\"text-sm font-bold text-gray-900\">\n                            {new Date(property.created_at).toLocaleDateString(\n                              \"ko-KR\",\n                            )}\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                {/* 두 번째 행: 상세 설명 - 더 큰 글씨 */}\n                {property.description && (\n                  <div className=\"bg-gradient-to-r from-amber-50 to-amber-100 rounded-lg p-4 border border-amber-200\">\n                    <h3 className=\"text-base font-bold text-gray-900 mb-3 flex items-center\">\n                      <div className=\"w-3 h-3 bg-amber-500 rounded-full mr-2\"></div>\n                      상세 설명\n                    </h3>\n                    <div className=\"bg-white p-4 rounded border border-amber-200 max-h-32 overflow-y-auto\">\n                      <p className=\"text-sm text-gray-700 leading-relaxed whitespace-pre-wrap font-medium\">\n                        {property.description}\n                      </p>\n                    </div>\n                  </div>\n                )}\n              </div>\n            )}\n\n            {/* 모바일: 임대인 정보 - 초컴팩트 */}\n            {isMobile && (\n              <div className=\"space-y-2\">\n                <div className=\"bg-gradient-to-r from-purple-50 to-purple-100 rounded-lg p-2\">\n                  <h3 className=\"text-sm font-bold text-gray-900 mb-2 flex items-center\">\n                    <div className=\"w-2 h-2 bg-purple-500 rounded-full mr-1\"></div>\n                    임대인 & 날짜\n                  </h3>\n                  <div className=\"space-y-1\">\n                    {property.landlord_name || property.landlord_phone ? (\n                      <div className=\"bg-white border border-purple-200 rounded p-2 space-y-1\">\n                        {property.landlord_name && (\n                          <div className=\"flex justify-between items-center\">\n                            <span className=\"text-sm font-medium text-purple-800\">\n                              임대인\n                            </span>\n                            <span className=\"text-sm font-bold text-gray-900\">\n                              {property.landlord_name}\n                            </span>\n                          </div>\n                        )}\n                        {property.landlord_phone && (\n                          <div className=\"flex justify-between items-center\">\n                            <span className=\"text-sm font-medium text-purple-800\">\n                              연락처\n                            </span>\n                            <span className=\"text-sm font-bold text-gray-900\">\n                              {property.landlord_phone}\n                            </span>\n                          </div>\n                        )}\n                      </div>\n                    ) : (\n                      <div className=\"bg-white border border-purple-200 rounded p-2 text-center\">\n                        <User className=\"w-3 h-3 mx-auto mb-0.5 text-gray-400\" />\n                        <div className=\"text-xs text-gray-500\">정보 없음</div>\n                      </div>\n                    )}\n\n                    {/* 날짜 정보 - 한줄씩 */}\n                    <div className=\"space-y-1\">\n                      {property.exit_date ? (\n                        <div className=\"bg-red-100 border border-red-300 rounded p-1.5\">\n                          <div className=\"flex justify-between items-center\">\n                            <span className=\"text-sm font-bold text-red-800\">\n                              퇴실예정\n                            </span>\n                            <span className=\"text-sm font-bold text-red-900\">\n                              {new Date(property.exit_date).toLocaleDateString(\n                                \"ko-KR\",\n                                { month: \"short\", day: \"numeric\" },\n                              )}\n                            </span>\n                          </div>\n                        </div>\n                      ) : (\n                        <div className=\"bg-green-100 border border-green-300 rounded p-1.5\">\n                          <div className=\"flex justify-between items-center\">\n                            <span className=\"text-sm font-bold text-green-800\">\n                              거주현황\n                            </span>\n                            <span className=\"text-sm font-bold text-green-900\">\n                              공실\n                            </span>\n                          </div>\n                        </div>\n                      )}\n\n                      <div className=\"bg-white border border-purple-200 rounded p-1.5\">\n                        <div className=\"flex justify-between items-center\">\n                          <span className=\"text-sm font-bold text-gray-800\">\n                            등록일\n                          </span>\n                          <span className=\"text-sm font-bold text-gray-900\">\n                            {new Date(property.created_at).toLocaleDateString(\n                              \"ko-KR\",\n                              { month: \"short\", day: \"numeric\" },\n                            )}\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                {/* 상세 설명 - 초컴팩트 */}\n                {property.description && (\n                  <div className=\"bg-gradient-to-r from-amber-50 to-amber-100 rounded-lg p-2\">\n                    <h3 className=\"text-sm font-bold text-gray-900 mb-2 flex items-center\">\n                      <div className=\"w-2 h-2 bg-amber-500 rounded-full mr-1\"></div>\n                      상세 설명\n                    </h3>\n                    <div className=\"bg-white p-2 rounded border border-amber-200\">\n                      <p className=\"text-sm text-gray-700 leading-relaxed whitespace-pre-wrap\">\n                        {property.description}\n                      </p>\n                    </div>\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* 액션 버튼 섹션 */}\n        <div className=\"border-t border-gray-200 bg-white lg:bg-gray-50\">\n          {/* 모바일: 간단한 안전 영역만 */}\n          {isMobile && <div className=\"pb-safe-4\"></div>}\n\n          {/* 데스크톱: 개선된 가로 레이아웃 */}\n          {!isMobile && (\n            <div className=\"flex items-center justify-between p-6 bg-gray-50\">\n              <div></div>\n\n              {/* 액션 버튼들 */}\n              <div className=\"flex items-center space-x-3\">\n                <button\n                  onClick={onClose}\n                  className=\"px-4 py-2 text-sm text-gray-600 hover:text-gray-800 hover:bg-gray-100 rounded-lg transition-all duration-200 border border-gray-300 hover:border-gray-400 font-medium\"\n                >\n                  닫기\n                </button>\n\n                <button\n                  onClick={handleEditClick}\n                  className=\"px-5 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-all duration-200 font-medium text-sm flex items-center\"\n                >\n                  <Edit className=\"w-4 h-4 mr-2\" />\n                  수정하기\n                </button>\n\n                <button\n                  onClick={handleDeleteClick}\n                  className=\"px-5 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-all duration-200 font-medium text-sm flex items-center\"\n                >\n                  <Trash2 className=\"w-4 h-4 mr-2\" />\n                  삭제하기\n                </button>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","// ============================================================================\n// 매물 수정 폼 컴포넌트\n// ============================================================================\n\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport { X, Save } from \"lucide-react\";\nimport {\n  Button,\n  Input,\n  Select,\n  Card,\n  CardHeader,\n  CardTitle,\n  CardContent,\n  Modal,\n} from \"@/components/ui\";\nimport type {\n  Property,\n  PropertyType,\n  TransactionType,\n  PropertyStatus,\n  UpdatePropertyData,\n} from \"@/types\";\n\ninterface PropertyEditFormProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onSubmit: (data: UpdatePropertyData) => Promise<void>;\n  property: Property;\n  loading?: boolean;\n}\n\nconst PROPERTY_TYPES: PropertyType[] = [\n  \"아파트\",\n  \"오피스텔\",\n  \"원룸\",\n  \"빌라\",\n  \"단독주택\",\n  \"상가\",\n  \"사무실\",\n  \"기타\",\n];\n\nconst TRANSACTION_TYPES: TransactionType[] = [\n  \"매매\",\n  \"전세\",\n  \"월세\",\n  \"단기임대\",\n];\n\nconst PROPERTY_STATUS: PropertyStatus[] = [\"거래중\", \"거래완료\"];\n\nexport const PropertyEditForm: React.FC<PropertyEditFormProps> = ({\n  isOpen,\n  onClose,\n  onSubmit,\n  property,\n  loading = false,\n}) => {\n  const [formData, setFormData] = useState<UpdatePropertyData>({});\n  const [errors, setErrors] = useState<\n    Partial<Record<keyof UpdatePropertyData, string>>\n  >({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  // 프로퍼티가 변경될 때 폼 데이터 초기화\n  useEffect(() => {\n    if (property && isOpen) {\n      setFormData({\n        title: property.title,\n        type: property.type,\n        transaction_type: property.transaction_type,\n        status: property.status,\n        address: property.address,\n        detailed_address: property.detailed_address || \"\",\n        area: property.area,\n        floor: property.floor,\n        total_floors: property.total_floors,\n        rooms: property.rooms,\n        bathrooms: property.bathrooms,\n        parking: property.parking,\n        elevator: property.elevator,\n        price: property.price,\n        deposit: property.deposit,\n        monthly_rent: property.monthly_rent,\n        description: property.description || \"\",\n        landlord_name: property.landlord_name || \"\",\n        landlord_phone: property.landlord_phone || \"\",\n        exit_date: property.exit_date || \"\",\n      });\n      setErrors({});\n    }\n  }, [property, isOpen]);\n\n  const handleInputChange = useCallback(\n    (field: keyof UpdatePropertyData, value: any) => {\n      setFormData((prev) => ({\n        ...prev,\n        [field]: value,\n      }));\n\n      // 에러 제거\n      if (errors[field]) {\n        setErrors((prev) => ({\n          ...prev,\n          [field]: undefined,\n        }));\n      }\n    },\n    [errors],\n  );\n\n  const validateForm = (): boolean => {\n    const newErrors: Partial<Record<keyof UpdatePropertyData, string>> = {};\n\n    if (!formData.title?.trim()) {\n      newErrors.title = \"제목을 입력해주세요\";\n    }\n\n    if (!formData.address?.trim()) {\n      newErrors.address = \"주소를 입력해주세요\";\n    }\n\n    if (!formData.area || formData.area <= 0) {\n      newErrors.area = \"면적은 0보다 커야 합니다\";\n    }\n\n    if (!formData.floor || formData.floor < 1) {\n      newErrors.floor = \"층수는 1층 이상이어야 합니다\";\n    }\n\n    if (\n      !formData.total_floors ||\n      formData.total_floors < (formData.floor || 1)\n    ) {\n      newErrors.total_floors = \"전체 층수는 해당 층수보다 크거나 같아야 합니다\";\n    }\n\n    if (!formData.rooms || formData.rooms < 1) {\n      newErrors.rooms = \"방 개수는 1개 이상이어야 합니다\";\n    }\n\n    if (!formData.bathrooms || formData.bathrooms < 1) {\n      newErrors.bathrooms = \"화장실 개수는 1개 이상이어야 합니다\";\n    }\n\n    // 거래 유형별 가격 검증\n    if (\n      formData.transaction_type === \"매매\" &&\n      (!formData.price || formData.price <= 0)\n    ) {\n      newErrors.price = \"매매가를 입력해주세요\";\n    }\n\n    if (\n      formData.transaction_type === \"전세\" &&\n      (!formData.deposit || formData.deposit <= 0)\n    ) {\n      newErrors.deposit = \"전세금을 입력해주세요\";\n    }\n\n    if (formData.transaction_type === \"월세\") {\n      if (!formData.deposit || formData.deposit <= 0) {\n        newErrors.deposit = \"보증금을 입력해주세요\";\n      }\n      if (!formData.monthly_rent || formData.monthly_rent <= 0) {\n        newErrors.monthly_rent = \"월세를 입력해주세요\";\n      }\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (!validateForm() || isSubmitting) return;\n\n    // 개발 환경에서 수정 데이터 확인\n    if (import.meta.env.DEV) {\n      console.log(\"🔄 매물 수정 제출:\", {\n        매물ID: property.id,\n        제목: formData.title,\n        전체데이터: formData,\n      });\n    }\n\n    setIsSubmitting(true);\n    try {\n      await onSubmit(formData);\n      alert(\"✅ 매물이 성공적으로 수정되었습니다!\");\n      onClose();\n    } catch (error) {\n      console.error(\"매물 수정 실패:\", error);\n      const errorMessage =\n        error instanceof Error\n          ? error.message\n          : \"알 수 없는 오류가 발생했습니다.\";\n      alert(`❌ 매물 수정 실패: ${errorMessage}`);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose} size=\"lg\">\n      <Card>\n        <CardHeader>\n          <div className=\"flex items-center justify-between\">\n            <CardTitle>매물 정보 수정</CardTitle>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={onClose}\n              className=\"p-1 h-8 w-8\"\n            >\n              <X size={16} />\n            </Button>\n          </div>\n        </CardHeader>\n\n        <CardContent>\n          <form onSubmit={handleSubmit} className=\"space-y-6\">\n            {/* 기본 정보 */}\n            <div className=\"space-y-4\">\n              <h3 className=\"text-lg font-medium text-gray-900\">기본 정보</h3>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div className=\"md:col-span-2\">\n                  <Input\n                    label=\"매물 제목\"\n                    value={formData.title || \"\"}\n                    onChange={(e) => handleInputChange(\"title\", e.target.value)}\n                    error={errors.title}\n                    placeholder=\"예: 강남구 신사동 럭셔리 아파트\"\n                    required\n                  />\n                </div>\n\n                <Select\n                  label=\"매물 유형\"\n                  value={formData.type || \"\"}\n                  onChange={(e) =>\n                    handleInputChange(\"type\", e.target.value as PropertyType)\n                  }\n                  options={PROPERTY_TYPES.map((type) => ({\n                    value: type,\n                    label: type,\n                  }))}\n                  required\n                />\n\n                <Select\n                  label=\"거래 유형\"\n                  value={formData.transaction_type || \"\"}\n                  onChange={(e) =>\n                    handleInputChange(\n                      \"transaction_type\",\n                      e.target.value as TransactionType,\n                    )\n                  }\n                  options={TRANSACTION_TYPES.map((type) => ({\n                    value: type,\n                    label: type,\n                  }))}\n                  required\n                />\n\n                <Select\n                  label=\"매물 상태\"\n                  value={formData.status || \"\"}\n                  onChange={(e) =>\n                    handleInputChange(\n                      \"status\",\n                      e.target.value as PropertyStatus,\n                    )\n                  }\n                  options={PROPERTY_STATUS.map((status) => ({\n                    value: status,\n                    label: status,\n                  }))}\n                  required\n                />\n              </div>\n            </div>\n\n            {/* 위치 정보 */}\n            <div className=\"space-y-4\">\n              <h3 className=\"text-lg font-medium text-gray-900\">위치 정보</h3>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div className=\"md:col-span-2\">\n                  <Input\n                    label=\"주소\"\n                    value={formData.address || \"\"}\n                    onChange={(e) =>\n                      handleInputChange(\"address\", e.target.value)\n                    }\n                    error={errors.address}\n                    placeholder=\"예: 서울시 강남구 신사동 123-45\"\n                    required\n                  />\n                </div>\n\n                <Input\n                  label=\"상세 주소\"\n                  value={formData.detailed_address || \"\"}\n                  onChange={(e) =>\n                    handleInputChange(\"detailed_address\", e.target.value)\n                  }\n                  placeholder=\"예: 123동 456호\"\n                />\n              </div>\n            </div>\n\n            {/* 매물 정보 */}\n            <div className=\"space-y-4\">\n              <h3 className=\"text-lg font-medium text-gray-900\">매물 정보</h3>\n\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                <Input\n                  label=\"면적 (m²)\"\n                  type=\"number\"\n                  value={formData.area || \"\"}\n                  onChange={(e) =>\n                    handleInputChange(\"area\", parseFloat(e.target.value) || 0)\n                  }\n                  error={errors.area}\n                  placeholder=\"85.0\"\n                  min=\"0\"\n                  step=\"0.1\"\n                  required\n                />\n\n                <Input\n                  label=\"층수\"\n                  type=\"number\"\n                  value={formData.floor || \"\"}\n                  onChange={(e) =>\n                    handleInputChange(\"floor\", parseInt(e.target.value) || 1)\n                  }\n                  error={errors.floor}\n                  placeholder=\"15\"\n                  min=\"1\"\n                  required\n                />\n\n                <Input\n                  label=\"전체 층수\"\n                  type=\"number\"\n                  value={formData.total_floors || \"\"}\n                  onChange={(e) =>\n                    handleInputChange(\n                      \"total_floors\",\n                      parseInt(e.target.value) || 1,\n                    )\n                  }\n                  error={errors.total_floors}\n                  placeholder=\"25\"\n                  min=\"1\"\n                  required\n                />\n\n                <Input\n                  label=\"방 개수\"\n                  type=\"number\"\n                  value={formData.rooms || \"\"}\n                  onChange={(e) =>\n                    handleInputChange(\"rooms\", parseInt(e.target.value) || 1)\n                  }\n                  error={errors.rooms}\n                  placeholder=\"3\"\n                  min=\"1\"\n                  required\n                />\n\n                <Input\n                  label=\"화장실 개수\"\n                  type=\"number\"\n                  value={formData.bathrooms || \"\"}\n                  onChange={(e) =>\n                    handleInputChange(\n                      \"bathrooms\",\n                      parseInt(e.target.value) || 1,\n                    )\n                  }\n                  error={errors.bathrooms}\n                  placeholder=\"2\"\n                  min=\"1\"\n                  required\n                />\n              </div>\n\n              <div className=\"flex space-x-6\">\n                <label className=\"flex items-center space-x-2\">\n                  <input\n                    type=\"checkbox\"\n                    checked={formData.parking || false}\n                    onChange={(e) =>\n                      handleInputChange(\"parking\", e.target.checked)\n                    }\n                    className=\"rounded border-gray-300 text-primary-600 focus:ring-primary-500\"\n                  />\n                  <span className=\"text-sm font-medium text-gray-700\">\n                    주차 가능\n                  </span>\n                </label>\n\n                <label className=\"flex items-center space-x-2\">\n                  <input\n                    type=\"checkbox\"\n                    checked={formData.elevator || false}\n                    onChange={(e) =>\n                      handleInputChange(\"elevator\", e.target.checked)\n                    }\n                    className=\"rounded border-gray-300 text-primary-600 focus:ring-primary-500\"\n                  />\n                  <span className=\"text-sm font-medium text-gray-700\">\n                    엘리베이터\n                  </span>\n                </label>\n              </div>\n            </div>\n\n            {/* 가격 정보 */}\n            <div className=\"space-y-4\">\n              <h3 className=\"text-lg font-medium text-gray-900\">가격 정보</h3>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                {formData.transaction_type === \"매매\" && (\n                  <Input\n                    label=\"매매가 (만원)\"\n                    type=\"number\"\n                    value={formData.price || \"\"}\n                    onChange={(e) =>\n                      handleInputChange(\n                        \"price\",\n                        parseInt(e.target.value) || undefined,\n                      )\n                    }\n                    error={errors.price}\n                    placeholder=\"35000\"\n                    min=\"0\"\n                    required\n                  />\n                )}\n\n                {(formData.transaction_type === \"전세\" ||\n                  formData.transaction_type === \"월세\") && (\n                  <Input\n                    label={\n                      formData.transaction_type === \"전세\"\n                        ? \"전세금 (만원)\"\n                        : \"보증금 (만원)\"\n                    }\n                    type=\"number\"\n                    value={formData.deposit || \"\"}\n                    onChange={(e) =>\n                      handleInputChange(\n                        \"deposit\",\n                        parseInt(e.target.value) || undefined,\n                      )\n                    }\n                    error={errors.deposit}\n                    placeholder=\"21000\"\n                    min=\"0\"\n                    required\n                  />\n                )}\n\n                {formData.transaction_type === \"월세\" && (\n                  <Input\n                    label=\"월세 (만원)\"\n                    type=\"number\"\n                    value={formData.monthly_rent || \"\"}\n                    onChange={(e) =>\n                      handleInputChange(\n                        \"monthly_rent\",\n                        parseInt(e.target.value) || undefined,\n                      )\n                    }\n                    error={errors.monthly_rent}\n                    placeholder=\"65\"\n                    min=\"0\"\n                    required\n                  />\n                )}\n              </div>\n            </div>\n\n            {/* 임대인 정보 */}\n            <div className=\"space-y-4\">\n              <h3 className=\"text-lg font-medium text-gray-900\">임대인 정보</h3>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <Input\n                  label=\"임대인 이름\"\n                  value={formData.landlord_name || \"\"}\n                  onChange={(e) =>\n                    handleInputChange(\"landlord_name\", e.target.value)\n                  }\n                  placeholder=\"홍길동\"\n                />\n\n                <Input\n                  label=\"임대인 연락처\"\n                  value={formData.landlord_phone || \"\"}\n                  onChange={(e) =>\n                    handleInputChange(\"landlord_phone\", e.target.value)\n                  }\n                  placeholder=\"010-1234-5678\"\n                />\n              </div>\n            </div>\n\n            {/* 기타 정보 */}\n            <div className=\"space-y-4\">\n              <h3 className=\"text-lg font-medium text-gray-900\">기타 정보</h3>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <Input\n                  label=\"퇴실 예정일\"\n                  type=\"date\"\n                  value={formData.exit_date || \"\"}\n                  onChange={(e) =>\n                    handleInputChange(\"exit_date\", e.target.value)\n                  }\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  매물 설명\n                </label>\n                <textarea\n                  value={formData.description || \"\"}\n                  onChange={(e) =>\n                    handleInputChange(\"description\", e.target.value)\n                  }\n                  placeholder=\"매물에 대한 상세한 설명을 입력해주세요\"\n                  rows={4}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                />\n              </div>\n            </div>\n\n            {/* 폼 액션 */}\n            <div className=\"flex justify-end space-x-3 pt-6 border-t border-gray-200\">\n              <Button\n                type=\"button\"\n                variant=\"outline\"\n                onClick={onClose}\n                disabled={loading}\n              >\n                취소\n              </Button>\n              <Button\n                type=\"submit\"\n                variant=\"primary\"\n                loading={loading || isSubmitting}\n                leftIcon={<Save size={16} />}\n              >\n                수정 완료\n              </Button>\n            </div>\n          </form>\n        </CardContent>\n      </Card>\n    </Modal>\n  );\n};\n","// ============================================================================\n// 팀 관리 서비스 - Supabase 통합\n// ============================================================================\n\nimport { supabase } from \"./supabase\";\nimport { logger } from \"@/utils/logger\";\n\n// 이메일 전송 인터페이스\ninterface EmailInvitationData {\n  invitationToken: string;\n  recipientEmail: string;\n  inviterName: string;\n  teamName: string;\n  role: string;\n  message?: string;\n}\n\n// 초대 이메일 전송 함수\nconst sendInvitationEmail = async (data: EmailInvitationData) => {\n  const { data: result, error } = await supabase.functions.invoke(\n    \"send-team-invitation\",\n    {\n      body: data,\n    },\n  );\n\n  if (error) {\n    logger.error(\"Email sending failed\", {\n      error: error instanceof Error ? error.message : \"Unknown error\",\n      component: \"teamService\",\n      action: \"sendInvitationEmail\",\n    });\n    throw error;\n  }\n\n  return result;\n};\n\nexport interface TeamMember {\n  id: string;\n  tenant_id: string;\n  name: string;\n  email?: string;\n  phone?: string;\n  role: \"owner\" | \"admin\" | \"member\" | \"viewer\";\n  status: \"active\" | \"inactive\" | \"suspended\";\n  joined_at: string;\n  invited_by?: string;\n  company?: string;\n}\n\nexport interface TeamInvitation {\n  id: string;\n  tenant_id: string;\n  inviter_id: string;\n  email: string;\n  role: \"owner\" | \"admin\" | \"member\" | \"viewer\";\n  status: \"pending\" | \"accepted\" | \"declined\" | \"expired\";\n  invitation_token: string;\n  expires_at: string;\n  created_at: string;\n  inviter_name?: string;\n}\n\nexport interface CreateInvitationData {\n  email: string;\n  role: \"admin\" | \"member\" | \"viewer\";\n  message?: string;\n}\n\nexport interface AddExistingMemberData {\n  user_id: string;\n  role: \"admin\" | \"member\" | \"viewer\";\n}\n\nexport interface UpdateMemberData {\n  name?: string;\n  email?: string;\n  phone?: string;\n  company?: string;\n}\n\n// 팀 멤버 목록 조회\nexport const getTeamMembers = async (userId: string) => {\n  try {\n    // 사용자의 tenant_id 조회\n    const { data: userProfile, error: userError } = await supabase\n      .from(\"user_profiles\")\n      .select(\"tenant_id\")\n      .eq(\"id\", userId)\n      .single();\n\n    if (userError) throw userError;\n\n    // 팀 멤버들 조회 (이메일 포함)\n    const { data: members, error } = await supabase\n      .from(\"user_profiles\")\n      .select(\n        `\n        id,\n        tenant_id,\n        name,\n        email,\n        phone,\n        role,\n        status,\n        joined_at,\n        invited_by,\n        company\n      `,\n      )\n      .eq(\"tenant_id\", userProfile.tenant_id)\n      .order(\"joined_at\", { ascending: false });\n\n    if (error) throw error;\n\n    return members || [];\n  } catch (error) {\n    logger.error(\"Failed to fetch team members\", {\n      error: error instanceof Error ? error.message : \"Unknown error\",\n      component: \"teamService\",\n      action: \"getTeamMembers\",\n    });\n    throw error;\n  }\n};\n\n// 팀 초대 목록 조회\nexport const getTeamInvitations = async (userId: string) => {\n  try {\n    // 사용자의 tenant_id 조회\n    const { data: userProfile, error: userError } = await supabase\n      .from(\"user_profiles\")\n      .select(\"tenant_id\")\n      .eq(\"id\", userId)\n      .single();\n\n    if (userError) throw userError;\n\n    // 팀 초대들 조회\n    const { data: invitations, error } = await supabase\n      .from(\"team_invitations\")\n      .select(\n        `\n        id,\n        tenant_id,\n        inviter_id,\n        email,\n        role,\n        status,\n        invitation_token,\n        expires_at,\n        created_at\n      `,\n      )\n      .eq(\"tenant_id\", userProfile.tenant_id)\n      .order(\"created_at\", { ascending: false });\n\n    if (error) throw error;\n\n    // 초대자 이름들을 별도로 가져오기\n    if (invitations && invitations.length > 0) {\n      const inviterIds = [...new Set(invitations.map((inv) => inv.inviter_id))];\n      const { data: inviters } = await supabase\n        .from(\"user_profiles\")\n        .select(\"id, name\")\n        .in(\"id\", inviterIds);\n\n      const inviterMap =\n        inviters?.reduce(\n          (acc, inviter) => {\n            acc[inviter.id] = inviter.name;\n            return acc;\n          },\n          {} as Record<string, string>,\n        ) || {};\n\n      return invitations.map((inv) => ({\n        ...inv,\n        inviter_name: inviterMap[inv.inviter_id] || \"알 수 없는 사용자\",\n      }));\n    }\n\n    return [];\n  } catch (error) {\n    logger.error(\"Failed to fetch team invitations\", {\n      error: error instanceof Error ? error.message : \"Unknown error\",\n      component: \"teamService\",\n      action: \"getTeamInvitations\",\n    });\n    throw error;\n  }\n};\n\n// 이메일로 팀원 초대\nexport const inviteTeamMember = async (\n  userId: string,\n  invitationData: CreateInvitationData,\n) => {\n  try {\n    // 사용자의 tenant_id와 권한 확인 (팀 정보 포함)\n    const { data: userProfile, error: userError } = await supabase\n      .from(\"user_profiles\")\n      .select(\n        `\n        tenant_id, \n        role, \n        name,\n        tenant:tenant_id(name)\n      `,\n      )\n      .eq(\"id\", userId)\n      .single();\n\n    if (userError) throw userError;\n\n    // 권한 확인 (owner 또는 admin만 초대 가능)\n    if (userProfile.role !== \"owner\" && userProfile.role !== \"admin\") {\n      throw new Error(\"팀원을 초대할 권한이 없습니다.\");\n    }\n\n    // 이미 팀의 멤버인지 확인\n    const { data: existingMember } = await supabase\n      .from(\"user_profiles\")\n      .select(\"id\")\n      .eq(\"tenant_id\", userProfile.tenant_id)\n      .eq(\"email\", invitationData.email)\n      .single();\n\n    if (existingMember) {\n      throw new Error(\"이미 팀에 속한 회원입니다.\");\n    }\n\n    // 이미 초대된 이메일인지 확인\n    const { data: existingInvitation } = await supabase\n      .from(\"team_invitations\")\n      .select(\"id, status\")\n      .eq(\"tenant_id\", userProfile.tenant_id)\n      .eq(\"email\", invitationData.email)\n      .eq(\"status\", \"pending\")\n      .single();\n\n    if (existingInvitation) {\n      throw new Error(\"이미 초대된 이메일입니다.\");\n    }\n\n    // 새 초대 생성\n    const { data: invitation, error: inviteError } = await supabase\n      .from(\"team_invitations\")\n      .insert({\n        tenant_id: userProfile.tenant_id,\n        inviter_id: userId,\n        email: invitationData.email,\n        role: invitationData.role,\n      })\n      .select()\n      .single();\n\n    if (inviteError) throw inviteError;\n\n    // 이메일 전송\n    try {\n      await sendInvitationEmail({\n        invitationToken: invitation.invitation_token,\n        recipientEmail: invitationData.email,\n        inviterName: userProfile.name,\n        teamName:\n          (userProfile && \"tenant\" in userProfile && userProfile.tenant\n            ? (userProfile.tenant as any)?.name\n            : null) || \"팀\",\n        role: invitationData.role,\n        message: invitationData.message,\n      });\n    } catch (emailError) {\n      logger.warn(\"Email sending failed but invitation created\", {\n        error:\n          emailError instanceof Error ? emailError.message : \"Unknown error\",\n        component: \"teamService\",\n        action: \"inviteTeamMember\",\n      });\n      // 이메일 전송 실패해도 초대는 생성되도록 함\n    }\n\n    // 활동 로그 기록\n    await supabase.from(\"team_activity_logs\").insert({\n      tenant_id: userProfile.tenant_id,\n      user_id: userId,\n      action: \"invitation_sent\",\n      details: {\n        invited_email: invitationData.email,\n        role: invitationData.role,\n        message: invitationData.message,\n      },\n    });\n\n    return {\n      ...invitation,\n      inviteUrl: `${typeof window !== \"undefined\" ? window.location.origin : \"https://summi3-2mk8sy7pu-daesung75-6440s-projects.vercel.app\"}/team/invite?token=${invitation.invitation_token}`,\n    };\n  } catch (error) {\n    logger.error(\"Failed to invite team member\", {\n      error: error instanceof Error ? error.message : \"Unknown error\",\n      component: \"teamService\",\n      action: \"inviteTeamMember\",\n    });\n    throw error;\n  }\n};\n\n// 기존 회원을 팀에 추가\nexport const addExistingMember = async (\n  userId: string,\n  memberData: AddExistingMemberData,\n) => {\n  try {\n    // 사용자의 tenant_id와 권한 확인\n    const { data: userProfile, error: userError } = await supabase\n      .from(\"user_profiles\")\n      .select(\"tenant_id, role\")\n      .eq(\"id\", userId)\n      .single();\n\n    if (userError) throw userError;\n\n    // 권한 확인\n    if (userProfile.role !== \"owner\" && userProfile.role !== \"admin\") {\n      throw new Error(\"팀원을 추가할 권한이 없습니다.\");\n    }\n\n    // 추가하려는 사용자가 존재하는지 확인\n    const { data: targetUser, error: targetError } = await supabase\n      .from(\"user_profiles\")\n      .select(\"id, name, email, tenant_id\")\n      .eq(\"id\", memberData.user_id)\n      .single();\n\n    if (targetError) {\n      throw new Error(\"존재하지 않는 사용자입니다.\");\n    }\n\n    // 이미 같은 팀의 멤버인지 확인\n    if (targetUser.tenant_id === userProfile.tenant_id) {\n      throw new Error(\"이미 팀에 속한 회원입니다.\");\n    }\n\n    // 다른 팀에 속한 회원도 추가 가능\n    // 해당 사용자는 새로운 팀으로 이동하게 됩니다\n\n    // 팀에 추가\n    const { data: updatedMember, error: updateError } = await supabase\n      .from(\"user_profiles\")\n      .update({\n        tenant_id: userProfile.tenant_id,\n        role: memberData.role,\n        invited_by: userId,\n        joined_at: new Date().toISOString(),\n      })\n      .eq(\"id\", memberData.user_id)\n      .select()\n      .single();\n\n    if (updateError) throw updateError;\n\n    // 활동 로그 기록\n    await supabase.from(\"team_activity_logs\").insert({\n      tenant_id: userProfile.tenant_id,\n      user_id: userId,\n      action: \"member_added\",\n      details: {\n        added_user_id: memberData.user_id,\n        added_user_name: targetUser.name,\n        role: memberData.role,\n        previous_tenant_id: targetUser.tenant_id, // 이전 팀 정보 기록\n        transferred_from_team: targetUser.tenant_id ? true : false,\n      },\n    });\n\n    return updatedMember;\n  } catch (error) {\n    logger.error(\"Failed to add team member\", {\n      error: error instanceof Error ? error.message : \"Unknown error\",\n      component: \"teamService\",\n      action: \"addTeamMember\",\n    });\n    throw error;\n  }\n};\n\n// 팀원 역할 변경\nexport const updateMemberRole = async (\n  userId: string,\n  memberId: string,\n  newRole: TeamMember[\"role\"],\n) => {\n  try {\n    // 사용자의 tenant_id와 권한 확인\n    const { data: userProfile, error: userError } = await supabase\n      .from(\"user_profiles\")\n      .select(\"tenant_id, role\")\n      .eq(\"id\", userId)\n      .single();\n\n    if (userError) throw userError;\n\n    // 권한 확인 (owner만 역할 변경 가능, 또는 admin이 member/viewer 변경 가능)\n    if (\n      userProfile.role !== \"owner\" &&\n      !(userProfile.role === \"admin\" && [\"member\", \"viewer\"].includes(newRole))\n    ) {\n      throw new Error(\"역할을 변경할 권한이 없습니다.\");\n    }\n\n    // 자기 자신의 역할은 변경할 수 없음\n    if (userId === memberId) {\n      throw new Error(\"자신의 역할은 변경할 수 없습니다.\");\n    }\n\n    // 멤버 역할 업데이트\n    const { data: updatedMember, error: updateError } = await supabase\n      .from(\"user_profiles\")\n      .update({ role: newRole })\n      .eq(\"id\", memberId)\n      .eq(\"tenant_id\", userProfile.tenant_id)\n      .select()\n      .single();\n\n    if (updateError) throw updateError;\n\n    // 활동 로그 기록\n    await supabase.from(\"team_activity_logs\").insert({\n      tenant_id: userProfile.tenant_id,\n      user_id: userId,\n      action: \"role_changed\",\n      details: {\n        target_user_id: memberId,\n        new_role: newRole,\n      },\n    });\n\n    return updatedMember;\n  } catch (error) {\n    logger.error(\"Failed to change member role\", {\n      error: error instanceof Error ? error.message : \"Unknown error\",\n      component: \"teamService\",\n      action: \"changeMemberRole\",\n    });\n    throw error;\n  }\n};\n\n// 팀에서 멤버 제거\nexport const removeMember = async (userId: string, memberId: string) => {\n  try {\n    // 사용자의 tenant_id와 권한 확인\n    const { data: userProfile, error: userError } = await supabase\n      .from(\"user_profiles\")\n      .select(\"tenant_id, role\")\n      .eq(\"id\", userId)\n      .single();\n\n    if (userError) throw userError;\n\n    // 권한 확인 (owner 또는 admin만 제거 가능)\n    if (userProfile.role !== \"owner\" && userProfile.role !== \"admin\") {\n      throw new Error(\"팀원을 제거할 권한이 없습니다.\");\n    }\n\n    // 자기 자신은 제거할 수 없음\n    if (userId === memberId) {\n      throw new Error(\"자신을 팀에서 제거할 수 없습니다.\");\n    }\n\n    // 제거할 멤버 정보 조회\n    const { data: memberToRemove, error: memberError } = await supabase\n      .from(\"user_profiles\")\n      .select(\"name, role\")\n      .eq(\"id\", memberId)\n      .eq(\"tenant_id\", userProfile.tenant_id)\n      .single();\n\n    if (memberError) {\n      throw new Error(\"팀에서 해당 멤버를 찾을 수 없습니다.\");\n    }\n\n    // owner는 제거할 수 없음\n    if (memberToRemove.role === \"owner\") {\n      throw new Error(\"팀 소유자는 제거할 수 없습니다.\");\n    }\n\n    // 새 개인 테넌트 생성\n    const { data: newTenant, error: tenantError } = await supabase\n      .from(\"tenants\")\n      .insert({\n        name: `${memberToRemove.name}의 부동산`,\n      })\n      .select()\n      .single();\n\n    if (tenantError) throw tenantError;\n\n    // 멤버를 새 테넌트로 이동\n    const { error: updateError } = await supabase\n      .from(\"user_profiles\")\n      .update({\n        tenant_id: newTenant.id,\n        role: \"owner\",\n        invited_by: null,\n      })\n      .eq(\"id\", memberId);\n\n    if (updateError) throw updateError;\n\n    // 활동 로그 기록\n    await supabase.from(\"team_activity_logs\").insert({\n      tenant_id: userProfile.tenant_id,\n      user_id: userId,\n      action: \"member_removed\",\n      details: {\n        removed_user_id: memberId,\n        removed_user_name: memberToRemove.name,\n      },\n    });\n\n    return true;\n  } catch (error) {\n    logger.error(\"Failed to remove team member\", {\n      error: error instanceof Error ? error.message : \"Unknown error\",\n      component: \"teamService\",\n      action: \"removeTeamMember\",\n    });\n    throw error;\n  }\n};\n\n// 초대 취소\nexport const cancelInvitation = async (\n  userId: string,\n  invitationId: string,\n) => {\n  try {\n    // 사용자의 tenant_id와 권한 확인\n    const { data: userProfile, error: userError } = await supabase\n      .from(\"user_profiles\")\n      .select(\"tenant_id, role\")\n      .eq(\"id\", userId)\n      .single();\n\n    if (userError) throw userError;\n\n    // 권한 확인\n    if (userProfile.role !== \"owner\" && userProfile.role !== \"admin\") {\n      throw new Error(\"초대를 취소할 권한이 없습니다.\");\n    }\n\n    // 초대 삭제\n    const { error } = await supabase\n      .from(\"team_invitations\")\n      .delete()\n      .eq(\"id\", invitationId)\n      .eq(\"tenant_id\", userProfile.tenant_id);\n\n    if (error) throw error;\n\n    return true;\n  } catch (error) {\n    logger.error(\"Failed to cancel invitation\", {\n      error: error instanceof Error ? error.message : \"Unknown error\",\n      component: \"teamService\",\n      action: \"cancelInvitation\",\n    });\n    throw error;\n  }\n};\n\n// 사용자 검색 (기존 회원 추가용)\nexport const searchUsers = async (query: string, currentUserId: string) => {\n  try {\n    // 현재 사용자의 tenant_id 조회\n    const { data: userProfile, error: userError } = await supabase\n      .from(\"user_profiles\")\n      .select(\"tenant_id\")\n      .eq(\"id\", currentUserId)\n      .single();\n\n    if (userError) throw userError;\n\n    // 이메일 또는 이름으로 검색 (현재 팀에 속하지 않은 사용자만)\n    const { data: users, error } = await supabase\n      .from(\"user_profiles\")\n      .select(\"id, name, email, company\")\n      .or(`name.ilike.%${query}%,email.ilike.%${query}%`)\n      .or(`tenant_id.is.null,tenant_id.neq.${userProfile.tenant_id}`)\n      .neq(\"id\", currentUserId)\n      .limit(10);\n\n    if (error) throw error;\n\n    return users || [];\n  } catch (error) {\n    logger.error(\"Failed to search users\", {\n      error: error instanceof Error ? error.message : \"Unknown error\",\n      component: \"teamService\",\n      action: \"searchUsers\",\n    });\n    throw error;\n  }\n};\n\n// 팀원 정보 업데이트\nexport const updateMemberInfo = async (\n  userId: string,\n  memberId: string,\n  updateData: UpdateMemberData,\n) => {\n  try {\n    // 사용자의 tenant_id와 권한 확인\n    const { data: userProfile, error: userError } = await supabase\n      .from(\"user_profiles\")\n      .select(\"tenant_id, role\")\n      .eq(\"id\", userId)\n      .single();\n\n    if (userError) throw userError;\n\n    // 권한 확인 (owner 또는 admin만 다른 멤버 정보 수정 가능, 본인은 언제나 가능)\n    if (\n      userId !== memberId &&\n      userProfile.role !== \"owner\" &&\n      userProfile.role !== \"admin\"\n    ) {\n      throw new Error(\"팀원 정보를 수정할 권한이 없습니다.\");\n    }\n\n    // 멤버 정보 업데이트\n    const { data: updatedMember, error: updateError } = await supabase\n      .from(\"user_profiles\")\n      .update(updateData)\n      .eq(\"id\", memberId)\n      .eq(\"tenant_id\", userProfile.tenant_id)\n      .select()\n      .single();\n\n    if (updateError) throw updateError;\n\n    // 활동 로그 기록 (본인이 아닌 경우에만)\n    if (userId !== memberId) {\n      await supabase.from(\"team_activity_logs\").insert({\n        tenant_id: userProfile.tenant_id,\n        user_id: userId,\n        action: \"member_info_updated\",\n        details: {\n          target_user_id: memberId,\n          updated_fields: Object.keys(updateData),\n        },\n      });\n    }\n\n    return updatedMember;\n  } catch (error) {\n    logger.error(\"Failed to update member info\", {\n      error: error instanceof Error ? error.message : \"Unknown error\",\n      component: \"teamService\",\n      action: \"updateMemberInfo\",\n    });\n    throw error;\n  }\n};\n\n// 팀원 상태 변경 (활성/비활성/정지)\nexport const updateMemberStatus = async (\n  userId: string,\n  memberId: string,\n  newStatus: TeamMember[\"status\"],\n) => {\n  try {\n    // 사용자의 tenant_id와 권한 확인\n    const { data: userProfile, error: userError } = await supabase\n      .from(\"user_profiles\")\n      .select(\"tenant_id, role\")\n      .eq(\"id\", userId)\n      .single();\n\n    if (userError) throw userError;\n\n    // 권한 확인 (owner 또는 admin만 상태 변경 가능)\n    if (userProfile.role !== \"owner\" && userProfile.role !== \"admin\") {\n      throw new Error(\"팀원 상태를 변경할 권한이 없습니다.\");\n    }\n\n    // 자기 자신의 상태는 변경할 수 없음\n    if (userId === memberId) {\n      throw new Error(\"자신의 상태는 변경할 수 없습니다.\");\n    }\n\n    // 멤버 상태 업데이트\n    const { data: updatedMember, error: updateError } = await supabase\n      .from(\"user_profiles\")\n      .update({ status: newStatus })\n      .eq(\"id\", memberId)\n      .eq(\"tenant_id\", userProfile.tenant_id)\n      .select()\n      .single();\n\n    if (updateError) throw updateError;\n\n    // 활동 로그 기록\n    await supabase.from(\"team_activity_logs\").insert({\n      tenant_id: userProfile.tenant_id,\n      user_id: userId,\n      action: \"member_status_changed\",\n      details: {\n        target_user_id: memberId,\n        new_status: newStatus,\n      },\n    });\n\n    return updatedMember;\n  } catch (error) {\n    logger.error(\"Failed to change member status\", {\n      error: error instanceof Error ? error.message : \"Unknown error\",\n      component: \"teamService\",\n      action: \"changeMemberStatus\",\n    });\n    throw error;\n  }\n};\n\n// 팀 활동 로그 조회\nexport const getTeamActivityLogs = async (\n  userId: string,\n  limit: number = 50,\n) => {\n  try {\n    // 사용자의 tenant_id 조회\n    const { data: userProfile, error: userError } = await supabase\n      .from(\"user_profiles\")\n      .select(\"tenant_id, role\")\n      .eq(\"id\", userId)\n      .single();\n\n    if (userError) throw userError;\n\n    // 권한 확인 (owner 또는 admin만 활동 로그 조회 가능)\n    if (userProfile.role !== \"owner\" && userProfile.role !== \"admin\") {\n      throw new Error(\"활동 로그를 조회할 권한이 없습니다.\");\n    }\n\n    // 활동 로그 조회\n    const { data: logs, error } = await supabase\n      .from(\"team_activity_logs\")\n      .select(\n        `\n        id,\n        action,\n        details,\n        created_at,\n        user_id\n      `,\n      )\n      .eq(\"tenant_id\", userProfile.tenant_id)\n      .order(\"created_at\", { ascending: false })\n      .limit(limit);\n\n    if (error) throw error;\n\n    // 사용자 이름들을 별도로 가져오기\n    if (logs && logs.length > 0) {\n      const userIds = [...new Set(logs.map((log) => log.user_id))];\n      const { data: users } = await supabase\n        .from(\"user_profiles\")\n        .select(\"id, name\")\n        .in(\"id\", userIds);\n\n      const userMap =\n        users?.reduce(\n          (acc, user) => {\n            acc[user.id] = user.name;\n            return acc;\n          },\n          {} as Record<string, string>,\n        ) || {};\n\n      return logs.map((log) => ({\n        ...log,\n        user_name: userMap[log.user_id] || \"알 수 없는 사용자\",\n      }));\n    }\n\n    return [];\n  } catch (error) {\n    logger.error(\"Failed to fetch team activity logs\", {\n      error: error instanceof Error ? error.message : \"Unknown error\",\n      component: \"teamService\",\n      action: \"getTeamActivityLogs\",\n    });\n    throw error;\n  }\n};\n","// ============================================================================\n// 대시보드 페이지\n// ============================================================================\n\nimport React, { useState, useEffect } from \"react\";\nimport { Home, Users, TrendingUp, Calendar } from \"lucide-react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Card, CardContent, Badge } from \"@/components/ui\";\nimport { useTenant } from \"@/contexts/TenantContext\";\nimport { useAuth } from \"@/contexts/AuthContext\";\nimport { usePropertyStats, useProperties } from \"@/hooks/useProperties\";\n// import { PropertyTrendChart, PropertyTypeChart } from \"@/components/charts\"; // 차트 제거\nimport { StatCard, ScheduleSummary } from \"@/components/dashboard\";\nimport { PropertyCard, PropertyDetailModal } from \"@/components/property\";\nimport { PropertyEditForm } from \"@/components/forms/PropertyEditForm\";\nimport { Property, UpdatePropertyData } from \"@/types/property\";\nimport { Schedule } from \"@/types/schedule\";\nimport * as teamService from \"@/services/teamService\";\nimport { scheduleService } from \"@/services/scheduleService\";\n\nconst DashboardPage: React.FC = () => {\n  const navigate = useNavigate();\n  const { tenant } = useTenant();\n  const { user } = useAuth();\n  const {\n    stats,\n    loading: statsLoading,\n    error: statsError,\n  } = usePropertyStats();\n  const { properties, loading, updateProperty, deleteProperty, refreshProperties } =\n    useProperties();\n\n  // 팀원 수 상태 관리\n  const [teamMemberCount, setTeamMemberCount] = useState<number>(1);\n  const [teamLoading, setTeamLoading] = useState(true);\n\n  // 일정 상태 관리\n  const [todaySchedules, setTodaySchedules] = useState<Schedule[]>([]);\n  const [upcomingSchedules, setUpcomingSchedules] = useState<Schedule[]>([]);\n  const [schedulesLoading, setSchedulesLoading] = useState(true);\n\n  // 상세 모달 상태 관리\n  const [selectedProperty, setSelectedProperty] = useState<Property | null>(\n    null,\n  );\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  // 수정 폼 상태 관리\n  const [editFormOpen, setEditFormOpen] = useState(false);\n  const [editLoading, setEditLoading] = useState(false);\n  const [editingProperty, setEditingProperty] = useState<Property | null>(null);\n\n  // 팀원 수 가져오기\n  useEffect(() => {\n    const fetchTeamMembers = async () => {\n      if (!user?.id) return;\n\n      try {\n        setTeamLoading(true);\n        const members = await teamService.getTeamMembers(user.id);\n        setTeamMemberCount(members.length);\n      } catch (error) {\n        console.error(\"팀원 수 조회 실패:\", error);\n        setTeamMemberCount(1); // 기본값\n      } finally {\n        setTeamLoading(false);\n      }\n    };\n\n    fetchTeamMembers();\n  }, [user?.id]);\n\n  // 일정 데이터 가져오기\n  useEffect(() => {\n    const fetchSchedules = async () => {\n      if (!user?.id) return;\n\n      try {\n        setSchedulesLoading(true);\n        \n        // 사용자 ID를 테넌트 ID로 사용\n        const tenantId = user.id;\n        \n        const [todayData, upcomingData] = await Promise.all([\n          scheduleService.getTodaySchedules(tenantId, 3),\n          scheduleService.getUpcomingSchedules(tenantId, 3)\n        ]);\n        \n        setTodaySchedules(todayData);\n        setUpcomingSchedules(upcomingData);\n      } catch (error) {\n        console.error(\"일정 조회 실패:\", error);\n        setTodaySchedules([]);\n        setUpcomingSchedules([]);\n      } finally {\n        setSchedulesLoading(false);\n      }\n    };\n\n    fetchSchedules();\n  }, [user?.id]);\n\n  // 일정 페이지로 이동 핸들러\n  const handleViewAllSchedules = () => {\n    navigate('/schedule');\n  };\n\n  // 매물 클릭 핸들러\n  const handlePropertyClick = (property: Property) => {\n    setSelectedProperty(property);\n    setIsModalOpen(true);\n  };\n\n  // 모달 닫기 핸들러\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setSelectedProperty(null);\n  };\n\n  // 매물 수정 핸들러\n  const handleEditProperty = async (data: UpdatePropertyData) => {\n    if (!editingProperty) return;\n\n    try {\n      setEditLoading(true);\n      await updateProperty(editingProperty.id, data);\n      setEditFormOpen(false);\n      setEditingProperty(null);\n      // 목록 새로고침\n      await refreshProperties();\n      alert(\"✅ 매물이 성공적으로 수정되었습니다!\");\n    } catch (error) {\n      console.error(\"매물 수정 실패:\", error);\n      const errorMessage =\n        error instanceof Error\n          ? error.message\n          : \"알 수 없는 오류가 발생했습니다.\";\n      alert(`❌ 매물 수정 실패: ${errorMessage}`);\n      throw error;\n    } finally {\n      setEditLoading(false);\n    }\n  };\n\n  // 수정 폼 열기 핸들러\n  const handleOpenEditForm = (property: Property) => {\n    console.log(\"📝 대시보드에서 수정 폼 열기:\", property.title);\n    setEditingProperty(property);\n    setEditFormOpen(true);\n    setIsModalOpen(false); // 상세 모달 닫기\n  };\n\n  // 삭제 확인 핸들러\n  const handleConfirmDelete = async (property: Property) => {\n    console.log(\"🗑️ 대시보드에서 삭제 요청:\", property.title);\n\n    const confirmDelete = window.confirm(\n      `'${property.title}' 매물을 정말 삭제하시겠습니까?\\n\\n이 작업은 되돌릴 수 없습니다.`,\n    );\n\n    if (confirmDelete) {\n      try {\n        await deleteProperty(property.id);\n        setIsModalOpen(false);\n        setSelectedProperty(null);\n        // 목록 새로고침\n        await refreshProperties();\n        alert(\"✅ 매물이 성공적으로 삭제되었습니다!\");\n      } catch (error) {\n        console.error(\"매물 삭제 실패:\", error);\n        const errorMessage =\n          error instanceof Error\n            ? error.message\n            : \"알 수 없는 오류가 발생했습니다.\";\n        alert(`❌ 매물 삭제 실패: ${errorMessage}`);\n      }\n    }\n  };\n\n  // 실제 통계 데이터 또는 기본값\n  const dashboardStats = [\n    {\n      title: \"총 매물\",\n      value: (stats?.total ?? 0).toString(),\n      change: \"+12%\",\n      icon: Home,\n      color: \"text-blue-600\",\n    },\n    {\n      title: \"활성 매물\",\n      value: (stats?.active ?? 0).toString(),\n      change: \"+5%\",\n      icon: TrendingUp,\n      color: \"text-green-600\",\n    },\n    {\n      title: \"팀원\",\n      value: teamMemberCount.toString(),\n      change: teamMemberCount > 1 ? `+${teamMemberCount - 1}` : \"0\",\n      icon: Users,\n      color: \"text-purple-600\",\n    },\n    {\n      title: \"이번 달 등록\",\n      value: (stats?.this_month ?? 0).toString(),\n      change: \"+18%\",\n      icon: Calendar,\n      color: \"text-orange-600\",\n    },\n  ];\n\n  const recentProperties = [\n    {\n      id: 1,\n      title: \"강남구 신사동 럭셔리 아파트\",\n      type: \"아파트\",\n      transactionType: \"매매\",\n      price: \"35억\",\n      // 매물 상태 필드 삭제됨\n      createdAt: \"2시간 전\",\n    },\n    {\n      id: 2,\n      title: \"성남시 분당구 정자동\",\n      type: \"아파트\",\n      transactionType: \"전세\",\n      price: \"2억 1천만원\",\n      // 매물 상태 필드 삭제됨\n      createdAt: \"5시간 전\",\n    },\n    {\n      id: 3,\n      title: \"홍대 신축 오피스텔\",\n      type: \"오피스텔\",\n      transactionType: \"월세\",\n      price: \"1000/65만원\",\n      // 매물 상태 필드 삭제됨\n      createdAt: \"1일 전\",\n    },\n  ];\n\n  // 로딩 상태 처리\n  if (loading || statsLoading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-4 sm:space-y-6 pb-20 sm:pb-6\">\n      {/* 페이지 헤더 - 모바일 최적화 */}\n      <div className=\"px-1 sm:px-0\">\n        <h1 className=\"text-lg sm:text-2xl font-bold leading-tight\">\n          안녕하세요, {user?.name || \"사용자\"}님! 👋\n        </h1>\n        <h2 className=\"text-sm sm:text-base text-gray-600 mt-1 lg:hidden\">\n          {tenant?.name || \"리체 매물장\"}\n        </h2>\n        <h2 className=\"hidden lg:block text-2xl font-bold mt-1\">\n          {tenant?.name || \"리체 매물장\"}에 오신 것을 환영합니다 👋\n        </h2>\n        <p className=\"text-sm sm:text-base text-gray-600 mt-1\">오늘의 매물 현황을 확인해보세요</p>\n      </div>\n\n      {/* 통계 카드 - 모바일 최적화 */}\n      {statsLoading ? (\n        <div className=\"grid grid-cols-2 sm:grid-cols-4 gap-3 sm:gap-4 lg:gap-6\">\n          {[1, 2, 3, 4].map((i) => (\n            <Card key={i} className=\"animate-pulse\">\n              <CardContent className=\"p-3 sm:p-4 lg:p-6\">\n                <div className=\"flex flex-col space-y-2\">\n                  <div className=\"h-3 sm:h-4 bg-gray-200 rounded w-3/4\"></div>\n                  <div className=\"h-6 sm:h-8 bg-gray-200 rounded w-1/2\"></div>\n                  <div className=\"h-3 bg-gray-200 rounded w-1/3 hidden sm:block\"></div>\n                </div>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      ) : statsError ? (\n        <Card className=\"p-4 sm:p-6\">\n          <p className=\"text-red-600 text-center text-sm sm:text-base\">{statsError}</p>\n        </Card>\n      ) : (\n        <div className=\"grid grid-cols-2 sm:grid-cols-4 gap-3 sm:gap-4 lg:gap-6\">\n          {dashboardStats.map((stat, index) => (\n            <StatCard\n              key={index}\n              title={stat.title}\n              value={stat.value}\n              change={stat.change}\n              icon={stat.icon}\n              color={stat.color}\n              loading={stat.title === \"팀원\" ? teamLoading : statsLoading}\n            />\n          ))}\n        </div>\n      )}\n\n\n      {/* 일정 섹션 */}\n      <div className=\"space-y-4 lg:space-y-6\">\n        <div>\n          <h2 className=\"text-xl font-semibold mb-4 flex items-center\">\n            <Calendar className=\"w-5 h-5 mr-2 text-blue-600\" />\n            일정 관리\n          </h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 lg:gap-6\">\n            {/* 당일 일정 */}\n            <ScheduleSummary\n              title=\"오늘 일정\"\n              schedules={todaySchedules}\n              loading={schedulesLoading}\n              emptyMessage=\"오늘 등록된 일정이 없습니다.\"\n              onViewAll={handleViewAllSchedules}\n            />\n            \n            {/* 다가올 일정 */}\n            <ScheduleSummary\n              title=\"다가올 일정\"\n              schedules={upcomingSchedules}\n              loading={schedulesLoading}\n              emptyMessage=\"예정된 일정이 없습니다.\"\n              onViewAll={handleViewAllSchedules}\n            />\n          </div>\n        </div>\n      </div>\n\n      {/* 최근 등록 매물 - 새로운 카드 디자인 */}\n      <div className=\"space-y-6\">\n        <div>\n          <h2 className=\"text-xl font-semibold mb-4\">최근 등록 매물</h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4\">\n            {properties\n              ?.slice(0, 4)\n              .map((property) => (\n                <PropertyCard\n                  key={property.id}\n                  property={property}\n                  onClick={handlePropertyClick}\n                />\n              )) ||\n              recentProperties.map((property) => (\n                <div\n                  key={property.id}\n                  className=\"card bg-white rounded-xl border border-gray-200 hover:border-blue-300 hover:shadow-md transition-all duration-200 cursor-pointer p-4 space-y-3\"\n                  onClick={() => {\n                    /* Mock 데이터이므로 실제 Property 객체로 변환 필요 */\n                  }}\n                >\n                  <h3 className=\"font-semibold text-lg line-clamp-1\">\n                    {property.title}\n                  </h3>\n                  <div className=\"flex items-center text-gray-600\">\n                    <span className=\"text-sm\">강남구</span>\n                  </div>\n                  <div className=\"flex items-center text-gray-900\">\n                    <span className=\"font-bold text-lg\">{property.price}</span>\n                  </div>\n                  <div className=\"border-t border-gray-100 pt-3 flex items-center justify-between\">\n                    <div className=\"flex items-center space-x-2\">\n                      <span className=\"text-xs text-gray-500\">\n                        {property.type}\n                      </span>\n                      <span className=\"text-gray-300\">•</span>\n                      <span className=\"text-xs text-gray-500\">\n                        {property.transactionType}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center\">\n                      <span className=\"inline-block w-2 h-2 rounded-full mr-2 bg-blue-400\" />\n                      <span className=\"text-xs font-medium text-blue-600\">\n                        등록됨\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              ))}\n          </div>\n        </div>\n      </div>\n\n      {/* 플랜 정보 (테넌트별) */}\n      {tenant && (\n        <Card className=\"bg-gradient-to-r from-primary-50 to-blue-50 border-primary-200\">\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <h3 className=\"text-lg font-semibold\">\n                  {tenant.plan ? (tenant.plan.charAt(0).toUpperCase() + tenant.plan.slice(1)) : \"기본\"}{\" \"}\n                  플랜\n                </h3>\n                <p className=\"text-gray-600 mt-1\">\n                  매물 {tenant.limits.max_properties}개 · 팀원{\" \"}\n                  {tenant.limits.max_users}명 · 스토리지{\" \"}\n                  {tenant.limits.max_storage_gb}GB\n                </p>\n              </div>\n              <div className=\"text-right\">\n                <Badge variant=\"tenant\" size=\"lg\">\n                  {tenant.status === \"trial\" ? \"체험 중\" : \"활성\"}\n                </Badge>\n                {tenant.trial_ends_at && (\n                  <p className=\"text-xs text-gray-600 mt-1\">\n                    체험 종료:{\" \"}\n                    {new Date(tenant.trial_ends_at).toLocaleDateString()}\n                  </p>\n                )}\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* 매물 상세 모달 */}\n      <PropertyDetailModal\n        property={selectedProperty}\n        isOpen={isModalOpen}\n        onClose={handleCloseModal}\n        onEdit={handleOpenEditForm}\n        onDelete={handleConfirmDelete}\n      />\n\n      {/* 매물 수정 폼 모달 */}\n      {editingProperty && (\n        <PropertyEditForm\n          isOpen={editFormOpen}\n          onClose={() => {\n            setEditFormOpen(false);\n            setEditingProperty(null);\n          }}\n          onSubmit={handleEditProperty}\n          property={editingProperty}\n          loading={editLoading}\n        />\n      )}\n    </div>\n  );\n};\n\nexport { DashboardPage };\n","// ============================================================================\n// 매물 등록 폼 컴포넌트 - 개선된 디자인\n// ============================================================================\n\nimport React, { useState, useCallback, useMemo } from \"react\";\nimport {\n  X,\n  Save,\n  Home,\n  MapPin,\n  DollarSign,\n  User,\n  FileText,\n  Settings,\n} from \"lucide-react\";\nimport { Button, Input, Select, Modal } from \"@/components/ui\";\nimport type {\n  CreatePropertyData,\n  PropertyType,\n  TransactionType,\n  PropertyStatus,\n} from \"@/types\";\n\ninterface PropertyCreateFormProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onSubmit: (data: CreatePropertyData) => Promise<void>;\n  loading?: boolean;\n}\n\nconst PROPERTY_TYPES: PropertyType[] = [\n  \"아파트\",\n  \"오피스텔\",\n  \"원룸\",\n  \"빌라\",\n  \"단독주택\",\n  \"상가\",\n  \"사무실\",\n  \"기타\",\n];\n\nconst TRANSACTION_TYPES: TransactionType[] = [\n  \"매매\",\n  \"전세\",\n  \"월세\",\n  \"단기임대\",\n];\n\nconst PROPERTY_STATUS: PropertyStatus[] = [\"거래중\", \"거래완료\"];\n\n// 방 개수 옵션 (정수만 지원 - DB integer 컬럼)\nconst ROOM_OPTIONS = [\n  { value: \"1\", label: \"1개\" },\n  { value: \"2\", label: \"2개\" },\n  { value: \"3\", label: \"3개\" },\n  { value: \"4\", label: \"4개\" },\n  { value: \"5\", label: \"5개\" },\n  { value: \"6\", label: \"6개\" },\n  { value: \"7\", label: \"7개\" },\n];\n\n// 샘플 데이터 제거 - 실제 Supabase 데이터 사용\n\nexport const PropertyCreateForm: React.FC<PropertyCreateFormProps> = ({\n  isOpen,\n  onClose,\n  onSubmit,\n  loading = false,\n}) => {\n  const [formData, setFormData] = useState<CreatePropertyData>({\n    title: \"\",\n    type: \"아파트\",\n    transaction_type: \"매매\",\n    status: \"거래중\",\n    address: \"\",\n    area: 0,\n    floor: 1,\n    total_floors: 1,\n    rooms: 1,\n    bathrooms: 1,\n    parking: false,\n    elevator: false,\n  });\n\n  const [errors, setErrors] = useState<\n    Partial<Record<keyof CreatePropertyData, string>>\n  >({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleInputChange = useCallback(\n    (field: keyof CreatePropertyData, value: any) => {\n      setFormData((prev) => ({\n        ...prev,\n        [field]: value,\n      }));\n\n      // 에러 제거\n      if (errors[field]) {\n        setErrors((prev) => ({\n          ...prev,\n          [field]: undefined,\n        }));\n      }\n    },\n    [errors],\n  );\n\n  // 메모이제이션된 옵션들\n  const propertyTypeOptions = useMemo(\n    () => PROPERTY_TYPES.map((type) => ({ value: type, label: type })),\n    [],\n  );\n\n  const transactionTypeOptions = useMemo(\n    () => TRANSACTION_TYPES.map((type) => ({ value: type, label: type })),\n    [],\n  );\n\n  const statusOptions = useMemo(\n    () => PROPERTY_STATUS.map((status) => ({ value: status, label: status })),\n    [],\n  );\n\n  // 샘플 데이터 기능 제거\n\n  const validateForm = (): boolean => {\n    const newErrors: Partial<Record<keyof CreatePropertyData, string>> = {};\n\n    // 필수항목 1: 매물 제목\n    if (!formData.title?.trim()) {\n      newErrors.title = \"제목을 입력해주세요\";\n    }\n\n    // 필수항목 2: 주소\n    if (!formData.address?.trim()) {\n      newErrors.address = \"주소를 입력해주세요\";\n    }\n\n    // 필수항목 3: 거래 유형별 가격 검증\n    if (\n      formData.transaction_type === \"매매\" &&\n      (!formData.price || formData.price <= 0)\n    ) {\n      newErrors.price = \"매매가를 입력해주세요\";\n    }\n\n    if (\n      formData.transaction_type === \"전세\" &&\n      (!formData.deposit || formData.deposit <= 0)\n    ) {\n      newErrors.deposit = \"전세금을 입력해주세요\";\n    }\n\n    if (formData.transaction_type === \"월세\") {\n      if (!formData.deposit || formData.deposit <= 0) {\n        newErrors.deposit = \"보증금을 입력해주세요\";\n      }\n      if (!formData.monthly_rent || formData.monthly_rent <= 0) {\n        newErrors.monthly_rent = \"월세를 입력해주세요\";\n      }\n    }\n\n    // 선택적 검증: 입력된 경우에만 유효성 검사\n    if (\n      formData.total_floors &&\n      formData.floor &&\n      formData.total_floors < formData.floor\n    ) {\n      newErrors.total_floors = \"전체 층수는 해당 층수보다 크거나 같아야 합니다\";\n    }\n\n    // 면적 검증\n    if (!formData.area || formData.area <= 0) {\n      newErrors.area = \"면적을 입력해주세요\";\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    console.log(\"🚀 매물 등록 폼 제출 시작\");\n    console.log(\"📋 폼 데이터:\", formData);\n    console.log(\"✅ 폼 유효성 검사 시작...\");\n\n    const isValid = validateForm();\n    console.log(\"📊 폼 유효성 검사 결과:\", isValid);\n    console.log(\"❌ 에러 목록:\", errors);\n\n    if (!isValid) {\n      console.log(\"❌ 폼 유효성 검사 실패 - 제출 중단\");\n      return;\n    }\n\n    if (isSubmitting) {\n      console.log(\"⏳ 이미 제출 중 - 중복 제출 방지\");\n      return;\n    }\n\n    console.log(\"🔄 매물 등록 요청 시작...\");\n    setIsSubmitting(true);\n\n    try {\n      console.log(\"📡 onSubmit 함수 호출 중...\");\n      // 매매가 데이터 확인 (개발 환경에서만)\n      if (import.meta.env.DEV) {\n        console.log(\"Form 제출 데이터:\", {\n          transaction_type: formData.transaction_type,\n          price: formData.price,\n        });\n      }\n      await onSubmit(formData);\n      console.log(\"✅ 매물 등록 성공!\");\n\n      // 폼 초기화\n      console.log(\"🧹 폼 초기화 중...\");\n      setFormData({\n        title: \"\",\n        type: \"아파트\",\n        transaction_type: \"매매\",\n        status: \"거래중\",\n        address: \"\",\n        area: 0,\n        floor: 1,\n        total_floors: 1,\n        rooms: 1,\n        bathrooms: 1,\n        parking: false,\n        elevator: false,\n      });\n      setErrors({});\n      console.log(\"🚪 폼 닫기...\");\n      onClose();\n    } catch (error) {\n      console.error(\"💥 매물 등록 실패:\", error);\n      console.error(\"💥 에러 타입:\", typeof error);\n      console.error(\n        \"💥 에러 상세:\",\n        error instanceof Error\n          ? {\n              name: error.name,\n              message: error.message,\n              stack: error.stack,\n            }\n          : error,\n      );\n\n      // 사용자에게 에러 메시지 표시\n      alert(\n        `매물 등록에 실패했습니다: ${error instanceof Error ? error.message : \"알 수 없는 오류\"}`,\n      );\n    } finally {\n      console.log(\"🏁 매물 등록 프로세스 완료\");\n      setIsSubmitting(false);\n    }\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose} size=\"xl\">\n      <div className=\"bg-white rounded-2xl shadow-2xl overflow-hidden max-h-[95vh] flex flex-col\">\n        {/* 모바일 최적화된 헤더 */}\n        <div className=\"bg-gradient-to-r from-blue-600 to-indigo-600 px-4 sm:px-6 py-3 sm:py-4 flex-shrink-0\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-2 sm:space-x-3 min-w-0 flex-1\">\n              <div className=\"p-1.5 sm:p-2 bg-white/20 rounded-lg flex-shrink-0\">\n                <Home className=\"w-5 h-5 sm:w-6 sm:h-6 text-white\" />\n              </div>\n              <div className=\"min-w-0 flex-1\">\n                <h2 className=\"text-lg sm:text-xl font-bold text-white truncate\">\n                  새 매물 등록\n                </h2>\n                <p className=\"text-blue-100 text-xs sm:text-sm hidden sm:block\">\n                  매물 정보를 입력해주세요\n                </p>\n              </div>\n            </div>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={onClose}\n              className=\"text-white hover:bg-white/20 active:scale-95 p-2 h-8 w-8 sm:h-10 sm:w-10 rounded-lg flex-shrink-0 ml-2\"\n            >\n              <X size={18} className=\"sm:w-5 sm:h-5\" />\n            </Button>\n          </div>\n        </div>\n\n        <div className=\"flex-1 overflow-y-auto\">\n          <form onSubmit={handleSubmit} className=\"p-3 sm:p-4\">\n            <div className=\"space-y-3 sm:space-y-4\">\n              {/* 기본 정보 섹션 */}\n              <div className=\"bg-gradient-to-r from-blue-50 to-indigo-50 rounded-lg p-3 sm:p-4 border border-blue-100\">\n                <div className=\"flex items-center space-x-2 mb-3 sm:mb-4\">\n                  <div className=\"p-1.5 bg-blue-600 rounded-md\">\n                    <Settings className=\"w-4 h-4 text-white\" />\n                  </div>\n                  <div className=\"min-w-0 flex-1\">\n                    <h3 className=\"text-sm sm:text-base font-semibold text-gray-900\">\n                      기본 정보\n                    </h3>\n                    <p className=\"text-xs text-gray-600 hidden sm:block\">\n                      매물의 기본적인 정보를 입력해주세요\n                    </p>\n                  </div>\n                </div>\n\n                <div className=\"space-y-3\">\n                  <div>\n                    <Input\n                      label=\"매물 제목\"\n                      value={formData.title}\n                      onChange={(e) =>\n                        handleInputChange(\"title\", e.target.value)\n                      }\n                      error={errors.title}\n                      placeholder=\"예: 강남구 신사동 럭셔리 아파트\"\n                      required\n                      className=\"text-sm sm:text-base h-11 sm:h-12\"\n                    />\n                  </div>\n\n                  <div className=\"space-y-3 sm:space-y-0 sm:grid sm:grid-cols-3 sm:gap-3\">\n                    <Select\n                      label=\"매물 유형\"\n                      value={formData.type}\n                      onChange={(e) =>\n                        handleInputChange(\n                          \"type\",\n                          e.target.value as PropertyType,\n                        )\n                      }\n                      options={propertyTypeOptions}\n                      className=\"text-sm sm:text-base h-11 sm:h-12\"\n                    />\n\n                    <Select\n                      label=\"거래 유형\"\n                      value={formData.transaction_type}\n                      onChange={(e) =>\n                        handleInputChange(\n                          \"transaction_type\",\n                          e.target.value as TransactionType,\n                        )\n                      }\n                      options={transactionTypeOptions}\n                      className=\"text-sm sm:text-base h-11 sm:h-12\"\n                    />\n\n                    <Select\n                      label=\"매물 상태\"\n                      value={formData.status}\n                      onChange={(e) =>\n                        handleInputChange(\n                          \"status\",\n                          e.target.value as PropertyStatus,\n                        )\n                      }\n                      options={statusOptions}\n                      className=\"text-sm sm:text-base h-11 sm:h-12\"\n                    />\n                  </div>\n                </div>\n              </div>\n\n              {/* 위치 정보 섹션 */}\n              <div className=\"bg-gradient-to-r from-green-50 to-emerald-50 rounded-lg p-3 sm:p-4 border border-green-100\">\n                <div className=\"flex items-center space-x-2 mb-3 sm:mb-4\">\n                  <div className=\"p-1.5 bg-green-600 rounded-md\">\n                    <MapPin className=\"w-4 h-4 text-white\" />\n                  </div>\n                  <div className=\"min-w-0 flex-1\">\n                    <h3 className=\"text-sm sm:text-base font-semibold text-gray-900\">\n                      위치 정보\n                    </h3>\n                    <p className=\"text-xs text-gray-600 hidden sm:block\">\n                      매물의 정확한 위치를 입력해주세요\n                    </p>\n                  </div>\n                </div>\n\n                <div className=\"space-y-3\">\n                  <div>\n                    <Input\n                      label=\"주소\"\n                      value={formData.address}\n                      onChange={(e) =>\n                        handleInputChange(\"address\", e.target.value)\n                      }\n                      error={errors.address}\n                      placeholder=\"예: 서울시 강남구 신사동 123-45\"\n                      required\n                      className=\"text-sm sm:text-base h-11 sm:h-12\"\n                    />\n                  </div>\n\n                  <div>\n                    <Input\n                      label=\"상세 주소\"\n                      value={formData.detailed_address || \"\"}\n                      onChange={(e) =>\n                        handleInputChange(\"detailed_address\", e.target.value)\n                      }\n                      placeholder=\"예: 123동 456호\"\n                      className=\"text-sm sm:text-base h-11 sm:h-12\"\n                    />\n                  </div>\n                </div>\n              </div>\n\n              {/* 매물 정보 섹션 */}\n              <div className=\"bg-gradient-to-r from-purple-50 to-violet-50 rounded-lg p-3 sm:p-4 border border-purple-100\">\n                <div className=\"flex items-center space-x-2 mb-3 sm:mb-4\">\n                  <div className=\"p-1.5 bg-purple-600 rounded-md\">\n                    <Home className=\"w-4 h-4 text-white\" />\n                  </div>\n                  <div className=\"min-w-0 flex-1\">\n                    <h3 className=\"text-sm sm:text-base font-semibold text-gray-900\">\n                      매물 정보\n                    </h3>\n                    <p className=\"text-xs text-gray-600 hidden sm:block\">\n                      매물의 상세 정보를 입력해주세요\n                    </p>\n                  </div>\n                </div>\n\n                <div className=\"space-y-4\">\n                  {/* 면적 및 구조 */}\n                  <div className=\"space-y-3 sm:space-y-0 sm:grid sm:grid-cols-2 md:grid-cols-3 sm:gap-3\">\n                    <Input\n                      label=\"면적 (m²)\"\n                      type=\"number\"\n                      value={formData.area || \"\"}\n                      onChange={(e) =>\n                        handleInputChange(\n                          \"area\",\n                          parseFloat(e.target.value) || 0,\n                        )\n                      }\n                      error={errors.area}\n                      placeholder=\"85.0\"\n                      min=\"0\"\n                      step=\"0.1\"\n                      required\n                      className=\"text-sm sm:text-base h-11 sm:h-12\"\n                    />\n\n                    <Input\n                      label=\"층수\"\n                      type=\"number\"\n                      value={formData.floor || \"\"}\n                      onChange={(e) =>\n                        handleInputChange(\n                          \"floor\",\n                          parseInt(e.target.value) || 1,\n                        )\n                      }\n                      error={errors.floor}\n                      placeholder=\"15\"\n                      min=\"1\"\n                      className=\"text-sm sm:text-base h-11 sm:h-12\"\n                    />\n\n                    <Input\n                      label=\"전체 층수\"\n                      type=\"number\"\n                      value={formData.total_floors || \"\"}\n                      onChange={(e) =>\n                        handleInputChange(\n                          \"total_floors\",\n                          parseInt(e.target.value) || 1,\n                        )\n                      }\n                      error={errors.total_floors}\n                      placeholder=\"25\"\n                      min=\"1\"\n                      className=\"text-sm sm:text-base h-11 sm:h-12 sm:col-span-2 md:col-span-1\"\n                    />\n                  </div>\n\n                  {/* 방 구성 */}\n                  <div className=\"space-y-3 sm:space-y-0 sm:grid sm:grid-cols-2 sm:gap-3\">\n                    <Select\n                      label=\"방 개수\"\n                      value={formData.rooms?.toString() || \"1\"}\n                      onChange={(e) =>\n                        handleInputChange(\n                          \"rooms\",\n                          parseInt(e.target.value) || 1,\n                        )\n                      }\n                      error={errors.rooms}\n                      options={ROOM_OPTIONS}\n                      className=\"text-sm sm:text-base h-11 sm:h-12\"\n                    />\n\n                    <Input\n                      label=\"화장실 개수\"\n                      type=\"number\"\n                      value={formData.bathrooms || \"\"}\n                      onChange={(e) =>\n                        handleInputChange(\n                          \"bathrooms\",\n                          parseInt(e.target.value) || 1,\n                        )\n                      }\n                      error={errors.bathrooms}\n                      placeholder=\"2\"\n                      min=\"1\"\n                      className=\"text-sm sm:text-base h-11 sm:h-12\"\n                    />\n                  </div>\n\n                  {/* 편의시설 */}\n                  <div className=\"bg-white/60 rounded-lg p-3 border border-purple-200\">\n                    <h4 className=\"text-xs sm:text-sm font-semibold text-gray-900 mb-2\">\n                      편의시설\n                    </h4>\n                    <div className=\"grid grid-cols-2 gap-2 sm:flex sm:flex-wrap sm:gap-3\">\n                      <label className=\"flex items-center space-x-2 bg-white rounded-md px-2 sm:px-3 py-2 border border-gray-200 hover:border-purple-300 active:scale-95 transition-all cursor-pointer\">\n                        <input\n                          type=\"checkbox\"\n                          checked={formData.parking}\n                          onChange={(e) =>\n                            handleInputChange(\"parking\", e.target.checked)\n                          }\n                          className=\"rounded border-gray-300 text-purple-600 focus:ring-purple-500 w-4 h-4 sm:w-3 sm:h-3\"\n                        />\n                        <span className=\"text-xs font-medium text-gray-700\">\n                          🚗 주차\n                        </span>\n                      </label>\n\n                      <label className=\"flex items-center space-x-2 bg-white rounded-md px-2 sm:px-3 py-2 border border-gray-200 hover:border-purple-300 active:scale-95 transition-all cursor-pointer\">\n                        <input\n                          type=\"checkbox\"\n                          checked={formData.elevator}\n                          onChange={(e) =>\n                            handleInputChange(\"elevator\", e.target.checked)\n                          }\n                          className=\"rounded border-gray-300 text-purple-600 focus:ring-purple-500 w-4 h-4 sm:w-3 sm:h-3\"\n                        />\n                        <span className=\"text-xs font-medium text-gray-700\">\n                          🏢 엘리베이터\n                        </span>\n                      </label>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* 가격 정보 섹션 */}\n              <div className=\"bg-gradient-to-r from-orange-50 to-amber-50 rounded-lg p-3 sm:p-4 border border-orange-100\">\n                <div className=\"flex items-center space-x-2 mb-3 sm:mb-4\">\n                  <div className=\"p-1.5 bg-orange-600 rounded-md\">\n                    <DollarSign className=\"w-4 h-4 text-white\" />\n                  </div>\n                  <div className=\"min-w-0 flex-1\">\n                    <h3 className=\"text-sm sm:text-base font-semibold text-gray-900\">\n                      가격 정보\n                    </h3>\n                    <p className=\"text-xs text-gray-600 hidden sm:block\">\n                      거래 유형에 맞는 가격을 입력해주세요\n                    </p>\n                  </div>\n                </div>\n\n                <div className=\"space-y-3 sm:space-y-0 sm:grid sm:grid-cols-1 md:grid-cols-3 sm:gap-3\">\n                  {formData.transaction_type === \"매매\" && (\n                    <Input\n                      label=\"매매가 (만원)\"\n                      type=\"number\"\n                      value={formData.price || \"\"}\n                      onChange={(e) =>\n                        handleInputChange(\n                          \"price\",\n                          parseInt(e.target.value) || undefined,\n                        )\n                      }\n                      error={errors.price}\n                      placeholder=\"35000\"\n                      min=\"0\"\n                      required\n                      className=\"text-sm sm:text-base h-11 sm:h-12\"\n                    />\n                  )}\n\n                  {(formData.transaction_type === \"전세\" ||\n                    formData.transaction_type === \"월세\") && (\n                    <Input\n                      label={\n                        formData.transaction_type === \"전세\"\n                          ? \"전세금 (만원)\"\n                          : \"보증금 (만원)\"\n                      }\n                      type=\"number\"\n                      value={formData.deposit || \"\"}\n                      onChange={(e) =>\n                        handleInputChange(\n                          \"deposit\",\n                          parseInt(e.target.value) || undefined,\n                        )\n                      }\n                      error={errors.deposit}\n                      placeholder=\"21000\"\n                      min=\"0\"\n                      required\n                      className=\"text-sm sm:text-base h-11 sm:h-12\"\n                    />\n                  )}\n\n                  {formData.transaction_type === \"월세\" && (\n                    <Input\n                      label=\"월세 (만원)\"\n                      type=\"number\"\n                      value={formData.monthly_rent || \"\"}\n                      onChange={(e) =>\n                        handleInputChange(\n                          \"monthly_rent\",\n                          parseInt(e.target.value) || undefined,\n                        )\n                      }\n                      error={errors.monthly_rent}\n                      placeholder=\"65\"\n                      min=\"0\"\n                      required\n                      className=\"text-sm sm:text-base h-11 sm:h-12\"\n                    />\n                  )}\n                </div>\n              </div>\n\n              {/* 임대인 정보 섹션 */}\n              <div className=\"bg-gradient-to-r from-rose-50 to-pink-50 rounded-lg p-3 sm:p-4 border border-rose-100\">\n                <div className=\"flex items-center space-x-2 mb-3 sm:mb-4\">\n                  <div className=\"p-1.5 bg-rose-600 rounded-md\">\n                    <User className=\"w-4 h-4 text-white\" />\n                  </div>\n                  <div className=\"min-w-0 flex-1\">\n                    <h3 className=\"text-sm sm:text-base font-semibold text-gray-900\">\n                      임대인 정보\n                    </h3>\n                    <p className=\"text-xs text-gray-600 hidden sm:block\">\n                      임대인의 연락처 정보를 입력해주세요\n                    </p>\n                  </div>\n                </div>\n\n                <div className=\"space-y-3 sm:space-y-0 sm:grid sm:grid-cols-2 sm:gap-3\">\n                  <Input\n                    label=\"임대인 이름\"\n                    value={formData.landlord_name || \"\"}\n                    onChange={(e) =>\n                      handleInputChange(\"landlord_name\", e.target.value)\n                    }\n                    placeholder=\"홍길동\"\n                    className=\"text-sm sm:text-base h-11 sm:h-12\"\n                  />\n\n                  <Input\n                    label=\"임대인 연락처\"\n                    value={formData.landlord_phone || \"\"}\n                    onChange={(e) =>\n                      handleInputChange(\"landlord_phone\", e.target.value)\n                    }\n                    placeholder=\"010-1234-5678\"\n                    className=\"text-sm sm:text-base h-11 sm:h-12\"\n                  />\n                </div>\n              </div>\n\n              {/* 기타 정보 섹션 */}\n              <div className=\"bg-gradient-to-r from-gray-50 to-slate-50 rounded-lg p-3 sm:p-4 border border-gray-100\">\n                <div className=\"flex items-center space-x-2 mb-3 sm:mb-4\">\n                  <div className=\"p-1.5 bg-gray-600 rounded-md\">\n                    <FileText className=\"w-4 h-4 text-white\" />\n                  </div>\n                  <div className=\"min-w-0 flex-1\">\n                    <h3 className=\"text-sm sm:text-base font-semibold text-gray-900\">\n                      기타 정보\n                    </h3>\n                    <p className=\"text-xs text-gray-600 hidden sm:block\">\n                      추가적인 매물 정보를 입력해주세요\n                    </p>\n                  </div>\n                </div>\n\n                <div>\n                  <label className=\"block text-xs sm:text-sm font-medium text-gray-700 mb-2\">\n                    매물 설명\n                  </label>\n                  <textarea\n                    value={formData.description || \"\"}\n                    onChange={(e) =>\n                      handleInputChange(\"description\", e.target.value)\n                    }\n                    placeholder=\"매물에 대한 상세한 설명을 입력해주세요&#10;예: 남향, 풀옵션, 교통 편리, 학군 좋음 등\"\n                    rows={3}\n                    className=\"w-full px-3 py-2 border border-gray-200 rounded-lg focus:ring-2 focus:ring-gray-500 focus:border-gray-500 text-xs sm:text-sm resize-none transition-colors\"\n                  />\n                </div>\n              </div>\n\n              {/* 모바일 최적화된 폼 액션 버튼 */}\n              <div className=\"flex flex-col-reverse sm:flex-row sm:justify-end space-y-reverse space-y-3 sm:space-y-0 sm:space-x-3 pt-4 border-t border-gray-200 mt-4\">\n                <Button\n                  type=\"button\"\n                  variant=\"outline\"\n                  onClick={onClose}\n                  disabled={loading}\n                  className=\"w-full sm:w-auto px-4 sm:px-6 py-3 sm:py-2 text-sm sm:text-base active:scale-95\"\n                >\n                  취소\n                </Button>\n                <Button\n                  type=\"submit\"\n                  variant=\"primary\"\n                  loading={loading}\n                  leftIcon={<Save size={16} />}\n                  className=\"w-full sm:w-auto px-4 sm:px-6 py-3 sm:py-2 text-sm sm:text-base bg-blue-600 hover:bg-blue-700 focus:ring-blue-500 active:scale-95\"\n                >\n                  매물 등록\n                </Button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n","// ============================================================================\n// 기능 향상된 매물 관리 페이지 (SaaS 버전)\n// ============================================================================\n\nimport React, { useState, useMemo, useEffect } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { Search, Plus, Grid, AlignLeft, Settings } from \"lucide-react\";\nimport {\n  Button,\n  Card,\n  Badge,\n  Input,\n  Select,\n  Modal,\n  Loading,\n} from \"@/components/ui\";\nimport { PropertyStatusBadge } from \"@/components/ui/Badge\";\nimport { PropertyCreateForm } from \"@/components/forms/PropertyCreateForm\";\nimport { PropertyEditForm } from \"@/components/forms/PropertyEditForm\";\nimport { PropertyCard } from \"@/components/property/PropertyCard\";\nimport { PropertyDetailModal } from \"@/components/property/PropertyDetailModal\";\nimport { useProperties } from \"@/hooks/useProperties\";\nimport { useTenant } from \"@/contexts/TenantContext\";\nimport { useAuth } from \"@/contexts/AuthContext\";\nimport { formatPrice } from \"@/utils/propertyUtils\";\nimport type {\n  SimplePropertyFilters,\n  Property,\n  CreatePropertyData,\n  UpdatePropertyData,\n} from \"@/types\";\n\nconst PropertiesPageNew: React.FC = () => {\n  const { user } = useAuth();\n  const { tenant } = useTenant();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [debouncedSearchTerm, setDebouncedSearchTerm] = useState(\"\");\n  const [isComposing, setIsComposing] = useState(false);\n  const [selectedTransactionType, setSelectedTransactionType] =\n    useState(\"전체\");\n  const [selectedPropertyType, setSelectedPropertyType] = useState(\"전체\");\n  const [selectedPropertyStatus, setSelectedPropertyStatus] = useState(\"전체\");\n  const [viewMode, setViewMode] = useState<\"card\" | \"list\">(\"card\");\n  const [deleteConfirmOpen, setDeleteConfirmOpen] = useState(false);\n  const [selectedProperty, setSelectedProperty] = useState<Property | null>(\n    null,\n  );\n  const [createFormOpen, setCreateFormOpen] = useState(false);\n  const [createLoading, setCreateLoading] = useState(false);\n  const [editFormOpen, setEditFormOpen] = useState(false);\n  const [editLoading, setEditLoading] = useState(false);\n  const [editingProperty, setEditingProperty] = useState<Property | null>(null);\n  const [detailModalProperty, setDetailModalProperty] =\n    useState<Property | null>(null);\n\n  // 검색어 debounce 처리 (한글 IME 입력 중 즉시 검색 방지)\n  useEffect(() => {\n    if (isComposing) return; // 한글 입력 중에는 debounce 실행하지 않음\n\n    const timer = setTimeout(() => {\n      setDebouncedSearchTerm(searchTerm);\n    }, 300); // 300ms 딜레이\n\n    return () => clearTimeout(timer);\n  }, [searchTerm, isComposing]);\n\n  // URL 파라미터 확인하여 매물 등록 폼 자동 열기\n  useEffect(() => {\n    if (searchParams.get(\"create\") === \"true\") {\n      setCreateFormOpen(true);\n      // URL에서 create 파라미터 제거\n      const newSearchParams = new URLSearchParams(searchParams);\n      newSearchParams.delete(\"create\");\n      setSearchParams(newSearchParams, { replace: true });\n    }\n  }, [searchParams, setSearchParams]);\n\n  // 필터 객체 생성 (debounced 검색어 사용)\n  const filters = useMemo((): SimplePropertyFilters => {\n    const result: SimplePropertyFilters = {};\n\n    if (debouncedSearchTerm) result.search = debouncedSearchTerm;\n    if (selectedTransactionType !== \"전체\")\n      result.transaction_type = selectedTransactionType;\n    if (selectedPropertyType !== \"전체\")\n      result.property_type = selectedPropertyType;\n    if (selectedPropertyStatus !== \"전체\")\n      result.property_status = selectedPropertyStatus;\n\n    return result;\n  }, [\n    debouncedSearchTerm,\n    selectedTransactionType,\n    selectedPropertyType,\n    selectedPropertyStatus,\n  ]);\n\n  const {\n    properties,\n    loading,\n    error,\n    refreshProperties,\n    createProperty,\n    updateProperty,\n    deleteProperty,\n  } = useProperties(filters);\n\n  // 거래완료된 매물을 리스트 맨뒤로 정렬\n  const sortedProperties = useMemo(() => {\n    if (!properties) return [];\n\n    return [...properties].sort((a, b) => {\n      // 거래완료 상태를 기준으로 정렬 (거래완료가 아닌 것이 먼저)\n      if (a.status === \"거래완료\" && b.status !== \"거래완료\") {\n        return 1; // a를 뒤로\n      }\n      if (a.status !== \"거래완료\" && b.status === \"거래완료\") {\n        return -1; // b를 뒤로\n      }\n\n      // 둘 다 같은 상태면 기존 순서 유지 (생성일 기준)\n      if (a.created_at && b.created_at) {\n        return (\n          new Date(b.created_at).getTime() - new Date(a.created_at).getTime()\n        );\n      }\n\n      return 0;\n    });\n  }, [properties]);\n\n  const transactionTypeOptions = [\n    { value: \"전체\", label: \"전체\" },\n    { value: \"매매\", label: \"매매\" },\n    { value: \"전세\", label: \"전세\" },\n    { value: \"월세\", label: \"월세\" },\n  ];\n\n  const propertyTypeOptions = [\n    { value: \"전체\", label: \"전체\" },\n    { value: \"아파트\", label: \"아파트\" },\n    { value: \"오피스텔\", label: \"오피스텔\" },\n    { value: \"원룸\", label: \"원룸\" },\n    { value: \"빌라\", label: \"빌라\" },\n  ];\n\n  const propertyStatusOptions = [\n    { value: \"전체\", label: \"전체\" },\n    { value: \"거래중\", label: \"거래중\" },\n    { value: \"거래완료\", label: \"거래완료\" },\n  ];\n\n  // 검색 플레이스홀더 생성\n  const getSearchPlaceholder = () => {\n    const activeFilters = [];\n    if (selectedTransactionType !== \"전체\")\n      activeFilters.push(selectedTransactionType);\n    if (selectedPropertyType !== \"전체\")\n      activeFilters.push(selectedPropertyType);\n    if (selectedPropertyStatus !== \"전체\")\n      activeFilters.push(selectedPropertyStatus);\n\n    if (activeFilters.length === 0) {\n      return \"매물명, 주소로 검색하세요...\";\n    }\n\n    return `${activeFilters.join(\" · \")} 매물 검색...`;\n  };\n\n  // 활성 필터 배열 생성\n  const getActiveFilters = () => {\n    const filters = [];\n    if (selectedTransactionType !== \"전체\")\n      filters.push(`거래: ${selectedTransactionType}`);\n    if (selectedPropertyType !== \"전체\")\n      filters.push(`유형: ${selectedPropertyType}`);\n    if (selectedPropertyStatus !== \"전체\")\n      filters.push(`상태: ${selectedPropertyStatus}`);\n    return filters;\n  };\n\n  const handleDeleteProperty = async () => {\n    if (!selectedProperty) return;\n\n    try {\n      await deleteProperty(selectedProperty.id);\n      setDeleteConfirmOpen(false);\n      setSelectedProperty(null);\n    } catch (error) {\n      console.error(\"Delete failed:\", error);\n    }\n  };\n\n  const resetFilters = () => {\n    setSearchTerm(\"\");\n    setSelectedTransactionType(\"전체\");\n    setSelectedPropertyType(\"전체\");\n    setSelectedPropertyStatus(\"전체\");\n  };\n\n  const handleCreateProperty = async (data: CreatePropertyData) => {\n    console.log(\"🏠 PropertiesPageNew.handleCreateProperty 시작\");\n    console.log(\"📊 받은 데이터:\", data);\n    // 개발 환경에서만 데이터 확인\n    if (import.meta.env.DEV && data.transaction_type === \"매매\") {\n      console.log(\"Page 매매가 데이터:\", {\n        price: data.price,\n        type: typeof data.price,\n      });\n    }\n    console.log(\"👤 현재 사용자:\", { user: user?.id, tenant: tenant?.id });\n\n    try {\n      console.log(\"⏳ 로딩 상태 설정...\");\n      setCreateLoading(true);\n\n      console.log(\"📞 createProperty 훅 호출 중...\");\n      const result = await createProperty(data);\n      console.log(\"✅ createProperty 성공:\", result);\n      // 저장 후 결과 확인\n      if (import.meta.env.DEV && result.transaction_type === \"매매\") {\n        console.log(\"Page 저장 결과:\", { id: result.id, price: result.price });\n      }\n\n      console.log(\"🔄 매물 목록 새로고침...\");\n      // 폼이 닫히고 목록이 자동으로 새로고침됩니다\n    } catch (error) {\n      console.error(\"❌ PropertiesPageNew.handleCreateProperty 실패:\", error);\n      console.error(\"❌ 에러 타입:\", typeof error);\n      console.error(\n        \"❌ 에러 상세:\",\n        error instanceof Error\n          ? {\n              name: error.name,\n              message: error.message,\n              stack: error.stack,\n            }\n          : error,\n      );\n      throw error; // 폼에서 에러 처리\n    } finally {\n      console.log(\"🏁 PropertiesPageNew.handleCreateProperty 완료\");\n      setCreateLoading(false);\n    }\n  };\n\n  const handleEditProperty = async (data: UpdatePropertyData) => {\n    if (!editingProperty) return;\n\n    try {\n      setEditLoading(true);\n      await updateProperty(editingProperty.id, data);\n      setEditFormOpen(false);\n      setEditingProperty(null);\n      // 목록이 자동으로 새로고침됩니다\n    } catch (error) {\n      console.error(\"매물 수정 실패:\", error);\n      throw error; // 폼에서 에러 처리\n    } finally {\n      setEditLoading(false);\n    }\n  };\n\n  const handleOpenEditForm = (property: Property) => {\n    console.log(\"📝 수정 폼 열기 요청:\", property.title);\n    try {\n      setEditingProperty(property);\n      setEditFormOpen(true);\n      setDetailModalProperty(null); // 상세 모달 닫기\n      console.log(\"✅ 수정 폼 상태 설정 완료\");\n    } catch (error) {\n      console.error(\"❌ 수정 폼 열기 실패:\", error);\n      alert(\"수정 폼을 열 수 없습니다. 다시 시도해주세요.\");\n    }\n  };\n\n  const handleConfirmDelete = (property: Property) => {\n    console.log(\"🗑️ 삭제 확인 요청:\", property.title);\n    try {\n      const confirmDelete = window.confirm(\n        `'${property.title}' 매물을 정말 삭제하시겠습니까?\\n\\n이 작업은 되돌릴 수 없습니다.`,\n      );\n\n      if (confirmDelete) {\n        setSelectedProperty(property);\n        setDeleteConfirmOpen(true);\n        setDetailModalProperty(null); // 상세 모달 닫기\n        console.log(\"✅ 삭제 확인 상태 설정 완료\");\n      } else {\n        console.log(\"❌ 사용자가 삭제를 취소했습니다\");\n      }\n    } catch (error) {\n      console.error(\"❌ 삭제 확인 실패:\", error);\n      alert(\"삭제 확인 중 오류가 발생했습니다. 다시 시도해주세요.\");\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-96\">\n        <Loading size=\"lg\" text=\"매물을 불러오는 중...\" />\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"text-center py-12\">\n        <p className=\"text-red-600 mb-4\">{error}</p>\n        <Button onClick={refreshProperties}>다시 시도</Button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* 모바일 초컴팩트 페이지 헤더 */}\n      <div className=\"bg-gradient-to-r from-blue-50 to-indigo-50 rounded-xl p-3 sm:p-6 border border-blue-100\">\n        <div className=\"flex items-center justify-between\">\n          {/* 헤더 정보 - 한줄로 */}\n          <div className=\"flex items-center space-x-2 flex-1 min-w-0\">\n            <div className=\"p-1.5 bg-blue-600 rounded-lg\">\n              <Settings className=\"w-4 h-4 sm:w-6 sm:h-6 text-white\" />\n            </div>\n            <div className=\"min-w-0 flex-1\">\n              <div className=\"flex items-baseline space-x-2\">\n                <h1 className=\"text-base sm:text-2xl lg:text-3xl font-bold text-gray-900\">\n                  매물 관리\n                </h1>\n                <div className=\"flex items-center space-x-1\">\n                  <span className=\"text-sm sm:text-lg font-bold text-blue-600\">\n                    {sortedProperties.length}\n                  </span>\n                  <span className=\"text-xs sm:text-sm text-gray-600\">개</span>\n                </div>\n              </div>\n              <p className=\"text-xs sm:text-sm text-blue-700 font-medium truncate\">\n                {tenant?.name}\n              </p>\n            </div>\n          </div>\n\n          {/* 모바일 등록 버튼 - 더 작게 */}\n          <button\n            onClick={() => setCreateFormOpen(true)}\n            className=\"flex items-center justify-center w-9 h-9 sm:w-auto sm:h-auto sm:px-4 sm:py-2.5 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-all duration-200 shadow-md active:scale-95\"\n          >\n            <Plus size={16} className=\"sm:w-5 sm:h-5 sm:mr-2\" />\n            <span className=\"hidden sm:inline font-medium\">새 매물 등록</span>\n          </button>\n        </div>\n      </div>\n\n      {/* 모바일 초컴팩트 검색 및 필터 영역 */}\n      <div className=\"bg-white rounded-xl shadow-lg border border-gray-100 overflow-hidden\">\n        <div className=\"p-3 sm:p-6\">\n          {/* 모바일 초컴팩트 섹션 헤더 */}\n          <div className=\"flex items-center space-x-2 mb-3 sm:mb-6\">\n            <div className=\"p-1 bg-gray-100 rounded\">\n              <Search className=\"w-3 h-3 sm:w-5 sm:h-5 text-gray-600\" />\n            </div>\n            <h2 className=\"text-sm sm:text-lg font-semibold text-gray-900\">\n              검색 & 필터\n            </h2>\n            <p className=\"text-xs text-gray-500 hidden sm:block\">\n              원하는 매물을 빠르게 찾아보세요\n            </p>\n          </div>\n\n          <div className=\"space-y-3 sm:space-y-6\">\n            {/* 모바일 초컴팩트 검색바 */}\n            <div className=\"relative\">\n              <Input\n                placeholder={getSearchPlaceholder()}\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                onCompositionStart={() => setIsComposing(true)}\n                onCompositionEnd={() => setIsComposing(false)}\n                leftIcon={<Search size={16} />}\n                className=\"text-sm h-10 sm:h-14 text-gray-700 bg-gray-50 border-gray-200 rounded-lg focus:bg-white focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200\"\n              />\n\n              {/* 활성 필터 표시 - 초컴팩트 */}\n              {getActiveFilters().length > 0 && (\n                <div className=\"absolute top-full left-0 right-0 mt-1 flex flex-wrap gap-1 z-10\">\n                  {getActiveFilters().map((filter, index) => (\n                    <span\n                      key={index}\n                      className=\"inline-flex items-center px-2 py-0.5 bg-blue-100 text-blue-800 text-xs rounded font-medium\"\n                    >\n                      {filter}\n                    </span>\n                  ))}\n                </div>\n              )}\n            </div>\n\n            {/* 모바일 초컴팩트 필터 영역 */}\n            <div className=\"space-y-2 sm:space-y-4\">\n              {/* 필터 드롭다운들 - 모바일 가로 3열 */}\n              <div className=\"grid grid-cols-3 gap-2 sm:gap-4 md:grid-cols-3 lg:grid-cols-3\">\n                {/* 거래유형 필터 */}\n                <div className=\"space-y-1\">\n                  <label className=\"text-xs font-medium text-gray-700 block sm:text-sm\">\n                    거래유형\n                  </label>\n                  <Select\n                    options={transactionTypeOptions}\n                    value={selectedTransactionType}\n                    onChange={(e) => setSelectedTransactionType(e.target.value)}\n                    className=\"w-full h-9 sm:h-12 text-xs sm:text-base bg-gray-50 border-gray-200 rounded-lg focus:bg-white focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200\"\n                  />\n                </div>\n\n                {/* 매물유형 필터 */}\n                <div className=\"space-y-1\">\n                  <label className=\"text-xs font-medium text-gray-700 block sm:text-sm\">\n                    매물유형\n                  </label>\n                  <Select\n                    options={propertyTypeOptions}\n                    value={selectedPropertyType}\n                    onChange={(e) => setSelectedPropertyType(e.target.value)}\n                    className=\"w-full h-9 sm:h-12 text-xs sm:text-base bg-gray-50 border-gray-200 rounded-lg focus:bg-white focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200\"\n                  />\n                </div>\n\n                {/* 매물상태 필터 */}\n                <div className=\"space-y-1\">\n                  <label className=\"text-xs font-medium text-gray-700 block sm:text-sm\">\n                    매물상태\n                  </label>\n                  <Select\n                    options={propertyStatusOptions}\n                    value={selectedPropertyStatus}\n                    onChange={(e) => setSelectedPropertyStatus(e.target.value)}\n                    className=\"w-full h-9 sm:h-12 text-xs sm:text-base bg-gray-50 border-gray-200 rounded-lg focus:bg-white focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200\"\n                  />\n                </div>\n              </div>\n\n              {/* 모바일 초컴팩트 하단 액션 영역 */}\n              <div className=\"flex items-center justify-between pt-2 border-t border-gray-100\">\n                {/* 뷰 모드 토글 - 초컴팩트 */}\n                <div className=\"flex items-center\">\n                  <span className=\"text-xs font-medium text-gray-700 mr-2 sm:text-sm\">\n                    보기:\n                  </span>\n                  <div className=\"flex items-center bg-gray-100 rounded-lg p-0.5\">\n                    <button\n                      onClick={() => setViewMode(\"card\")}\n                      className={`flex items-center justify-center px-2 py-1.5 rounded transition-all duration-200 text-xs font-medium ${\n                        viewMode === \"card\"\n                          ? \"bg-white text-blue-600 shadow-sm\"\n                          : \"text-gray-600 hover:text-gray-800\"\n                      }`}\n                    >\n                      <Grid size={12} className=\"mr-1\" />\n                      카드\n                    </button>\n                    <button\n                      onClick={() => setViewMode(\"list\")}\n                      className={`flex items-center justify-center px-2 py-1.5 rounded transition-all duration-200 text-xs font-medium ${\n                        viewMode === \"list\"\n                          ? \"bg-white text-blue-600 shadow-sm\"\n                          : \"text-gray-600 hover:text-gray-800\"\n                      }`}\n                    >\n                      <AlignLeft size={12} className=\"mr-1\" />\n                      리스트\n                    </button>\n                  </div>\n                </div>\n\n                {/* 초기화 버튼 - 초컴팩트 */}\n                <Button\n                  variant=\"outline\"\n                  onClick={resetFilters}\n                  size=\"sm\"\n                  leftIcon={<Settings size={12} />}\n                  className=\"text-xs font-medium px-3 py-1.5 bg-gray-50 border-gray-200 text-gray-700 hover:bg-gray-100 rounded-lg transition-all duration-200\"\n                >\n                  초기화\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* 매물 리스트 */}\n      {sortedProperties.length === 0 ? (\n        <Card className=\"p-12 text-center\">\n          <div className=\"text-gray-400 mb-4\">\n            <Search size={48} className=\"mx-auto\" />\n          </div>\n          <p className=\"text-gray-500\">검색 조건에 맞는 매물이 없습니다.</p>\n        </Card>\n      ) : viewMode === \"card\" ? (\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4\">\n          {sortedProperties.map((property) => (\n            <PropertyCard\n              key={property.id}\n              property={property}\n              onClick={() => setDetailModalProperty(property)}\n            />\n          ))}\n        </div>\n      ) : (\n        <PropertyList\n          properties={sortedProperties}\n          onView={(property) => setDetailModalProperty(property)}\n        />\n      )}\n\n      {/* 매물 등록 폼 모달 */}\n      <PropertyCreateForm\n        isOpen={createFormOpen}\n        onClose={() => setCreateFormOpen(false)}\n        onSubmit={handleCreateProperty}\n        loading={createLoading}\n      />\n\n      {/* 매물 상세 정보 모달 */}\n      {detailModalProperty && (\n        <PropertyDetailModal\n          property={detailModalProperty}\n          isOpen={true}\n          onClose={() => {\n            console.log(\"🔒 상세 모달 닫기\");\n            setDetailModalProperty(null);\n          }}\n          onEdit={(property) => {\n            console.log(\"🔧 모달에서 수정 요청 받음:\", property.title);\n            handleOpenEditForm(property);\n          }}\n          onDelete={(property) => {\n            console.log(\"🔧 모달에서 삭제 요청 받음:\", property.title);\n            handleConfirmDelete(property);\n          }}\n        />\n      )}\n\n      {/* 매물 수정 폼 모달 */}\n      {editingProperty && (\n        <PropertyEditForm\n          isOpen={editFormOpen}\n          onClose={() => {\n            setEditFormOpen(false);\n            setEditingProperty(null);\n          }}\n          onSubmit={handleEditProperty}\n          property={editingProperty}\n          loading={editLoading}\n        />\n      )}\n\n      {/* 삭제 확인 모달 */}\n      <Modal\n        isOpen={deleteConfirmOpen}\n        onClose={() => setDeleteConfirmOpen(false)}\n        title=\"매물 삭제\"\n      >\n        <div className=\"space-y-4\">\n          <p className=\"text-gray-600\">\n            '{selectedProperty?.title}' 매물을 삭제하시겠습니까?\n            <br />이 작업은 되돌릴 수 없습니다.\n          </p>\n          <div className=\"flex justify-end space-x-3\">\n            <Button\n              variant=\"outline\"\n              onClick={() => setDeleteConfirmOpen(false)}\n            >\n              취소\n            </Button>\n            <Button variant=\"destructive\" onClick={handleDeleteProperty}>\n              삭제\n            </Button>\n          </div>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\n// 매물 리스트 컴포넌트\ninterface PropertyListProps {\n  properties: Property[];\n  onView: (property: Property) => void;\n}\n\nconst PropertyList: React.FC<PropertyListProps> = ({ properties, onView }) => {\n  return (\n    <Card>\n      {/* 테이블 헤더 - 데스크톱만 표시 */}\n      <div className=\"hidden lg:block bg-gray-50 border-b border-gray-200 px-4 py-3\">\n        <div className=\"grid grid-cols-12 gap-2 text-xs font-medium text-gray-700\">\n          <div className=\"col-span-1\">거래유형</div>\n          <div className=\"col-span-3\">매물정보</div>\n          <div className=\"col-span-3\">가격정보</div>\n          <div className=\"col-span-2\">임대인정보</div>\n          <div className=\"col-span-1\">퇴실예정일</div>\n          <div className=\"col-span-2\">추가정보</div>\n        </div>\n      </div>\n\n      {/* 매물 리스트 */}\n      <div>\n        {properties.map((property) => (\n          <div\n            key={property.id}\n            className=\"border-b border-gray-100 hover:bg-blue-50 transition-colors cursor-pointer touch-target relative\"\n            onClick={() => onView(property)}\n          >\n            {/* 거래완료 빨간줄 오버레이 */}\n            {property.status === \"거래완료\" && (\n              <div className=\"absolute inset-0 flex items-center justify-center pointer-events-none z-10\">\n                <div className=\"w-full h-0.5 bg-red-500 opacity-60\"></div>\n              </div>\n            )}\n            {/* 데스크톱 레이아웃 */}\n            <div className=\"hidden lg:block px-4 py-3\">\n              <div className=\"grid grid-cols-12 gap-2 items-center text-sm\">\n                {/* 거래유형 */}\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col space-y-1\">\n                    <Badge\n                      size=\"sm\"\n                      variant={\n                        property.transaction_type === \"매매\"\n                          ? \"sale\"\n                          : property.transaction_type === \"전세\"\n                            ? \"jeonse\"\n                            : \"monthly\"\n                      }\n                    >\n                      {property.transaction_type}\n                    </Badge>\n                    {/* 매물 상태 배지 */}\n                    <PropertyStatusBadge status={property.status} />\n                  </div>\n                </div>\n\n                {/* 매물정보 */}\n                <div className=\"col-span-3\">\n                  <div className=\"font-medium text-gray-900 truncate text-sm mb-1\">\n                    {property.title}\n                  </div>\n                  <div className=\"text-xs text-gray-600 truncate mb-1\">\n                    📍 {property.address}\n                  </div>\n                  <div className=\"text-xs text-gray-500\">\n                    {property.type} • {property.area}m²(\n                    {Math.floor(property.area / 3.3)}평) • {property.floor}/\n                    {property.total_floors}층 • {property.rooms}룸{\" \"}\n                    {property.bathrooms}욕실\n                  </div>\n                </div>\n\n                {/* 가격정보 */}\n                <div className=\"col-span-3\">\n                  <div className=\"font-bold text-gray-900 text-sm break-words\">\n                    {formatPrice(property)}\n                  </div>\n                  <div className=\"text-xs text-gray-500 mt-1\">\n                    등록:{\" \"}\n                    {property.created_at &&\n                      new Date(property.created_at).toLocaleDateString(\n                        \"ko-KR\",\n                        { month: \"short\", day: \"numeric\" },\n                      )}\n                  </div>\n                </div>\n\n                {/* 임대인정보 */}\n                <div className=\"col-span-2\">\n                  {property.landlord_name ? (\n                    <div className=\"text-xs\">\n                      <div className=\"font-medium text-gray-700 truncate\">\n                        {property.landlord_name}\n                      </div>\n                      {property.landlord_phone && (\n                        <div className=\"text-gray-500 truncate\">\n                          {property.landlord_phone}\n                        </div>\n                      )}\n                    </div>\n                  ) : (\n                    <div className=\"text-xs text-gray-400\">정보 없음</div>\n                  )}\n                </div>\n\n                {/* 퇴실예정일 */}\n                <div className=\"col-span-1\">\n                  {property.exit_date ? (\n                    <div className=\"text-xs\">\n                      <div className=\"font-medium text-gray-700\">\n                        {new Date(property.exit_date).toLocaleDateString(\n                          \"ko-KR\",\n                        )}\n                      </div>\n                      <div className=\"text-gray-500\">퇴실예정</div>\n                    </div>\n                  ) : (\n                    <div className=\"text-xs text-gray-400\">미정</div>\n                  )}\n                </div>\n\n                {/* 추가정보 (편의시설) */}\n                <div className=\"col-span-2\">\n                  <div className=\"flex items-center space-x-2 text-xs\">\n                    <span\n                      className={`${property.parking ? \"text-green-600\" : \"text-gray-400\"}`}\n                    >\n                      🚗{property.parking ? \"주차\" : \"주차X\"}\n                    </span>\n                    <span\n                      className={`${property.elevator ? \"text-green-600\" : \"text-gray-400\"}`}\n                    >\n                      🏢{property.elevator ? \"엘베\" : \"엘베X\"}\n                    </span>\n                  </div>\n                  <div className=\"text-xs text-gray-500 mt-1\">\n                    조회: {property.view_count || 0}\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* 모바일 레이아웃 */}\n            <div className=\"lg:hidden px-4 py-4\">\n              <div className=\"space-y-3\">\n                {/* 첫 번째 줄: 거래유형, 상태, 가격 */}\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center space-x-2\">\n                    <Badge\n                      size=\"sm\"\n                      variant={\n                        property.transaction_type === \"매매\"\n                          ? \"sale\"\n                          : property.transaction_type === \"전세\"\n                            ? \"jeonse\"\n                            : \"monthly\"\n                      }\n                    >\n                      {property.transaction_type}\n                    </Badge>\n                    {/* 매물 상태 배지 */}\n                    <PropertyStatusBadge status={property.status} />\n                  </div>\n                  <div className=\"font-bold text-primary-600 text-base\">\n                    {formatPrice(property)}\n                  </div>\n                </div>\n\n                {/* 두 번째 줄: 매물 제목 */}\n                <div className=\"font-medium text-gray-900 text-base\">\n                  {property.title}\n                </div>\n\n                {/* 세 번째 줄: 주소 */}\n                <div className=\"text-sm text-gray-600\">\n                  📍 {property.address}\n                </div>\n\n                {/* 네 번째 줄: 매물 상세 정보 */}\n                <div className=\"text-sm text-gray-500\">\n                  {property.type} • {property.area}m² (\n                  {Math.floor(property.area / 3.3)}평) • {property.floor}/\n                  {property.total_floors}층 • {property.rooms}룸{\" \"}\n                  {property.bathrooms}욕실\n                </div>\n\n                {/* 다섯 번째 줄: 부가 정보 */}\n                <div className=\"flex items-center justify-between text-xs text-gray-500\">\n                  <div className=\"flex items-center space-x-3\">\n                    <span\n                      className={`${property.parking ? \"text-green-600\" : \"text-gray-400\"}`}\n                    >\n                      🚗{property.parking ? \"주차\" : \"주차X\"}\n                    </span>\n                    <span\n                      className={`${property.elevator ? \"text-green-600\" : \"text-gray-400\"}`}\n                    >\n                      🏢{property.elevator ? \"엘베\" : \"엘베X\"}\n                    </span>\n                    {property.exit_date && (\n                      <span className=\"text-orange-600\">\n                        퇴실:{\" \"}\n                        {new Date(property.exit_date).toLocaleDateString(\n                          \"ko-KR\",\n                          { month: \"short\", day: \"numeric\" },\n                        )}\n                      </span>\n                    )}\n                  </div>\n                  <div>\n                    등록:{\" \"}\n                    {property.created_at &&\n                      new Date(property.created_at).toLocaleDateString(\n                        \"ko-KR\",\n                        { month: \"short\", day: \"numeric\" },\n                      )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </Card>\n  );\n};\n\nexport { PropertiesPageNew };\n","// ============================================================================\n// 스케줄 생성/수정 폼 컴포넌트\n// ============================================================================\n\nimport React, { useState, useEffect } from \"react\";\nimport { Calendar, MapPin, Users, Tag, AlertCircle } from \"lucide-react\";\nimport { Button, Input, Modal } from \"@/components/ui\";\nimport { Schedule, ScheduleFormData, ScheduleCategory, SchedulePriority } from \"@/types/schedule\";\nimport { useAuth } from \"@/contexts/AuthContext\";\n// import { useTenant } from \"@/contexts/TenantContext\"; // 현재 사용하지 않음\nimport { scheduleService } from \"@/services/scheduleService\";\nimport { useProperties } from \"@/hooks/useProperties\";\n\ninterface ScheduleFormProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onSubmit: (schedule: Schedule) => void;\n  initialData?: Schedule | null;\n  selectedDate?: Date;\n}\n\nconst ScheduleForm: React.FC<ScheduleFormProps> = ({\n  isOpen,\n  onClose,\n  onSubmit,\n  initialData,\n  selectedDate,\n}) => {\n  const { user, loading: authLoading, session, getCurrentUser } = useAuth();\n  // const { tenant } = useTenant(); // 현재 사용하지 않음\n  const { properties } = useProperties();\n  \n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  \n  const [formData, setFormData] = useState<ScheduleFormData>({\n    title: \"\",\n    description: \"\",\n    start_date: \"\",\n    end_date: \"\",\n    all_day: false,\n    category: \"other\",\n    priority: \"medium\",\n    property_id: \"\",\n    attendees: [],\n    location: \"\",\n  });\n\n  // 초기 데이터 설정\n  useEffect(() => {\n    if (initialData) {\n      setFormData({\n        title: initialData.title,\n        description: initialData.description || \"\",\n        start_date: initialData.start_date,\n        end_date: initialData.end_date,\n        all_day: initialData.all_day,\n        category: initialData.category,\n        priority: initialData.priority,\n        property_id: initialData.property_id || \"\",\n        attendees: initialData.attendees || [],\n        location: initialData.location || \"\",\n      });\n    } else {\n      // 새 일정 생성 시 기본값 설정\n      const now = new Date();\n      \n      // 선택된 날짜의 적절한 시간대 설정\n      let startTime: Date;\n      let endTime: Date;\n      \n      if (selectedDate) {\n        // 캘린더에서 날짜를 클릭한 경우: 선택한 날짜의 현재 시간으로 설정\n        startTime = new Date(selectedDate);\n        // 선택한 날짜의 현재 시각 또는 다음 정시로 설정\n        const currentHour = now.getHours();\n        const currentMinute = now.getMinutes();\n        \n        if (selectedDate.toDateString() === now.toDateString()) {\n          // 오늘 날짜면 현재 시각 기준으로 다음 정시\n          startTime.setHours(currentHour + (currentMinute > 0 ? 1 : 0), 0, 0, 0);\n        } else {\n          // 다른 날짜면 오전 9시로 설정\n          startTime.setHours(9, 0, 0, 0);\n        }\n      } else {\n        // 일정 등록 버튼으로 직접 들어온 경우: 현재 시간 기준 다음 정시\n        startTime = new Date(now);\n        startTime.setHours(now.getHours() + 1, 0, 0, 0);\n      }\n      \n      // 종료 시간은 시작 시간의 1시간 후\n      endTime = new Date(startTime);\n      endTime.setHours(startTime.getHours() + 1);\n      \n      const startDateTime = startTime.toISOString().slice(0, 16); // YYYY-MM-DDTHH:MM 형식\n      const endDateTime = endTime.toISOString().slice(0, 16);\n      \n      console.log(\"🕐 기본 시간 설정:\", {\n        selectedDate: selectedDate?.toISOString(),\n        clickedDate: selectedDate?.toDateString(),\n        currentDate: now.toDateString(),\n        isToday: selectedDate?.toDateString() === now.toDateString(),\n        startDateTime,\n        endDateTime\n      });\n      \n      setFormData(prev => ({\n        ...prev,\n        start_date: startDateTime,\n        end_date: endDateTime,\n      }));\n    }\n  }, [initialData, selectedDate]);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    console.log(\"🚀 handleSubmit 함수 실행됨!\");\n    console.log(\"📋 현재 formData:\", formData);\n    console.log(\"🔍 현재 인증 상태:\", { \n      authLoading, \n      hasUser: !!user, \n      userId: user?.id,\n      hasSession: !!session \n    });\n    \n    // 인증 로딩 중이면 대기\n    if (authLoading) {\n      setError(\"인증 상태를 확인하는 중입니다. 잠시 후 다시 시도해주세요.\");\n      return;\n    }\n    \n    // 폼 유효성 검사\n    if (!formData.title.trim()) {\n      setError(\"일정 제목을 입력해주세요.\");\n      return;\n    }\n    \n    if (!formData.start_date) {\n      setError(\"시작 일시를 선택해주세요.\");\n      return;\n    }\n    \n    if (!formData.end_date) {\n      setError(\"종료 일시를 선택해주세요.\");\n      return;\n    }\n    \n    if (new Date(formData.start_date) >= new Date(formData.end_date)) {\n      setError(\"종료 일시는 시작 일시보다 뒤여야 합니다.\");\n      return;\n    }\n    \n    console.log(\"✅ 폼 유효성 검사 통과\");\n    \n    setIsSubmitting(true);\n    setError(null);\n\n    try {\n      // 1. 현재 인증된 사용자 확인 (여러 방법으로 시도)\n      console.log(\"🔐 인증 사용자 확인 중...\");\n      \n      let currentUser = null;\n      \n      // 개선된 getCurrentUser 함수 사용\n      const authUser = await getCurrentUser();\n      \n      if (!authUser) {\n        console.error(\"❌ 사용자 인증 실패\");\n        setError(\"사용자 인증에 실패했습니다. 페이지를 새로고침하거나 다시 로그인해주세요.\");\n        return;\n      }\n      \n      currentUser = { id: authUser.id, email: authUser.email };\n\n      console.log(\"✅ 인증된 사용자:\", {\n        id: currentUser.id,\n        email: currentUser.email\n      });\n\n      // 2. 사용자의 tenant_id 확인 (사용자 ID가 tenant_id가 됨)\n      const tenantId = currentUser.id; // 각 사용자별로 독립적인 데이터 관리\n      console.log(\"🏢 테넌트 ID:\", tenantId);\n\n      // 3. 폼 데이터 정리 (UUID 필드 처리)\n      const cleanedFormData = { ...formData };\n      \n      // property_id가 빈 문자열이면 속성 제거 (DB에서 NULL로 처리됨)\n      if (!cleanedFormData.property_id || cleanedFormData.property_id.trim() === '') {\n        delete cleanedFormData.property_id;\n      }\n      \n      // attendees가 빈 배열이면 속성 제거 (DB에서 NULL로 처리됨)\n      if (Array.isArray(cleanedFormData.attendees) && cleanedFormData.attendees.length === 0) {\n        delete cleanedFormData.attendees;\n      }\n      \n      console.log(\"🧹 정리된 폼 데이터:\", cleanedFormData);\n\n      // 4. 스케줄 생성/수정\n      let schedule: Schedule;\n      \n      if (initialData) {\n        console.log(\"🔄 일정 수정 중...\", {\n          scheduleId: initialData.id,\n          tenantId,\n          currentUserId: currentUser.id,\n          originalTenantId: initialData.tenant_id,\n          originalCreatedBy: initialData.created_by\n        });\n        \n        // 클라이언트 측에서 기본 권한 확인 (추가 보안은 서버에서)\n        if (initialData.tenant_id !== tenantId || initialData.created_by !== currentUser.id) {\n          console.error(\"❌ 클라이언트 권한 확인 실패\");\n          setError(\"이 일정을 수정할 권한이 없습니다.\");\n          return;\n        }\n        \n        schedule = await scheduleService.updateSchedule(initialData.id, cleanedFormData, currentUser.id);\n      } else {\n        console.log(\"➕ 일정 생성 중...\");\n        schedule = await scheduleService.createSchedule(\n          tenantId, // 사용자 ID를 테넌트 ID로 사용\n          currentUser.id,\n          cleanedFormData\n        );\n      }\n      \n      console.log(\"✅ 일정 저장 성공:\", schedule);\n      \n      // 4. UI 업데이트 및 모달 닫기\n      onSubmit(schedule);\n      onClose();\n      \n    } catch (err: any) {\n      console.error(\"❌ 일정 저장 실패:\", err);\n      console.error(\"❌ 오류 상세:\", {\n        message: err.message,\n        stack: err.stack,\n        name: err.name,\n        code: err.code\n      });\n      \n      // 사용자 친화적 오류 메시지\n      if (err.message?.includes(\"JWT\") || err.message?.includes(\"인증이 필요합니다\")) {\n        setError(\"세션이 만료되었습니다. 페이지를 새로고침하거나 다시 로그인해주세요.\");\n      } else if (err.message?.includes(\"permission\") || err.message?.includes(\"권한이 없습니다\")) {\n        setError(\"이 일정을 수정할 권한이 없습니다. 본인이 작성한 일정만 수정 가능합니다.\");\n      } else if (err.message?.includes(\"찾을 수 없습니다\")) {\n        setError(\"일정을 찾을 수 없습니다. 이미 삭제되었거나 권한이 없을 수 있습니다.\");\n      } else {\n        setError(err.message || \"일정 저장 중 오류가 발생했습니다.\");\n      }\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const handleChange = (field: keyof ScheduleFormData, value: any) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n    \n    // 종일 일정 체크 시 시간 자동 설정\n    if (field === \"all_day\" && value) {\n      const startDate = formData.start_date.split('T')[0];\n      const endDate = formData.end_date.split('T')[0];\n      setFormData(prev => ({\n        ...prev,\n        start_date: `${startDate}T00:00`,\n        end_date: `${endDate}T23:59`,\n      }));\n    }\n  };\n\n  const categoryOptions: { value: ScheduleCategory; label: string; icon: React.ReactNode }[] = [\n    { value: \"property_viewing\", label: \"매물 보기\", icon: <MapPin className=\"w-4 h-4\" /> },\n    { value: \"contract_signing\", label: \"계약 체결\", icon: <Tag className=\"w-4 h-4\" /> },\n    { value: \"maintenance\", label: \"유지보수\", icon: <AlertCircle className=\"w-4 h-4\" /> },\n    { value: \"client_meeting\", label: \"고객 미팅\", icon: <Users className=\"w-4 h-4\" /> },\n    { value: \"team_meeting\", label: \"팀 회의\", icon: <Users className=\"w-4 h-4\" /> },\n    { value: \"personal\", label: \"개인 일정\", icon: <Calendar className=\"w-4 h-4\" /> },\n    { value: \"other\", label: \"기타\", icon: <Tag className=\"w-4 h-4\" /> },\n  ];\n\n  const priorityOptions: { value: SchedulePriority; label: string; color: string }[] = [\n    { value: \"low\", label: \"낮음\", color: \"text-gray-600\" },\n    { value: \"medium\", label: \"보통\", color: \"text-blue-600\" },\n    { value: \"high\", label: \"높음\", color: \"text-orange-600\" },\n    { value: \"urgent\", label: \"긴급\", color: \"text-red-600\" },\n  ];\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      title={initialData ? \"일정 수정\" : \"새 일정 등록\"}\n      size=\"lg\"\n    >\n      <form onSubmit={handleSubmit} className=\"p-6 space-y-6\">\n        {error && (\n          <div className=\"bg-red-50 border border-red-200 rounded-lg p-3\">\n            <p className=\"text-sm text-red-600\">{error}</p>\n          </div>\n        )}\n\n        {/* 제목 */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            일정 제목 *\n          </label>\n          <Input\n            value={formData.title}\n            onChange={(e) => handleChange(\"title\", e.target.value)}\n            placeholder=\"일정 제목을 입력하세요\"\n            required\n          />\n        </div>\n\n        {/* 설명 */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            설명\n          </label>\n          <textarea\n            value={formData.description}\n            onChange={(e) => handleChange(\"description\", e.target.value)}\n            placeholder=\"일정에 대한 자세한 설명을 입력하세요\"\n            className=\"w-full border border-gray-300 rounded-lg px-3 py-2 text-sm resize-none h-20\"\n          />\n        </div>\n\n        {/* 카테고리 */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            카테고리 *\n          </label>\n          <select\n            value={formData.category}\n            onChange={(e) => handleChange(\"category\", e.target.value as ScheduleCategory)}\n            className=\"w-full border border-gray-300 rounded-lg px-3 py-2 text-sm\"\n            required\n          >\n            {categoryOptions.map((option) => (\n              <option key={option.value} value={option.value}>\n                {option.label}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        {/* 우선순위 */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            우선순위\n          </label>\n          <select\n            value={formData.priority}\n            onChange={(e) => handleChange(\"priority\", e.target.value as SchedulePriority)}\n            className=\"w-full border border-gray-300 rounded-lg px-3 py-2 text-sm\"\n          >\n            {priorityOptions.map((option) => (\n              <option key={option.value} value={option.value}>\n                {option.label}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        {/* 연관 매물 */}\n        {(formData.category === \"property_viewing\" || formData.category === \"contract_signing\") && (\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              연관 매물\n            </label>\n            <select\n              value={formData.property_id}\n              onChange={(e) => handleChange(\"property_id\", e.target.value)}\n              className=\"w-full border border-gray-300 rounded-lg px-3 py-2 text-sm\"\n            >\n              <option value=\"\">매물 선택 (선택사항)</option>\n              {properties.map((property) => (\n                <option key={property.id} value={property.id}>\n                  {property.title} - {property.address}\n                </option>\n              ))}\n            </select>\n          </div>\n        )}\n\n        {/* 종일 일정 체크박스 */}\n        <div className=\"flex items-center space-x-2\">\n          <input\n            type=\"checkbox\"\n            id=\"all_day\"\n            checked={formData.all_day}\n            onChange={(e) => handleChange(\"all_day\", e.target.checked)}\n            className=\"w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\"\n          />\n          <label htmlFor=\"all_day\" className=\"text-sm text-gray-700\">\n            종일 일정\n          </label>\n        </div>\n\n        {/* 시작 일시 */}\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              시작 일시 *\n            </label>\n            <Input\n              type={formData.all_day ? \"date\" : \"datetime-local\"}\n              value={formData.all_day ? formData.start_date.split('T')[0] : formData.start_date}\n              onChange={(e) => {\n                const value = formData.all_day ? `${e.target.value}T00:00` : e.target.value;\n                handleChange(\"start_date\", value);\n              }}\n              required\n            />\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              종료 일시 *\n            </label>\n            <Input\n              type={formData.all_day ? \"date\" : \"datetime-local\"}\n              value={formData.all_day ? formData.end_date.split('T')[0] : formData.end_date}\n              onChange={(e) => {\n                const value = formData.all_day ? `${e.target.value}T23:59` : e.target.value;\n                handleChange(\"end_date\", value);\n              }}\n              required\n            />\n          </div>\n        </div>\n\n        {/* 장소 */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            장소\n          </label>\n          <Input\n            value={formData.location}\n            onChange={(e) => handleChange(\"location\", e.target.value)}\n            placeholder=\"일정 장소를 입력하세요\"\n            leftIcon={<MapPin className=\"w-4 h-4\" />}\n          />\n        </div>\n\n        {/* 제출 버튼 */}\n        <div className=\"flex justify-end space-x-2 pt-4 border-t border-gray-200\">\n          <Button\n            type=\"button\"\n            onClick={onClose}\n            variant=\"outline\"\n            disabled={isSubmitting || authLoading}\n          >\n            취소\n          </Button>\n          <Button\n            type=\"submit\"\n            variant=\"tenant\"\n            disabled={isSubmitting || authLoading}\n            onClick={() => console.log(\"🔘 등록 버튼 클릭됨!\")}\n          >\n            {authLoading ? \"인증 확인 중...\" : isSubmitting ? \"저장 중...\" : initialData ? \"수정\" : \"등록\"}\n          </Button>\n        </div>\n      </form>\n    </Modal>\n  );\n};\n\nexport { ScheduleForm };","// ============================================================================\n// 스케줄 상세 보기 모달 컴포넌트\n// ============================================================================\n\nimport React, { useState } from \"react\";\nimport { \n  Calendar as CalendarIcon, \n  Clock, \n  MapPin, \n  User, \n  Tag, \n  AlertCircle,\n  Edit,\n  Trash2,\n  X\n} from \"lucide-react\";\nimport { Button, Modal } from \"@/components/ui\";\nimport { Schedule } from \"@/types/schedule\";\nimport { useIsMobile } from \"@/hooks/useMobileDetection\";\n\ninterface ScheduleDetailModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  schedule: Schedule | null;\n  onEdit: (schedule: Schedule) => void;\n  onDelete: (scheduleId: string) => void;\n}\n\nconst ScheduleDetailModal: React.FC<ScheduleDetailModalProps> = ({\n  isOpen,\n  onClose,\n  schedule,\n  onEdit,\n  onDelete,\n}) => {\n  const isMobile = useIsMobile();\n  const [isDeleting, setIsDeleting] = useState(false);\n\n  if (!schedule) return null;\n\n  // 카테고리별 색상 및 라벨\n  const categoryInfo = {\n    property_viewing: { label: \"매물 보기\", color: \"bg-blue-500\", icon: <MapPin className=\"w-4 h-4\" /> },\n    contract_signing: { label: \"계약 체결\", color: \"bg-green-500\", icon: <Tag className=\"w-4 h-4\" /> },\n    maintenance: { label: \"유지보수\", color: \"bg-yellow-500\", icon: <AlertCircle className=\"w-4 h-4\" /> },\n    client_meeting: { label: \"고객 미팅\", color: \"bg-purple-500\", icon: <User className=\"w-4 h-4\" /> },\n    team_meeting: { label: \"팀 회의\", color: \"bg-indigo-500\", icon: <User className=\"w-4 h-4\" /> },\n    personal: { label: \"개인 일정\", color: \"bg-pink-500\", icon: <CalendarIcon className=\"w-4 h-4\" /> },\n    other: { label: \"기타\", color: \"bg-gray-500\", icon: <Tag className=\"w-4 h-4\" /> },\n  };\n\n  const priorityInfo = {\n    low: { label: \"낮음\", color: \"text-gray-600 bg-gray-100\" },\n    medium: { label: \"보통\", color: \"text-blue-600 bg-blue-100\" },\n    high: { label: \"높음\", color: \"text-orange-600 bg-orange-100\" },\n    urgent: { label: \"긴급\", color: \"text-red-600 bg-red-100\" },\n  };\n\n  const statusInfo = {\n    scheduled: { label: \"예정됨\", color: \"text-blue-600 bg-blue-100\" },\n    in_progress: { label: \"진행 중\", color: \"text-yellow-600 bg-yellow-100\" },\n    completed: { label: \"완료됨\", color: \"text-green-600 bg-green-100\" },\n    cancelled: { label: \"취소됨\", color: \"text-red-600 bg-red-100\" },\n    postponed: { label: \"연기됨\", color: \"text-gray-600 bg-gray-100\" },\n  };\n\n  const formatDateTime = (dateString: string, allDay: boolean) => {\n    const date = new Date(dateString);\n    if (allDay) {\n      return date.toLocaleDateString(\"ko-KR\", {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n        weekday: \"long\",\n      });\n    }\n    return date.toLocaleDateString(\"ko-KR\", {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n      weekday: \"long\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n    });\n  };\n\n  const handleDelete = async () => {\n    if (!confirm(\"정말로 이 일정을 삭제하시겠습니까?\")) {\n      return;\n    }\n\n    setIsDeleting(true);\n    try {\n      await onDelete(schedule.id);\n      onClose();\n    } catch (error) {\n      console.error(\"일정 삭제 실패:\", error);\n    } finally {\n      setIsDeleting(false);\n    }\n  };\n\n  const categoryData = categoryInfo[schedule.category];\n  const priorityData = priorityInfo[schedule.priority];\n  const statusData = statusInfo[schedule.status];\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      title=\"\"\n      size=\"lg\"\n    >\n      <div className=\"p-6\">\n        {/* 헤더 */}\n        <div className=\"flex items-start justify-between mb-6\">\n          <div className=\"flex-1 min-w-0\">\n            <h2 className=\"text-xl font-bold text-gray-900 mb-2\">\n              {schedule.title}\n            </h2>\n            <div className=\"flex flex-wrap items-center gap-2\">\n              {/* 카테고리 */}\n              <span className={`inline-flex items-center px-2 py-1 rounded text-white text-xs font-medium ${categoryData.color}`}>\n                {categoryData.icon}\n                <span className=\"ml-1\">{categoryData.label}</span>\n              </span>\n              \n              {/* 우선순위 */}\n              <span className={`inline-flex items-center px-2 py-1 rounded text-xs font-medium ${priorityData.color}`}>\n                {priorityData.label}\n              </span>\n              \n              {/* 상태 */}\n              <span className={`inline-flex items-center px-2 py-1 rounded text-xs font-medium ${statusData.color}`}>\n                {statusData.label}\n              </span>\n            </div>\n          </div>\n          \n          {/* 닫기 버튼 */}\n          <button\n            onClick={onClose}\n            className=\"text-gray-400 hover:text-gray-600 ml-4\"\n          >\n            <X className=\"w-6 h-6\" />\n          </button>\n        </div>\n\n        {/* 날짜 및 시간 정보 */}\n        <div className=\"mb-6 p-4 bg-gray-50 rounded-lg\">\n          <div className=\"flex items-center text-gray-700 mb-2\">\n            <CalendarIcon className=\"w-5 h-5 mr-2\" />\n            <span className=\"font-medium\">시작</span>\n          </div>\n          <p className=\"text-sm text-gray-600 mb-3\">\n            {formatDateTime(schedule.start_date, schedule.all_day)}\n          </p>\n          \n          <div className=\"flex items-center text-gray-700 mb-2\">\n            <Clock className=\"w-5 h-5 mr-2\" />\n            <span className=\"font-medium\">종료</span>\n          </div>\n          <p className=\"text-sm text-gray-600\">\n            {formatDateTime(schedule.end_date, schedule.all_day)}\n          </p>\n          \n          {schedule.all_day && (\n            <div className=\"mt-2\">\n              <span className=\"inline-flex items-center px-2 py-1 rounded text-xs font-medium bg-blue-100 text-blue-600\">\n                종일 일정\n              </span>\n            </div>\n          )}\n        </div>\n\n        {/* 설명 */}\n        {schedule.description && (\n          <div className=\"mb-6\">\n            <h3 className=\"font-medium text-gray-900 mb-2\">상세 내용</h3>\n            <div className=\"p-4 bg-gray-50 rounded-lg\">\n              <p className=\"text-gray-700 whitespace-pre-wrap\">\n                {schedule.description}\n              </p>\n            </div>\n          </div>\n        )}\n\n        {/* 장소 */}\n        {schedule.location && (\n          <div className=\"mb-6\">\n            <div className=\"flex items-center text-gray-700 mb-2\">\n              <MapPin className=\"w-5 h-5 mr-2\" />\n              <span className=\"font-medium\">장소</span>\n            </div>\n            <p className=\"text-gray-600 ml-7\">{schedule.location}</p>\n          </div>\n        )}\n\n        {/* 생성 정보 */}\n        <div className=\"mb-6 pt-4 border-t border-gray-200\">\n          <p className=\"text-xs text-gray-500\">\n            생성일: {new Date(schedule.created_at).toLocaleDateString(\"ko-KR\")}\n          </p>\n          {schedule.updated_at !== schedule.created_at && (\n            <p className=\"text-xs text-gray-500\">\n              수정일: {new Date(schedule.updated_at).toLocaleDateString(\"ko-KR\")}\n            </p>\n          )}\n        </div>\n\n        {/* 액션 버튼 */}\n        <div className=\"flex justify-end space-x-2 pt-4 border-t border-gray-200\">\n          <Button\n            onClick={onClose}\n            variant=\"outline\"\n            size={isMobile ? \"sm\" : \"md\"}\n          >\n            닫기\n          </Button>\n          \n          <Button\n            onClick={() => {\n              onEdit(schedule);\n              onClose();\n            }}\n            variant=\"primary\"\n            leftIcon={<Edit className=\"w-4 h-4\" />}\n            size={isMobile ? \"sm\" : \"md\"}\n          >\n            {isMobile ? \"수정\" : \"수정\"}\n          </Button>\n          \n          <Button\n            onClick={handleDelete}\n            variant=\"danger\"\n            leftIcon={<Trash2 className=\"w-4 h-4\" />}\n            disabled={isDeleting}\n            size={isMobile ? \"sm\" : \"md\"}\n          >\n            {isDeleting ? \"삭제 중...\" : \"삭제\"}\n          </Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport { ScheduleDetailModal };","// ============================================================================\n// 캘린더형 스케줄 관리 페이지\n// ============================================================================\n\nimport React, { useState, useEffect } from \"react\";\nimport { \n  Calendar as CalendarIcon, \n  Plus, \n  ChevronLeft, \n  ChevronRight,\n  Filter,\n  List,\n  Grid3X3,\n  Eye,\n  MapPin\n} from \"lucide-react\";\nimport { Button, Modal } from \"@/components/ui\";\nimport { ScheduleForm } from \"@/components/schedule\";\nimport { ScheduleDetailModal } from \"@/components/schedule/ScheduleDetailModal\";\nimport { useIsMobile } from \"@/hooks/useMobileDetection\";\nimport { useAuth } from \"@/contexts/AuthContext\";\n// import { useTenant } from \"@/contexts/TenantContext\"; // 현재 사용하지 않음\nimport { Schedule, CalendarView, ScheduleCategory } from \"@/types/schedule\";\nimport { scheduleService } from \"@/services/scheduleService\";\n\nconst SchedulePage: React.FC = () => {\n  const isMobile = useIsMobile();\n  const { user } = useAuth();\n  // const { tenant } = useTenant(); // 현재 사용하지 않음\n  \n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [view, setView] = useState<CalendarView>(\"month\");\n  const [selectedDate, setSelectedDate] = useState<Date | null>(null);\n  const [showCreateModal, setShowCreateModal] = useState(false);\n  const [showFilterModal, setShowFilterModal] = useState(false);\n  const [showDetailModal, setShowDetailModal] = useState(false);\n  const [selectedSchedule, setSelectedSchedule] = useState<Schedule | null>(null);\n  const [editingSchedule, setEditingSchedule] = useState<Schedule | null>(null);\n  const [schedules, setSchedules] = useState<Schedule[]>([]);\n  const [selectedCategory, setSelectedCategory] = useState<ScheduleCategory | \"all\">(\"all\");\n  // const [isLoading, setIsLoading] = useState(false); // 현재 사용하지 않음\n\n  // 카테고리별 색상 매핑\n  const categoryColors = {\n    property_viewing: \"bg-blue-500\",\n    contract_signing: \"bg-green-500\", \n    maintenance: \"bg-yellow-500\",\n    client_meeting: \"bg-purple-500\",\n    team_meeting: \"bg-indigo-500\",\n    personal: \"bg-pink-500\",\n    other: \"bg-gray-500\"\n  };\n\n  const categoryLabels = {\n    property_viewing: \"매물 보기\",\n    contract_signing: \"계약 체결\",\n    maintenance: \"유지보수\", \n    client_meeting: \"고객 미팅\",\n    team_meeting: \"팀 회의\",\n    personal: \"개인 일정\",\n    other: \"기타\"\n  };\n\n  // 스케줄 데이터 로드 - 사용자별 완전한 데이터 분리\n  useEffect(() => {\n    const loadSchedules = async () => {\n      if (!user) {\n        console.log(\"⏳ 사용자 인증 대기 중...\");\n        return;\n      }\n      \n      // setIsLoading(true); // 로딩 상태 사용하지 않음\n      try {\n        console.log(\"📅 스케줄 데이터 로드 시작:\", {\n          userId: user.id,\n          tenantId: user.id // 사용자 ID가 테넌트 ID\n        });\n        \n        // 사용자 ID를 테넌트 ID로 사용하여 완전한 데이터 분리\n        const data = await scheduleService.getSchedules(user.id);\n        console.log(\"📅 로드된 스케줄:\", data.length, \"개\");\n        setSchedules(data);\n      } catch (error) {\n        console.error(\"❌ 스케줄 로드 실패:\", error);\n        setSchedules([]); // 오류 시 빈 배열로 설정\n      } finally {\n        // setIsLoading(false); // 로딩 상태 사용하지 않음\n      }\n    };\n\n    loadSchedules();\n  }, [user]); // user 의존성으로 변경\n\n  // 스케줄 생성/수정 핸들러\n  const handleScheduleSubmit = (schedule: Schedule) => {\n    setSchedules(prev => {\n      const existing = prev.find(s => s.id === schedule.id);\n      if (existing) {\n        return prev.map(s => s.id === schedule.id ? schedule : s);\n      } else {\n        return [...prev, schedule];\n      }\n    });\n  };\n\n  // 스케줄 상세보기\n  const handleScheduleClick = (schedule: Schedule) => {\n    setSelectedSchedule(schedule);\n    setShowDetailModal(true);\n  };\n\n  // 스케줄 수정\n  const handleScheduleEdit = (schedule: Schedule) => {\n    console.log(\"📝 스케줄 수정 요청:\", {\n      id: schedule.id,\n      title: schedule.title,\n      tenant_id: schedule.tenant_id,\n      created_by: schedule.created_by,\n      currentUserId: user?.id\n    });\n    setEditingSchedule(schedule);\n    setShowCreateModal(true);\n  };\n\n  // 스케줄 삭제\n  const handleScheduleDelete = async (scheduleId: string) => {\n    try {\n      console.log(\"🗑️ 스케줄 삭제 요청:\", { scheduleId, currentUserId: user?.id });\n      await scheduleService.deleteSchedule(scheduleId, user?.id);\n      setSchedules(prev => prev.filter(s => s.id !== scheduleId));\n      console.log(\"✅ 스케줄 삭제 완료:\", scheduleId);\n    } catch (error) {\n      console.error(\"❌ 스케줄 삭제 실패:\", error);\n      throw error;\n    }\n  };\n\n  // 모달 닫기 핸들러\n  const handleCloseCreateModal = () => {\n    setShowCreateModal(false);\n    setEditingSchedule(null);\n    setSelectedDate(null);\n  };\n\n  // 월 캘린더 렌더링\n  const renderMonthCalendar = () => {\n    const year = currentDate.getFullYear();\n    const month = currentDate.getMonth();\n    const firstDay = new Date(year, month, 1);\n    const lastDay = new Date(year, month + 1, 0);\n    const startDate = new Date(firstDay);\n    startDate.setDate(startDate.getDate() - firstDay.getDay());\n    \n    const endDate = new Date(lastDay);\n    endDate.setDate(endDate.getDate() + (6 - lastDay.getDay()));\n\n    const days = [];\n    const current = new Date(startDate);\n\n    while (current <= endDate) {\n      days.push(new Date(current));\n      current.setDate(current.getDate() + 1);\n    }\n\n    const weeks = [];\n    for (let i = 0; i < days.length; i += 7) {\n      weeks.push(days.slice(i, i + 7));\n    }\n\n    return (\n      <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden\">\n        {/* 월 캘린더 헤더 */}\n        <div className=\"bg-gray-50 border-b border-gray-200\">\n          <div className=\"grid grid-cols-7 text-center text-sm font-medium text-gray-500 py-3\">\n            {[\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"].map((day) => (\n              <div key={day}>{day}</div>\n            ))}\n          </div>\n        </div>\n\n        {/* 월 캘린더 본체 */}\n        <div className=\"divide-y divide-gray-200\">\n          {weeks.map((week, weekIndex) => (\n            <div key={weekIndex} className=\"grid grid-cols-7\">\n              {week.map((day, dayIndex) => {\n                const isToday = day.toDateString() === new Date().toDateString();\n                const isCurrentMonth = day.getMonth() === month;\n                const daySchedules = schedules.filter(schedule => {\n                  const scheduleDate = new Date(schedule.start_date);\n                  return scheduleDate.toDateString() === day.toDateString();\n                });\n\n                return (\n                  <div\n                    key={dayIndex}\n                    className={`min-h-[60px] sm:min-h-[80px] p-1 sm:p-2 border-r border-gray-100 last:border-r-0 cursor-pointer hover:bg-gray-50 transition-colors ${\n                      !isCurrentMonth ? \"bg-gray-25 text-gray-400\" : \"\"\n                    }`}\n                    onClick={() => {\n                      setSelectedDate(day);\n                      setShowCreateModal(true);\n                    }}\n                  >\n                    <div className={`text-xs sm:text-sm mb-1 ${\n                      isToday \n                        ? \"w-5 h-5 sm:w-6 sm:h-6 bg-blue-600 text-white rounded-full flex items-center justify-center font-bold text-xs\"\n                        : \"font-medium\"\n                    }`}>\n                      {day.getDate()}\n                    </div>\n                    \n                    {/* 스케줄 표시 */}\n                    <div className=\"space-y-1\">\n                      {daySchedules.slice(0, isMobile ? 1 : 3).map((schedule, idx) => (\n                        <div\n                          key={idx}\n                          className={`text-xs px-1 py-0.5 sm:px-2 sm:py-1 rounded text-white truncate cursor-pointer hover:opacity-80 touch-target ${\n                            categoryColors[schedule.category]\n                          }`}\n                          onClick={(e) => {\n                            e.stopPropagation(); // 부모 클릭 이벤트 방지\n                            handleScheduleClick(schedule);\n                          }}\n                          title={`${schedule.title} - 클릭하여 상세보기`}\n                        >\n                          {schedule.title}\n                        </div>\n                      ))}\n                      {daySchedules.length > (isMobile ? 1 : 3) && (\n                        <div className=\"text-xs text-gray-500\">\n                          +{daySchedules.length - (isMobile ? 1 : 3)}개 더\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  };\n\n  // 일정 리스트 뷰 렌더링\n  const renderAgendaView = () => {\n    const filteredSchedules = schedules.filter(schedule => \n      selectedCategory === \"all\" || schedule.category === selectedCategory\n    );\n\n    return (\n      <div className=\"bg-white rounded-lg shadow-sm border border-gray-200\">\n        <div className=\"p-4 border-b border-gray-200\">\n          <h3 className=\"text-lg font-semibold text-gray-900\">일정 목록</h3>\n        </div>\n        \n        <div className=\"divide-y divide-gray-200\">\n          {filteredSchedules.length === 0 ? (\n            <div className=\"p-8 text-center text-gray-500\">\n              <CalendarIcon className=\"w-12 h-12 mx-auto mb-3 text-gray-300\" />\n              <p>등록된 일정이 없습니다.</p>\n            </div>\n          ) : (\n            filteredSchedules.map((schedule) => (\n              <div \n                key={schedule.id} \n                className=\"p-4 hover:bg-blue-50 cursor-pointer transition-all duration-200 border-l-4 border-transparent hover:border-blue-400 hover:shadow-sm\"\n                onClick={() => handleScheduleClick(schedule)}\n                role=\"button\"\n                tabIndex={0}\n                onKeyDown={(e) => {\n                  if (e.key === 'Enter' || e.key === ' ') {\n                    e.preventDefault();\n                    handleScheduleClick(schedule);\n                  }\n                }}\n                aria-label={`${schedule.title} 일정 상세보기`}\n                title=\"클릭하여 일정 상세보기\"\n              >\n                <div className=\"flex items-start justify-between\">\n                  <div className=\"flex items-start space-x-3 flex-1 min-w-0\">\n                    <div className={`w-3 h-3 rounded-full mt-1 ${categoryColors[schedule.category]} flex-shrink-0`} />\n                    <div className=\"flex-1 min-w-0\">\n                      <div className=\"flex items-center space-x-2 mb-1\">\n                        <h4 className=\"text-sm font-medium text-gray-900 truncate\">\n                          {schedule.title}\n                        </h4>\n                        {schedule.priority === 'urgent' && (\n                          <span className=\"inline-flex items-center px-1.5 py-0.5 rounded text-xs font-medium bg-red-100 text-red-600\">\n                            긴급\n                          </span>\n                        )}\n                        {schedule.priority === 'high' && (\n                          <span className=\"inline-flex items-center px-1.5 py-0.5 rounded text-xs font-medium bg-orange-100 text-orange-600\">\n                            높음\n                          </span>\n                        )}\n                      </div>\n                      <p className=\"text-sm text-gray-500 mb-2\">\n                        {categoryLabels[schedule.category]}\n                      </p>\n                      <div className=\"flex items-center text-xs text-gray-400 mb-1\">\n                        <CalendarIcon className=\"w-4 h-4 mr-1\" />\n                        {new Date(schedule.start_date).toLocaleDateString(\"ko-KR\", {\n                          month: \"short\",\n                          day: \"numeric\",\n                          hour: schedule.all_day ? undefined : \"2-digit\",\n                          minute: schedule.all_day ? undefined : \"2-digit\",\n                        })}\n                        {schedule.location && (\n                          <>\n                            <MapPin className=\"w-3 h-3 ml-3 mr-1\" />\n                            <span className=\"truncate\">{schedule.location}</span>\n                          </>\n                        )}\n                      </div>\n                      {schedule.description && (\n                        <p className=\"text-xs text-gray-400 mt-1 line-clamp-2\">\n                          {schedule.description}\n                        </p>\n                      )}\n                    </div>\n                  </div>\n                  \n                  {/* 클릭 힌트 아이콘 */}\n                  <div className=\"flex-shrink-0 ml-2\">\n                    <Eye className=\"w-4 h-4 text-gray-400 group-hover:text-blue-500\" />\n                  </div>\n                </div>\n              </div>\n            ))\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"max-w-7xl mx-auto space-y-6\">\n      {/* 페이지 헤더 */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-gray-900\">일정 관리</h1>\n          <p className=\"text-gray-600 mt-1\">캘린더로 일정을 관리하세요</p>\n        </div>\n\n        <div className=\"flex items-center space-x-2\">\n          {/* 일정 등록 버튼 */}\n          <Button\n            onClick={() => setShowCreateModal(true)}\n            leftIcon={<Plus className=\"w-4 h-4\" />}\n            variant=\"tenant\"\n            size={isMobile ? \"sm\" : \"md\"}\n          >\n            {isMobile ? \"등록\" : \"일정 등록\"}\n          </Button>\n\n          {/* 필터 버튼 */}\n          <Button\n            onClick={() => setShowFilterModal(true)}\n            leftIcon={<Filter className=\"w-4 h-4\" />}\n            variant=\"outline\"\n            size={isMobile ? \"sm\" : \"md\"}\n          >\n            {isMobile ? \"필터\" : \"필터\"}\n          </Button>\n        </div>\n      </div>\n\n      {/* 캘린더 컨트롤 */}\n      <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between space-y-4 sm:space-y-0 bg-white p-4 rounded-lg shadow-sm border border-gray-200\">\n        {/* 날짜 네비게이션 */}\n        <div className=\"flex items-center space-x-4\">\n          <div className=\"flex items-center space-x-2\">\n            <Button\n              onClick={() => {\n                const newDate = new Date(currentDate);\n                newDate.setMonth(newDate.getMonth() - 1);\n                setCurrentDate(newDate);\n              }}\n              variant=\"outline\"\n              size=\"sm\"\n            >\n              <ChevronLeft className=\"w-4 h-4\" />\n            </Button>\n            \n            <h2 className=\"text-lg font-semibold min-w-[120px] text-center\">\n              {currentDate.toLocaleDateString(\"ko-KR\", {\n                year: \"numeric\",\n                month: \"long\"\n              })}\n            </h2>\n\n            <Button\n              onClick={() => {\n                const newDate = new Date(currentDate);\n                newDate.setMonth(newDate.getMonth() + 1);\n                setCurrentDate(newDate);\n              }}\n              variant=\"outline\"\n              size=\"sm\"\n            >\n              <ChevronRight className=\"w-4 h-4\" />\n            </Button>\n          </div>\n\n          <Button\n            onClick={() => setCurrentDate(new Date())}\n            variant=\"outline\"\n            size=\"sm\"\n          >\n            오늘\n          </Button>\n        </div>\n\n        {/* 뷰 전환 */}\n        <div className=\"flex items-center space-x-2\">\n          <Button\n            onClick={() => setView(\"month\")}\n            variant={view === \"month\" ? \"primary\" : \"outline\"}\n            size=\"sm\"\n            leftIcon={<Grid3X3 className=\"w-4 h-4\" />}\n          >\n            월간\n          </Button>\n          <Button\n            onClick={() => setView(\"agenda\")}\n            variant={view === \"agenda\" ? \"primary\" : \"outline\"}\n            size=\"sm\"\n            leftIcon={<List className=\"w-4 h-4\" />}\n          >\n            목록\n          </Button>\n        </div>\n      </div>\n\n      {/* 캘린더 내용 */}\n      {view === \"month\" ? renderMonthCalendar() : renderAgendaView()}\n\n      {/* 일정 생성 모달 */}\n      <ScheduleForm\n        isOpen={showCreateModal}\n        onClose={handleCloseCreateModal}\n        onSubmit={handleScheduleSubmit}\n        initialData={editingSchedule}\n        selectedDate={selectedDate || undefined}\n      />\n\n      {/* 일정 상세 보기 모달 */}\n      <ScheduleDetailModal\n        isOpen={showDetailModal}\n        onClose={() => setShowDetailModal(false)}\n        schedule={selectedSchedule}\n        onEdit={handleScheduleEdit}\n        onDelete={handleScheduleDelete}\n      />\n\n      {/* 필터 모달 */}\n      <Modal\n        isOpen={showFilterModal}\n        onClose={() => setShowFilterModal(false)}\n        title=\"일정 필터\"\n      >\n        <div className=\"p-6\">\n          <div className=\"space-y-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                카테고리\n              </label>\n              <select\n                value={selectedCategory}\n                onChange={(e) => setSelectedCategory(e.target.value as ScheduleCategory | \"all\")}\n                className=\"w-full border border-gray-300 rounded-lg px-3 py-2\"\n              >\n                <option value=\"all\">전체</option>\n                <option value=\"property_viewing\">매물 보기</option>\n                <option value=\"contract_signing\">계약 체결</option>\n                <option value=\"maintenance\">유지보수</option>\n                <option value=\"client_meeting\">고객 미팅</option>\n                <option value=\"team_meeting\">팀 회의</option>\n                <option value=\"personal\">개인 일정</option>\n                <option value=\"other\">기타</option>\n              </select>\n            </div>\n          </div>\n          \n          <div className=\"mt-6 flex justify-end space-x-2\">\n            <Button onClick={() => setShowFilterModal(false)} variant=\"outline\">\n              취소\n            </Button>\n            <Button onClick={() => setShowFilterModal(false)} variant=\"tenant\">\n              적용\n            </Button>\n          </div>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default SchedulePage;","// ============================================================================\n// 팀 관리 관련 타입 정의\n// ============================================================================\n\nexport interface TeamMember {\n  id: string;\n  tenant_id: string;\n  name: string;\n  email?: string;\n  phone?: string;\n  role: \"owner\" | \"admin\" | \"member\" | \"viewer\";\n  status: \"active\" | \"inactive\" | \"suspended\";\n  joined_at: string;\n  invited_by?: string;\n  company?: string;\n  inviter?: {\n    name: string;\n  };\n}\n\nexport interface TeamInvitation {\n  id: string;\n  tenant_id: string;\n  inviter_id: string;\n  email: string;\n  role: \"owner\" | \"admin\" | \"member\" | \"viewer\";\n  status: \"pending\" | \"accepted\" | \"declined\" | \"expired\";\n  invitation_token: string;\n  expires_at: string;\n  created_at: string;\n  inviter_name?: string;\n  inviter?: {\n    name: string;\n  };\n}\n\nexport interface CreateInvitationData {\n  email: string;\n  role: \"admin\" | \"member\" | \"viewer\";\n  message?: string;\n}\n\nexport interface AddExistingMemberData {\n  user_id: string;\n  role: \"admin\" | \"member\" | \"viewer\";\n}\n\nexport interface UserSearchResult {\n  id: string;\n  name: string;\n  email?: string;\n  company?: string;\n}\n\nexport const ROLE_LABELS = {\n  owner: \"팀 소유자\",\n  admin: \"관리자\",\n  member: \"멤버\",\n  viewer: \"뷰어\",\n} as const;\n\nexport const ROLE_DESCRIPTIONS = {\n  owner: \"팀의 모든 권한을 가집니다\",\n  admin: \"팀원 초대/관리 및 매물 관리가 가능합니다\",\n  member: \"매물 등록/수정/삭제가 가능합니다\",\n  viewer: \"매물 조회만 가능합니다\",\n} as const;\n\nexport const STATUS_LABELS = {\n  active: \"활성\",\n  inactive: \"비활성\",\n  suspended: \"정지됨\",\n} as const;\n\nexport const INVITATION_STATUS_LABELS = {\n  pending: \"대기중\",\n  accepted: \"수락됨\",\n  declined: \"거절됨\",\n  expired: \"만료됨\",\n} as const;\n","// ============================================================================\n// 팀원 정보 수정 모달 컴포넌트\n// ============================================================================\n\nimport React, { useState } from \"react\";\nimport {\n  X,\n  User,\n  Mail,\n  Phone,\n  Building,\n  Crown,\n  Shield,\n  Eye,\n} from \"lucide-react\";\nimport type { TeamMember } from \"@/types/team\";\nimport { ROLE_LABELS } from \"@/types/team\";\n\ninterface MemberEditModalProps {\n  member: TeamMember;\n  isOpen: boolean;\n  onClose: () => void;\n  onUpdate: (memberId: string, data: any) => Promise<void>;\n  onRoleChange: (\n    memberId: string,\n    newRole: TeamMember[\"role\"],\n  ) => Promise<void>;\n  onStatusChange: (\n    memberId: string,\n    newStatus: TeamMember[\"status\"],\n  ) => Promise<void>;\n  currentUserRole: string;\n  canEdit: boolean;\n}\n\nexport const MemberEditModal: React.FC<MemberEditModalProps> = ({\n  member,\n  isOpen,\n  onClose,\n  onUpdate,\n  onRoleChange,\n  onStatusChange,\n  currentUserRole,\n  canEdit,\n}) => {\n  const [activeTab, setActiveTab] = useState<\"info\" | \"role\" | \"status\">(\n    \"info\",\n  );\n  const [loading, setLoading] = useState(false);\n\n  // 정보 수정 상태\n  const [editData, setEditData] = useState({\n    name: member.name || \"\",\n    email: member.email || \"\",\n    phone: member.phone || \"\",\n    company: member.company || \"\",\n  });\n\n  if (!isOpen) return null;\n\n  const handleInfoUpdate = async () => {\n    try {\n      setLoading(true);\n      await onUpdate(member.id, editData);\n      onClose();\n    } catch (error: any) {\n      alert(error.message || \"정보 업데이트에 실패했습니다.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleRoleChange = async (newRole: TeamMember[\"role\"]) => {\n    if (\n      !confirm(\n        `${member.name}님의 역할을 ${ROLE_LABELS[newRole]}로 변경하시겠습니까?`,\n      )\n    )\n      return;\n\n    try {\n      setLoading(true);\n      await onRoleChange(member.id, newRole);\n      onClose();\n    } catch (error: any) {\n      alert(error.message || \"역할 변경에 실패했습니다.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleStatusChange = async (newStatus: TeamMember[\"status\"]) => {\n    if (!confirm(`${member.name}님의 상태를 변경하시겠습니까?`)) return;\n\n    try {\n      setLoading(true);\n      await onStatusChange(member.id, newStatus);\n      onClose();\n    } catch (error: any) {\n      alert(error.message || \"상태 변경에 실패했습니다.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getRoleIcon = (role: string) => {\n    switch (role) {\n      case \"owner\":\n        return <Crown className=\"w-4 h-4 text-yellow-500\" />;\n      case \"admin\":\n        return <Shield className=\"w-4 h-4 text-blue-500\" />;\n      case \"member\":\n        return <User className=\"w-4 h-4 text-green-500\" />;\n      case \"viewer\":\n        return <Eye className=\"w-4 h-4 text-gray-500\" />;\n      default:\n        return <User className=\"w-4 h-4\" />;\n    }\n  };\n\n  const canChangeRole = (targetRole: string) => {\n    if (currentUserRole === \"owner\") return true;\n    if (\n      currentUserRole === \"admin\" &&\n      [\"member\", \"viewer\"].includes(targetRole)\n    )\n      return true;\n    return false;\n  };\n\n  const canChangeStatus =\n    currentUserRole === \"owner\" || currentUserRole === \"admin\";\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n      <div className=\"bg-white rounded-lg w-full max-w-2xl mx-4 max-h-[90vh] overflow-hidden\">\n        {/* 헤더 */}\n        <div className=\"border-b border-gray-200 px-6 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"w-10 h-10 bg-blue-100 rounded-full flex items-center justify-center\">\n                <User className=\"w-5 h-5 text-blue-600\" />\n              </div>\n              <div>\n                <h2 className=\"text-lg font-semibold\">{member.name}</h2>\n                <div className=\"flex items-center space-x-2\">\n                  {getRoleIcon(member.role)}\n                  <span className=\"text-sm text-gray-600\">\n                    {ROLE_LABELS[member.role]}\n                  </span>\n                </div>\n              </div>\n            </div>\n            <button\n              onClick={onClose}\n              className=\"text-gray-400 hover:text-gray-600\"\n            >\n              <X className=\"w-5 h-5\" />\n            </button>\n          </div>\n        </div>\n\n        {/* 탭 네비게이션 */}\n        <div className=\"border-b border-gray-200\">\n          <nav className=\"flex\">\n            <button\n              onClick={() => setActiveTab(\"info\")}\n              className={`px-6 py-3 text-sm font-medium ${\n                activeTab === \"info\"\n                  ? \"border-b-2 border-blue-500 text-blue-600\"\n                  : \"text-gray-500 hover:text-gray-700\"\n              }`}\n            >\n              기본 정보\n            </button>\n            {canEdit && (\n              <>\n                <button\n                  onClick={() => setActiveTab(\"role\")}\n                  className={`px-6 py-3 text-sm font-medium ${\n                    activeTab === \"role\"\n                      ? \"border-b-2 border-blue-500 text-blue-600\"\n                      : \"text-gray-500 hover:text-gray-700\"\n                  }`}\n                >\n                  역할 관리\n                </button>\n                <button\n                  onClick={() => setActiveTab(\"status\")}\n                  className={`px-6 py-3 text-sm font-medium ${\n                    activeTab === \"status\"\n                      ? \"border-b-2 border-blue-500 text-blue-600\"\n                      : \"text-gray-500 hover:text-gray-700\"\n                  }`}\n                >\n                  상태 관리\n                </button>\n              </>\n            )}\n          </nav>\n        </div>\n\n        {/* 탭 내용 */}\n        <div className=\"p-6 overflow-y-auto max-h-[60vh]\">\n          {/* 기본 정보 탭 */}\n          {activeTab === \"info\" && (\n            <div className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  이름\n                </label>\n                <div className=\"relative\">\n                  <User className=\"w-4 h-4 absolute left-3 top-3 text-gray-400\" />\n                  <input\n                    type=\"text\"\n                    value={editData.name}\n                    onChange={(e) =>\n                      setEditData({ ...editData, name: e.target.value })\n                    }\n                    className=\"w-full pl-10 p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                    placeholder=\"이름을 입력하세요\"\n                    readOnly={!canEdit}\n                  />\n                </div>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  이메일\n                </label>\n                <div className=\"relative\">\n                  <Mail className=\"w-4 h-4 absolute left-3 top-3 text-gray-400\" />\n                  <input\n                    type=\"email\"\n                    value={editData.email}\n                    onChange={(e) =>\n                      setEditData({ ...editData, email: e.target.value })\n                    }\n                    className=\"w-full pl-10 p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                    placeholder=\"이메일을 입력하세요\"\n                    readOnly={!canEdit}\n                  />\n                </div>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  전화번호\n                </label>\n                <div className=\"relative\">\n                  <Phone className=\"w-4 h-4 absolute left-3 top-3 text-gray-400\" />\n                  <input\n                    type=\"tel\"\n                    value={editData.phone}\n                    onChange={(e) =>\n                      setEditData({ ...editData, phone: e.target.value })\n                    }\n                    className=\"w-full pl-10 p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                    placeholder=\"전화번호를 입력하세요\"\n                    readOnly={!canEdit}\n                  />\n                </div>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  회사명\n                </label>\n                <div className=\"relative\">\n                  <Building className=\"w-4 h-4 absolute left-3 top-3 text-gray-400\" />\n                  <input\n                    type=\"text\"\n                    value={editData.company}\n                    onChange={(e) =>\n                      setEditData({ ...editData, company: e.target.value })\n                    }\n                    className=\"w-full pl-10 p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                    placeholder=\"회사명을 입력하세요\"\n                    readOnly={!canEdit}\n                  />\n                </div>\n              </div>\n\n              <div className=\"text-sm text-gray-500\">\n                <p>\n                  가입일:{\" \"}\n                  {new Date(member.joined_at).toLocaleDateString(\"ko-KR\")}\n                </p>\n              </div>\n            </div>\n          )}\n\n          {/* 역할 관리 탭 */}\n          {activeTab === \"role\" && canEdit && (\n            <div className=\"space-y-4\">\n              <p className=\"text-sm text-gray-600\">\n                현재 역할:{\" \"}\n                <span className=\"font-medium\">{ROLE_LABELS[member.role]}</span>\n              </p>\n\n              <div className=\"grid grid-cols-1 gap-3\">\n                {([\"viewer\", \"member\", \"admin\", \"owner\"] as const).map(\n                  (role) => (\n                    <button\n                      key={role}\n                      onClick={() => handleRoleChange(role)}\n                      disabled={\n                        !canChangeRole(role) || member.role === role || loading\n                      }\n                      className={`p-4 border rounded-lg text-left transition-colors ${\n                        member.role === role\n                          ? \"border-blue-500 bg-blue-50\"\n                          : canChangeRole(role)\n                            ? \"border-gray-200 hover:border-gray-300 hover:bg-gray-50\"\n                            : \"border-gray-100 bg-gray-50 text-gray-400 cursor-not-allowed\"\n                      }`}\n                    >\n                      <div className=\"flex items-center space-x-3\">\n                        {getRoleIcon(role)}\n                        <div>\n                          <div className=\"font-medium\">{ROLE_LABELS[role]}</div>\n                          <div className=\"text-sm text-gray-500\">\n                            {role === \"owner\" &&\n                              \"모든 권한을 가지며 팀을 관리할 수 있습니다.\"}\n                            {role === \"admin\" &&\n                              \"팀원을 관리하고 매물을 관리할 수 있습니다.\"}\n                            {role === \"member\" &&\n                              \"매물을 등록하고 수정할 수 있습니다.\"}\n                            {role === \"viewer\" &&\n                              \"매물을 조회만 할 수 있습니다.\"}\n                          </div>\n                        </div>\n                      </div>\n                    </button>\n                  ),\n                )}\n              </div>\n            </div>\n          )}\n\n          {/* 상태 관리 탭 */}\n          {activeTab === \"status\" && canEdit && canChangeStatus && (\n            <div className=\"space-y-4\">\n              <p className=\"text-sm text-gray-600\">\n                현재 상태:{\" \"}\n                <span className=\"font-medium\">\n                  {member.status === \"active\"\n                    ? \"활성\"\n                    : member.status === \"inactive\"\n                      ? \"비활성\"\n                      : \"정지\"}\n                </span>\n              </p>\n\n              <div className=\"grid grid-cols-1 gap-3\">\n                <button\n                  onClick={() => handleStatusChange(\"active\")}\n                  disabled={member.status === \"active\" || loading}\n                  className={`p-4 border rounded-lg text-left transition-colors ${\n                    member.status === \"active\"\n                      ? \"border-green-500 bg-green-50\"\n                      : \"border-gray-200 hover:border-gray-300 hover:bg-gray-50\"\n                  }`}\n                >\n                  <div className=\"flex items-center space-x-3\">\n                    <div className=\"w-3 h-3 bg-green-500 rounded-full\"></div>\n                    <div>\n                      <div className=\"font-medium\">활성</div>\n                      <div className=\"text-sm text-gray-500\">\n                        팀원이 정상적으로 활동할 수 있습니다.\n                      </div>\n                    </div>\n                  </div>\n                </button>\n\n                <button\n                  onClick={() => handleStatusChange(\"inactive\")}\n                  disabled={member.status === \"inactive\" || loading}\n                  className={`p-4 border rounded-lg text-left transition-colors ${\n                    member.status === \"inactive\"\n                      ? \"border-gray-500 bg-gray-50\"\n                      : \"border-gray-200 hover:border-gray-300 hover:bg-gray-50\"\n                  }`}\n                >\n                  <div className=\"flex items-center space-x-3\">\n                    <div className=\"w-3 h-3 bg-gray-500 rounded-full\"></div>\n                    <div>\n                      <div className=\"font-medium\">비활성</div>\n                      <div className=\"text-sm text-gray-500\">\n                        팀원이 일시적으로 비활성 상태입니다.\n                      </div>\n                    </div>\n                  </div>\n                </button>\n\n                <button\n                  onClick={() => handleStatusChange(\"suspended\")}\n                  disabled={member.status === \"suspended\" || loading}\n                  className={`p-4 border rounded-lg text-left transition-colors ${\n                    member.status === \"suspended\"\n                      ? \"border-red-500 bg-red-50\"\n                      : \"border-gray-200 hover:border-gray-300 hover:bg-gray-50\"\n                  }`}\n                >\n                  <div className=\"flex items-center space-x-3\">\n                    <div className=\"w-3 h-3 bg-red-500 rounded-full\"></div>\n                    <div>\n                      <div className=\"font-medium\">정지</div>\n                      <div className=\"text-sm text-gray-500\">\n                        팀원의 접근이 정지됩니다.\n                      </div>\n                    </div>\n                  </div>\n                </button>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* 버튼 영역 */}\n        {activeTab === \"info\" && canEdit && (\n          <div className=\"border-t border-gray-200 px-6 py-4 flex justify-end space-x-3\">\n            <button\n              onClick={onClose}\n              className=\"px-4 py-2 text-gray-700 bg-gray-100 rounded-lg hover:bg-gray-200 transition-colors\"\n            >\n              취소\n            </button>\n            <button\n              onClick={handleInfoUpdate}\n              disabled={loading}\n              className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n            >\n              {loading ? \"저장 중...\" : \"저장\"}\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n","// ============================================================================\n// 팀 활동 로그 컴포넌트\n// ============================================================================\n\nimport React, { useState, useEffect } from \"react\";\nimport { Activity, ChevronDown, ChevronUp } from \"lucide-react\";\nimport { getTeamActivityLogs } from \"@/services/teamService\";\nimport { useAuth } from \"@/contexts/AuthContext\";\n\ninterface ActivityLog {\n  id: string;\n  action: string;\n  details: any;\n  created_at: string;\n  user_id: string;\n  user_name: string;\n}\n\nconst ACTION_LABELS: Record<string, string> = {\n  invitation_sent: \"팀원 초대\",\n  invitation_accepted: \"초대 수락\",\n  invitation_declined: \"초대 거절\",\n  invitation_cancelled: \"초대 취소\",\n  member_added: \"팀원 추가\",\n  member_removed: \"팀원 제거\",\n  role_changed: \"역할 변경\",\n  member_info_updated: \"정보 수정\",\n  member_status_changed: \"상태 변경\",\n};\n\ninterface TeamActivityLogProps {\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nexport const TeamActivityLog: React.FC<TeamActivityLogProps> = ({\n  isOpen,\n  onClose,\n}) => {\n  const { user } = useAuth();\n  const [logs, setLogs] = useState<ActivityLog[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [expandedLog, setExpandedLog] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (isOpen && user?.id) {\n      loadActivityLogs();\n    }\n  }, [isOpen, user?.id]);\n\n  const loadActivityLogs = async () => {\n    try {\n      setLoading(true);\n      const data = await getTeamActivityLogs(user!.id);\n      setLogs(data);\n    } catch (error) {\n      console.error(\"활동 로그 조회 실패:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const formatTimeAgo = (dateString: string) => {\n    const date = new Date(dateString);\n    const now = new Date();\n    const diffInSeconds = Math.floor((now.getTime() - date.getTime()) / 1000);\n\n    if (diffInSeconds < 60) return \"방금 전\";\n    if (diffInSeconds < 3600) return `${Math.floor(diffInSeconds / 60)}분 전`;\n    if (diffInSeconds < 86400)\n      return `${Math.floor(diffInSeconds / 3600)}시간 전`;\n    if (diffInSeconds < 2592000)\n      return `${Math.floor(diffInSeconds / 86400)}일 전`;\n\n    return date.toLocaleDateString(\"ko-KR\");\n  };\n\n  const getActionDescription = (log: ActivityLog) => {\n    const baseAction = ACTION_LABELS[log.action] || log.action;\n\n    switch (log.action) {\n      case \"role_changed\":\n        return `${log.details.target_user_name || \"팀원\"}의 역할을 변경했습니다`;\n      case \"member_status_changed\":\n        return `${log.details.target_user_name || \"팀원\"}의 상태를 변경했습니다`;\n      case \"member_info_updated\":\n        return `${log.details.target_user_name || \"팀원\"}의 정보를 수정했습니다`;\n      case \"member_removed\":\n        return `${log.details.target_user_name || \"팀원\"}을 팀에서 제거했습니다`;\n      case \"invitation_sent\":\n        return `${log.details.email}로 초대를 발송했습니다`;\n      default:\n        return baseAction;\n    }\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n      <div className=\"bg-white rounded-lg w-full max-w-4xl mx-4 max-h-[90vh] overflow-hidden\">\n        {/* 헤더 */}\n        <div className=\"border-b border-gray-200 px-6 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-3\">\n              <Activity className=\"w-6 h-6 text-blue-600\" />\n              <div>\n                <h2 className=\"text-lg font-semibold\">팀 활동 로그</h2>\n                <p className=\"text-sm text-gray-600\">\n                  팀의 모든 활동을 확인할 수 있습니다\n                </p>\n              </div>\n            </div>\n            <button\n              onClick={onClose}\n              className=\"text-gray-400 hover:text-gray-600\"\n            >\n              ×\n            </button>\n          </div>\n        </div>\n\n        {/* 콘텐츠 */}\n        <div className=\"p-6 overflow-y-auto max-h-[70vh]\">\n          {loading ? (\n            <div className=\"flex items-center justify-center py-12\">\n              <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500\"></div>\n            </div>\n          ) : logs.length === 0 ? (\n            <div className=\"text-center py-12\">\n              <Activity className=\"w-12 h-12 text-gray-300 mx-auto mb-4\" />\n              <p className=\"text-gray-500\">활동 로그가 없습니다.</p>\n            </div>\n          ) : (\n            <div className=\"space-y-4\">\n              {logs.map((log) => (\n                <div key={log.id} className=\"border border-gray-200 rounded-lg\">\n                  <div\n                    className=\"p-4 cursor-pointer hover:bg-gray-50 transition-colors\"\n                    onClick={() =>\n                      setExpandedLog(expandedLog === log.id ? null : log.id)\n                    }\n                  >\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex-1\">\n                        <div className=\"flex items-center space-x-3\">\n                          <div className=\"w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center\">\n                            <Activity className=\"w-4 h-4 text-blue-600\" />\n                          </div>\n                          <div>\n                            <p className=\"font-medium text-gray-900\">\n                              {getActionDescription(log)}\n                            </p>\n                            <p className=\"text-sm text-gray-500\">\n                              {log.user_name} • {formatTimeAgo(log.created_at)}\n                            </p>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"flex items-center space-x-2\">\n                        <span className=\"px-2 py-1 bg-gray-100 text-gray-700 text-xs rounded-full\">\n                          {ACTION_LABELS[log.action] || log.action}\n                        </span>\n                        {expandedLog === log.id ? (\n                          <ChevronUp className=\"w-4 h-4 text-gray-400\" />\n                        ) : (\n                          <ChevronDown className=\"w-4 h-4 text-gray-400\" />\n                        )}\n                      </div>\n                    </div>\n                  </div>\n\n                  {expandedLog === log.id && (\n                    <div className=\"border-t border-gray-100 px-4 py-3 bg-gray-50\">\n                      <div className=\"text-sm text-gray-600\">\n                        <p className=\"font-medium mb-2\">상세 정보:</p>\n                        <div className=\"space-y-1\">\n                          <p>\n                            • 시간:{\" \"}\n                            {new Date(log.created_at).toLocaleString(\"ko-KR\")}\n                          </p>\n                          <p>• 실행자: {log.user_name}</p>\n                          {log.details &&\n                            Object.keys(log.details).length > 0 && (\n                              <div className=\"mt-2\">\n                                <p className=\"font-medium\">추가 정보:</p>\n                                <div className=\"mt-1 pl-4 space-y-1\">\n                                  {Object.entries(log.details).map(\n                                    ([key, value]) => (\n                                      <p key={key} className=\"text-xs\">\n                                        • {key}:{\" \"}\n                                        {typeof value === \"object\"\n                                          ? JSON.stringify(value)\n                                          : String(value)}\n                                      </p>\n                                    ),\n                                  )}\n                                </div>\n                              </div>\n                            )}\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n\n        {/* 푸터 */}\n        <div className=\"border-t border-gray-200 px-6 py-4 flex justify-end\">\n          <button\n            onClick={onClose}\n            className=\"px-4 py-2 text-gray-700 bg-gray-100 rounded-lg hover:bg-gray-200 transition-colors\"\n          >\n            닫기\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","// ============================================================================\n// 초대 링크 모달 컴포넌트\n// ============================================================================\n\nimport React, { useState } from \"react\";\nimport { X, Copy, Mail, Check } from \"lucide-react\";\n\ninterface InviteLinkModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  inviteData: {\n    email: string;\n    inviteUrl: string;\n    role: string;\n    teamName?: string;\n  };\n}\n\nexport const InviteLinkModal: React.FC<InviteLinkModalProps> = ({\n  isOpen,\n  onClose,\n  inviteData,\n}) => {\n  const [copied, setCopied] = useState(false);\n\n  if (!isOpen) return null;\n\n  const handleCopyLink = async () => {\n    try {\n      await navigator.clipboard.writeText(inviteData.inviteUrl);\n      setCopied(true);\n      setTimeout(() => setCopied(false), 2000);\n    } catch (error) {\n      console.error(\"클립보드 복사 실패:\", error);\n    }\n  };\n\n  const handleEmailShare = () => {\n    const subject = `[${inviteData.teamName || \"팀\"}] 초대 - ${getRoleLabel(inviteData.role)} 역할`;\n    const body = `안녕하세요!\n\n${inviteData.teamName || \"팀\"}에서 ${getRoleLabel(inviteData.role)} 역할로 초대드립니다.\n\n아래 링크를 클릭하여 초대를 수락해주세요:\n${inviteData.inviteUrl}\n\n감사합니다.`;\n\n    const mailtoUrl = `mailto:${inviteData.email}?subject=${encodeURIComponent(subject)}&body=${encodeURIComponent(body)}`;\n    window.open(mailtoUrl);\n  };\n\n  const getRoleLabel = (role: string) => {\n    const labels = {\n      admin: \"관리자\",\n      member: \"멤버\",\n      viewer: \"뷰어\",\n    };\n    return labels[role as keyof typeof labels] || role;\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n      <div className=\"bg-white rounded-lg w-full max-w-md mx-4\">\n        {/* 헤더 */}\n        <div className=\"border-b border-gray-200 px-6 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h2 className=\"text-lg font-semibold\">초대 링크 생성 완료</h2>\n              <p className=\"text-sm text-gray-600\">\n                팀원에게 링크를 전송해주세요\n              </p>\n            </div>\n            <button\n              onClick={onClose}\n              className=\"text-gray-400 hover:text-gray-600\"\n            >\n              <X className=\"w-5 h-5\" />\n            </button>\n          </div>\n        </div>\n\n        {/* 콘텐츠 */}\n        <div className=\"p-6\">\n          <div className=\"space-y-4\">\n            {/* 초대 정보 */}\n            <div className=\"bg-blue-50 rounded-lg p-4\">\n              <div className=\"flex items-center space-x-2 mb-2\">\n                <Mail className=\"w-4 h-4 text-blue-600\" />\n                <span className=\"font-medium text-blue-900\">초대 정보</span>\n              </div>\n              <div className=\"text-sm text-blue-700\">\n                <p>\n                  <strong>이메일:</strong> {inviteData.email}\n                </p>\n                <p>\n                  <strong>역할:</strong> {getRoleLabel(inviteData.role)}\n                </p>\n                {inviteData.teamName && (\n                  <p>\n                    <strong>팀:</strong> {inviteData.teamName}\n                  </p>\n                )}\n              </div>\n            </div>\n\n            {/* 초대 링크 */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                초대 링크\n              </label>\n              <div className=\"flex\">\n                <input\n                  type=\"text\"\n                  value={inviteData.inviteUrl}\n                  readOnly\n                  className=\"flex-1 p-3 border border-gray-300 rounded-l-lg bg-gray-50 text-sm\"\n                />\n                <button\n                  onClick={handleCopyLink}\n                  className={`px-4 py-3 border border-l-0 border-gray-300 rounded-r-lg transition-colors ${\n                    copied\n                      ? \"bg-green-100 text-green-700 border-green-300\"\n                      : \"bg-gray-50 text-gray-700 hover:bg-gray-100\"\n                  }`}\n                  title=\"클립보드에 복사\"\n                >\n                  {copied ? (\n                    <Check className=\"w-4 h-4\" />\n                  ) : (\n                    <Copy className=\"w-4 h-4\" />\n                  )}\n                </button>\n              </div>\n              {copied && (\n                <p className=\"text-sm text-green-600 mt-1\">\n                  ✅ 클립보드에 복사되었습니다!\n                </p>\n              )}\n            </div>\n\n            {/* 안내 메시지 */}\n            <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-4\">\n              <div className=\"flex items-start space-x-2\">\n                <div className=\"text-yellow-600\">⚠️</div>\n                <div className=\"text-sm text-yellow-800\">\n                  <p className=\"font-medium mb-1\">링크 보안 안내</p>\n                  <ul className=\"space-y-1 text-xs\">\n                    <li>• 이 링크는 7일 후 만료됩니다</li>\n                    <li>• 초대받은 이메일 계정으로만 수락 가능합니다</li>\n                    <li>• 안전한 방법으로 전달해주세요</li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* 액션 버튼 */}\n        <div className=\"border-t border-gray-200 px-6 py-4 flex space-x-3\">\n          <button\n            onClick={handleEmailShare}\n            className=\"flex-1 bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors flex items-center justify-center space-x-2\"\n          >\n            <Mail className=\"w-4 h-4\" />\n            <span>이메일로 전송</span>\n          </button>\n          <button\n            onClick={onClose}\n            className=\"px-6 py-2 text-gray-700 bg-gray-100 rounded-lg hover:bg-gray-200 transition-colors\"\n          >\n            완료\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","// ============================================================================\n// 팀 관리 메인 컴포넌트\n// ============================================================================\n\nimport React, { useState, useEffect } from \"react\";\nimport {\n  Users,\n  UserPlus,\n  Mail,\n  Search,\n  Crown,\n  Shield,\n  User,\n  Eye,\n  Trash2,\n  X,\n  Edit,\n  Activity,\n  MoreVertical,\n} from \"lucide-react\";\nimport { useAuth } from \"@/contexts/AuthContext\";\nimport * as teamService from \"@/services/teamService\";\nimport type {\n  TeamMember,\n  TeamInvitation,\n  UserSearchResult,\n} from \"@/types/team\";\nimport {\n  ROLE_LABELS,\n  STATUS_LABELS,\n  INVITATION_STATUS_LABELS,\n} from \"@/types/team\";\nimport { MemberEditModal } from \"./MemberEditModal\";\nimport { TeamActivityLog } from \"./TeamActivityLog\";\nimport { InviteLinkModal } from \"./InviteLinkModal\";\n\nexport const TeamManagement: React.FC = () => {\n  const { user } = useAuth();\n  const [members, setMembers] = useState<TeamMember[]>([]);\n  const [invitations, setInvitations] = useState<TeamInvitation[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [showInviteModal, setShowInviteModal] = useState(false);\n  const [inviteType, setInviteType] = useState<\"email\" | \"existing\">(\"email\");\n\n  // 이메일 초대 상태\n  const [inviteEmail, setInviteEmail] = useState(\"\");\n  const [inviteRole, setInviteRole] = useState<\"admin\" | \"member\" | \"viewer\">(\n    \"member\",\n  );\n  const [inviteMessage, setInviteMessage] = useState(\"\");\n\n  // 기존 회원 추가 상태\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [searchResults, setSearchResults] = useState<UserSearchResult[]>([]);\n  const [selectedUser, setSelectedUser] = useState<UserSearchResult | null>(\n    null,\n  );\n  const [memberRole, setMemberRole] = useState<\"admin\" | \"member\" | \"viewer\">(\n    \"member\",\n  );\n\n  const [actionLoading, setActionLoading] = useState(false);\n\n  // 새로운 모달 상태\n  const [selectedMember, setSelectedMember] = useState<TeamMember | null>(null);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [showActivityLog, setShowActivityLog] = useState(false);\n  const [memberMenuOpen, setMemberMenuOpen] = useState<string | null>(null);\n  const [showInviteLinkModal, setShowInviteLinkModal] = useState(false);\n  const [inviteLinkData, setInviteLinkData] = useState<any>(null);\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\n  const [memberToDelete, setMemberToDelete] = useState<{\n    id: string;\n    name: string;\n  } | null>(null);\n\n  // 현재 사용자의 역할 확인\n  const currentUserRole = members.find((m) => m.id === user?.id)?.role;\n\n  useEffect(() => {\n    if (user?.id) {\n      loadTeamData();\n    }\n  }, [user?.id]);\n\n  useEffect(() => {\n    const handleClickOutside = () => {\n      setMemberMenuOpen(null);\n    };\n\n    if (memberMenuOpen) {\n      document.addEventListener(\"click\", handleClickOutside);\n      return () => document.removeEventListener(\"click\", handleClickOutside);\n    }\n\n    return undefined;\n  }, [memberMenuOpen]);\n\n  const loadTeamData = async () => {\n    try {\n      setLoading(true);\n      const [membersData, invitationsData] = await Promise.all([\n        teamService.getTeamMembers(user!.id),\n        teamService.getTeamInvitations(user!.id),\n      ]);\n\n      setMembers(membersData);\n      setInvitations(invitationsData);\n    } catch (error) {\n      console.error(\"팀 데이터 로드 실패:\", error);\n      alert(\"팀 정보를 불러오는데 실패했습니다.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleEmailInvite = async () => {\n    if (!inviteEmail.trim()) {\n      alert(\"이메일을 입력해주세요.\");\n      return;\n    }\n\n    try {\n      setActionLoading(true);\n      const result = await teamService.inviteTeamMember(user!.id, {\n        email: inviteEmail,\n        role: inviteRole,\n        message: inviteMessage,\n      });\n\n      // 초대 링크 모달 표시\n      setInviteLinkData({\n        email: inviteEmail,\n        inviteUrl: (result as any).inviteUrl,\n        role: inviteRole,\n        teamName: \"리체 매물장\", // 실제 팀 이름으로 변경 가능\n      });\n      setShowInviteLinkModal(true);\n      setShowInviteModal(false);\n      resetInviteForm();\n      loadTeamData();\n    } catch (error: any) {\n      alert(error.message || \"초대 발송에 실패했습니다.\");\n    } finally {\n      setActionLoading(false);\n    }\n  };\n\n  const handleAddExistingMember = async () => {\n    if (!selectedUser) {\n      alert(\"추가할 회원을 선택해주세요.\");\n      return;\n    }\n\n    try {\n      setActionLoading(true);\n      await teamService.addExistingMember(user!.id, {\n        user_id: selectedUser.id,\n        role: memberRole,\n      });\n\n      alert(\"팀원이 추가되었습니다.\");\n      setShowInviteModal(false);\n      resetAddMemberForm();\n      loadTeamData();\n    } catch (error: any) {\n      alert(error.message || \"팀원 추가에 실패했습니다.\");\n    } finally {\n      setActionLoading(false);\n    }\n  };\n\n  const handleSearchUsers = async (query: string) => {\n    if (!query.trim() || query.length < 2) {\n      setSearchResults([]);\n      return;\n    }\n\n    try {\n      const results = await teamService.searchUsers(query, user!.id);\n      setSearchResults(results);\n    } catch (error) {\n      console.error(\"사용자 검색 실패:\", error);\n    }\n  };\n\n  const handleRemoveMemberClick = (memberId: string, memberName: string) => {\n    // 추가 안전 검사\n    const memberToRemove = members.find((m) => m.id === memberId);\n\n    if (!memberToRemove) {\n      alert(\"삭제할 팀원을 찾을 수 없습니다.\");\n      return;\n    }\n\n    // Owner는 삭제할 수 없음\n    if (memberToRemove.role === \"owner\") {\n      alert(\"Owner는 팀에서 제거할 수 없습니다.\");\n      return;\n    }\n\n    // 자기 자신은 삭제할 수 없음\n    if (memberId === user?.id) {\n      alert(\"자신을 팀에서 제거할 수 없습니다.\");\n      return;\n    }\n\n    // 권한 확인\n    if (currentUserRole !== \"owner\" && currentUserRole !== \"admin\") {\n      alert(\"팀원을 제거할 권한이 없습니다.\");\n      return;\n    }\n\n    // 삭제 확인 모달 표시\n    setMemberToDelete({ id: memberId, name: memberName });\n    setShowDeleteConfirm(true);\n  };\n\n  const handleConfirmRemoveMember = async () => {\n    if (!memberToDelete) return;\n\n    try {\n      setActionLoading(true);\n      await teamService.removeMember(user!.id, memberToDelete.id);\n      alert(`✅ ${memberToDelete.name}님이 팀에서 제거되었습니다.`);\n      loadTeamData();\n      setShowDeleteConfirm(false);\n      setMemberToDelete(null);\n    } catch (error: any) {\n      console.error(\"팀원 제거 실패:\", error);\n      alert(\n        `❌ 팀원 제거에 실패했습니다.\\n\\n오류: ${error.message || \"알 수 없는 오류\"}`,\n      );\n    } finally {\n      setActionLoading(false);\n    }\n  };\n\n  const handleCancelInvitation = async (invitationId: string) => {\n    if (!confirm(\"초대를 취소하시겠습니까?\")) return;\n\n    try {\n      setActionLoading(true);\n      await teamService.cancelInvitation(user!.id, invitationId);\n      alert(\"초대가 취소되었습니다.\");\n      loadTeamData();\n    } catch (error: any) {\n      alert(error.message || \"초대 취소에 실패했습니다.\");\n    } finally {\n      setActionLoading(false);\n    }\n  };\n\n  const resetInviteForm = () => {\n    setInviteEmail(\"\");\n    setInviteRole(\"member\");\n    setInviteMessage(\"\");\n  };\n\n  const resetAddMemberForm = () => {\n    setSearchQuery(\"\");\n    setSearchResults([]);\n    setSelectedUser(null);\n    setMemberRole(\"member\");\n  };\n\n  const handleEditMember = (member: TeamMember) => {\n    setSelectedMember(member);\n    setShowEditModal(true);\n    setMemberMenuOpen(null);\n  };\n\n  const handleMemberInfoUpdate = async (memberId: string, updateData: any) => {\n    await teamService.updateMemberInfo(user!.id, memberId, updateData);\n    loadTeamData();\n  };\n\n  const handleMemberRoleChange = async (\n    memberId: string,\n    newRole: TeamMember[\"role\"],\n  ) => {\n    await teamService.updateMemberRole(user!.id, memberId, newRole);\n    loadTeamData();\n  };\n\n  const handleMemberStatusChange = async (\n    memberId: string,\n    newStatus: TeamMember[\"status\"],\n  ) => {\n    await teamService.updateMemberStatus(user!.id, memberId, newStatus);\n    loadTeamData();\n  };\n\n  const getRoleIcon = (role: string) => {\n    switch (role) {\n      case \"owner\":\n        return <Crown className=\"w-4 h-4 text-yellow-500\" />;\n      case \"admin\":\n        return <Shield className=\"w-4 h-4 text-blue-500\" />;\n      case \"member\":\n        return <User className=\"w-4 h-4 text-green-500\" />;\n      case \"viewer\":\n        return <Eye className=\"w-4 h-4 text-gray-500\" />;\n      default:\n        return <User className=\"w-4 h-4\" />;\n    }\n  };\n\n  const canManageTeam =\n    currentUserRole === \"owner\" || currentUserRole === \"admin\";\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-[400px]\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500 mx-auto mb-4\"></div>\n          <p className=\"text-gray-600\">팀 정보를 불러오는 중...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"max-w-6xl mx-auto p-6\">\n      <div className=\"bg-white rounded-lg shadow-sm border border-gray-200\">\n        {/* 헤더 */}\n        <div className=\"border-b border-gray-200 px-6 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-3\">\n              <Users className=\"w-6 h-6 text-blue-600\" />\n              <div>\n                <h1 className=\"text-xl font-semibold text-gray-900\">팀 관리</h1>\n                <p className=\"text-sm text-gray-600\">팀원 초대 및 관리</p>\n              </div>\n            </div>\n\n            {canManageTeam && (\n              <div className=\"flex items-center space-x-3\">\n                <button\n                  onClick={() => setShowActivityLog(true)}\n                  className=\"text-gray-600 hover:text-gray-800 px-3 py-2 rounded-lg hover:bg-gray-100 transition-colors flex items-center space-x-2\"\n                >\n                  <Activity className=\"w-4 h-4\" />\n                  <span>활동 로그</span>\n                </button>\n                <button\n                  onClick={() => setShowInviteModal(true)}\n                  className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors flex items-center space-x-2\"\n                >\n                  <UserPlus className=\"w-4 h-4\" />\n                  <span>팀원 초대</span>\n                </button>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* 팀원 목록 */}\n        <div className=\"px-6 py-4\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h2 className=\"text-lg font-medium text-gray-900\">\n              팀원 ({members.length}명)\n            </h2>\n          </div>\n\n          <div className=\"space-y-3\">\n            {members.map((member) => (\n              <div\n                key={member.id}\n                className=\"flex items-center justify-between p-4 bg-gray-50 rounded-lg\"\n              >\n                <div className=\"flex items-center space-x-4\">\n                  <div className=\"w-10 h-10 bg-blue-100 rounded-full flex items-center justify-center\">\n                    <User className=\"w-5 h-5 text-blue-600\" />\n                  </div>\n                  <div>\n                    <div className=\"flex items-center space-x-2\">\n                      <h3 className=\"font-medium text-gray-900\">\n                        {member.name}\n                      </h3>\n                      {getRoleIcon(member.role)}\n                      <span className=\"text-sm text-gray-600\">\n                        {ROLE_LABELS[member.role]}\n                      </span>\n                    </div>\n                    {member.email && (\n                      <p className=\"text-sm text-gray-500\">{member.email}</p>\n                    )}\n                    <p className=\"text-xs text-gray-400\">\n                      {new Date(member.joined_at).toLocaleDateString(\"ko-KR\")}{\" \"}\n                      가입\n                    </p>\n                  </div>\n                </div>\n\n                <div className=\"flex items-center space-x-2\">\n                  <span\n                    className={`px-2 py-1 rounded-full text-xs font-medium ${\n                      member.status === \"active\"\n                        ? \"bg-green-100 text-green-800\"\n                        : member.status === \"inactive\"\n                          ? \"bg-gray-100 text-gray-800\"\n                          : \"bg-red-100 text-red-800\"\n                    }`}\n                  >\n                    {STATUS_LABELS[member.status]}\n                  </span>\n\n                  {/* 수정 버튼 */}\n                  <button\n                    onClick={() => handleEditMember(member)}\n                    className=\"p-2 text-blue-600 hover:bg-blue-50 rounded-lg transition-colors\"\n                    title=\"정보 수정\"\n                  >\n                    <Edit className=\"w-4 h-4\" />\n                  </button>\n\n                  {/* 삭제 버튼 - 더 명확한 조건으로 표시 */}\n                  {(currentUserRole === \"owner\" ||\n                    currentUserRole === \"admin\") &&\n                  member.role !== \"owner\" &&\n                  member.id !== user?.id ? (\n                    <button\n                      onClick={() =>\n                        handleRemoveMemberClick(member.id, member.name)\n                      }\n                      className=\"p-2 text-red-600 hover:bg-red-50 rounded-lg transition-colors\"\n                      title=\"팀에서 제거\"\n                      disabled={actionLoading}\n                    >\n                      <Trash2 className=\"w-4 h-4\" />\n                    </button>\n                  ) : (\n                    /* 삭제 조건이 맞지 않을 때 - 개발 환경에서만 정보 표시 */\n                    import.meta.env.DEV && (\n                      <div\n                        className=\"text-xs text-gray-400 p-2\"\n                        title=\"삭제 불가 사유\"\n                      >\n                        {currentUserRole !== \"owner\" &&\n                          currentUserRole !== \"admin\" &&\n                          \"권한없음\"}\n                        {member.role === \"owner\" && \"Owner\"}\n                        {member.id === user?.id && \"본인\"}\n                      </div>\n                    )\n                  )}\n\n                  {/* 더보기 메뉴 (필요시) */}\n                  <div className=\"relative\">\n                    <button\n                      onClick={() =>\n                        setMemberMenuOpen(\n                          memberMenuOpen === member.id ? null : member.id,\n                        )\n                      }\n                      className=\"p-2 text-gray-600 hover:bg-gray-100 rounded-lg transition-colors\"\n                      title=\"추가 옵션\"\n                    >\n                      <MoreVertical className=\"w-4 h-4\" />\n                    </button>\n\n                    {memberMenuOpen === member.id && (\n                      <div className=\"absolute right-0 top-full mt-1 w-48 bg-white border border-gray-200 rounded-lg shadow-lg z-10\">\n                        <div className=\"py-1\">\n                          <button\n                            onClick={() => {\n                              // 추가 기능이 필요한 경우 여기에 구현\n                              setMemberMenuOpen(null);\n                              alert(\"추가 기능은 준비 중입니다.\");\n                            }}\n                            className=\"w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 flex items-center space-x-2\"\n                          >\n                            <MoreVertical className=\"w-4 h-4\" />\n                            <span>추가 옵션</span>\n                          </button>\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* 초대 목록 */}\n        {invitations.length > 0 && (\n          <div className=\"border-t border-gray-200 px-6 py-4\">\n            <h2 className=\"text-lg font-medium text-gray-900 mb-4\">\n              대기 중인 초대 ({invitations.length}개)\n            </h2>\n\n            <div className=\"space-y-3\">\n              {invitations.map((invitation) => (\n                <div\n                  key={invitation.id}\n                  className=\"flex items-center justify-between p-4 bg-yellow-50 rounded-lg\"\n                >\n                  <div className=\"flex items-center space-x-4\">\n                    <div className=\"w-10 h-10 bg-yellow-100 rounded-full flex items-center justify-center\">\n                      <Mail className=\"w-5 h-5 text-yellow-600\" />\n                    </div>\n                    <div>\n                      <div className=\"flex items-center space-x-2\">\n                        <h3 className=\"font-medium text-gray-900\">\n                          {invitation.email}\n                        </h3>\n                        {getRoleIcon(invitation.role)}\n                        <span className=\"text-sm text-gray-600\">\n                          {ROLE_LABELS[invitation.role]}\n                        </span>\n                      </div>\n                      <p className=\"text-sm text-gray-500\">\n                        {invitation.inviter_name}님이 초대 •{\" \"}\n                        {new Date(invitation.created_at).toLocaleDateString(\n                          \"ko-KR\",\n                        )}\n                      </p>\n                      <p className=\"text-xs text-gray-400\">\n                        만료일:{\" \"}\n                        {new Date(invitation.expires_at).toLocaleDateString(\n                          \"ko-KR\",\n                        )}\n                      </p>\n                    </div>\n                  </div>\n\n                  <div className=\"flex items-center space-x-2\">\n                    <span\n                      className={`px-2 py-1 rounded-full text-xs font-medium ${\n                        invitation.status === \"pending\"\n                          ? \"bg-yellow-100 text-yellow-800\"\n                          : invitation.status === \"accepted\"\n                            ? \"bg-green-100 text-green-800\"\n                            : invitation.status === \"declined\"\n                              ? \"bg-red-100 text-red-800\"\n                              : \"bg-gray-100 text-gray-800\"\n                      }`}\n                    >\n                      {INVITATION_STATUS_LABELS[invitation.status]}\n                    </span>\n\n                    {canManageTeam && invitation.status === \"pending\" && (\n                      <button\n                        onClick={() => handleCancelInvitation(invitation.id)}\n                        className=\"p-2 text-red-600 hover:bg-red-50 rounded-lg transition-colors\"\n                        title=\"초대 취소\"\n                      >\n                        <X className=\"w-4 h-4\" />\n                      </button>\n                    )}\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* 초대 모달 */}\n      {showInviteModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-lg w-full max-w-md mx-4\">\n            <div className=\"border-b border-gray-200 px-6 py-4\">\n              <div className=\"flex items-center justify-between\">\n                <h2 className=\"text-lg font-semibold\">팀원 초대</h2>\n                <button\n                  onClick={() => setShowInviteModal(false)}\n                  className=\"text-gray-400 hover:text-gray-600\"\n                >\n                  <X className=\"w-5 h-5\" />\n                </button>\n              </div>\n            </div>\n\n            <div className=\"px-6 py-4 space-y-4\">\n              {/* 초대 방식 선택 */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n                  초대 방식 선택\n                </label>\n                <div className=\"grid grid-cols-2 gap-3\">\n                  <label\n                    className={`flex items-center p-4 border rounded-lg cursor-pointer transition-colors ${\n                      inviteType === \"email\"\n                        ? \"border-blue-500 bg-blue-50 text-blue-700\"\n                        : \"border-gray-300 hover:bg-gray-50\"\n                    }`}\n                  >\n                    <input\n                      type=\"radio\"\n                      name=\"inviteType\"\n                      value=\"email\"\n                      checked={inviteType === \"email\"}\n                      onChange={(e) => setInviteType(e.target.value as \"email\")}\n                      className=\"mr-3\"\n                    />\n                    <div>\n                      <div className=\"font-medium\">📧 이메일 초대</div>\n                      <div className=\"text-xs text-gray-600\">\n                        새로운 사용자를 초대\n                      </div>\n                    </div>\n                  </label>\n                  <label\n                    className={`flex items-center p-4 border rounded-lg cursor-pointer transition-colors ${\n                      inviteType === \"existing\"\n                        ? \"border-blue-500 bg-blue-50 text-blue-700\"\n                        : \"border-gray-300 hover:bg-gray-50\"\n                    }`}\n                  >\n                    <input\n                      type=\"radio\"\n                      name=\"inviteType\"\n                      value=\"existing\"\n                      checked={inviteType === \"existing\"}\n                      onChange={(e) =>\n                        setInviteType(e.target.value as \"existing\")\n                      }\n                      className=\"mr-3\"\n                    />\n                    <div>\n                      <div className=\"font-medium\">👥 기존 회원 추가</div>\n                      <div className=\"text-xs text-gray-600\">\n                        이미 가입한 회원 검색\n                      </div>\n                    </div>\n                  </label>\n                </div>\n              </div>\n\n              {inviteType === \"email\" ? (\n                <>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      이메일\n                    </label>\n                    <input\n                      type=\"email\"\n                      value={inviteEmail}\n                      onChange={(e) => setInviteEmail(e.target.value)}\n                      placeholder=\"초대할 이메일을 입력하세요\"\n                      className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                    />\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      역할\n                    </label>\n                    <select\n                      value={inviteRole}\n                      onChange={(e) =>\n                        setInviteRole(e.target.value as typeof inviteRole)\n                      }\n                      className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                    >\n                      <option value=\"member\">멤버 - 매물 관리 가능</option>\n                      <option value=\"admin\">\n                        관리자 - 팀원 관리 및 매물 관리 가능\n                      </option>\n                      <option value=\"viewer\">뷰어 - 매물 조회만 가능</option>\n                    </select>\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      초대 메시지 (선택)\n                    </label>\n                    <textarea\n                      value={inviteMessage}\n                      onChange={(e) => setInviteMessage(e.target.value)}\n                      placeholder=\"초대 메시지를 입력하세요\"\n                      rows={3}\n                      className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                    />\n                  </div>\n                </>\n              ) : (\n                <>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      회원 검색\n                    </label>\n                    <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-3 mb-3\">\n                      <div className=\"flex items-start space-x-2\">\n                        <div className=\"text-blue-600 mt-0.5\">💡</div>\n                        <div className=\"text-sm text-blue-800\">\n                          <p className=\"font-medium\">기존 회원 추가:</p>\n                          <p>• 이름 또는 이메일을 2글자 이상 입력하세요</p>\n                          <p>• 이미 다른 팀에 속한 회원도 추가할 수 있습니다</p>\n                          <p>• 해당 회원은 이 팀으로 이동하게 됩니다</p>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"relative\">\n                      <Search className=\"w-4 h-4 absolute left-3 top-3 text-gray-400\" />\n                      <input\n                        type=\"text\"\n                        value={searchQuery}\n                        onChange={(e) => {\n                          setSearchQuery(e.target.value);\n                          handleSearchUsers(e.target.value);\n                        }}\n                        placeholder=\"이름 또는 이메일로 검색 (2글자 이상 입력)\"\n                        className=\"w-full pl-10 p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                      />\n                    </div>\n\n                    {searchResults.length > 0 && (\n                      <div className=\"mt-2 border border-gray-200 rounded-lg max-h-40 overflow-y-auto\">\n                        {searchResults.map((user) => (\n                          <button\n                            key={user.id}\n                            onClick={() => {\n                              setSelectedUser(user);\n                              setSearchQuery(user.name);\n                              setSearchResults([]);\n                            }}\n                            className=\"w-full text-left p-3 hover:bg-gray-50 border-b border-gray-100 last:border-b-0\"\n                          >\n                            <div className=\"font-medium\">{user.name}</div>\n                            {user.email && (\n                              <div className=\"text-sm text-gray-500\">\n                                {user.email}\n                              </div>\n                            )}\n                            {user.company && (\n                              <div className=\"text-xs text-gray-400\">\n                                {user.company}\n                              </div>\n                            )}\n                          </button>\n                        ))}\n                      </div>\n                    )}\n\n                    {selectedUser && (\n                      <div className=\"mt-2 p-3 bg-blue-50 rounded-lg\">\n                        <div className=\"font-medium text-blue-900\">\n                          선택됨: {selectedUser.name}\n                        </div>\n                        {selectedUser.email && (\n                          <div className=\"text-sm text-blue-700\">\n                            {selectedUser.email}\n                          </div>\n                        )}\n                      </div>\n                    )}\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      역할\n                    </label>\n                    <select\n                      value={memberRole}\n                      onChange={(e) =>\n                        setMemberRole(e.target.value as typeof memberRole)\n                      }\n                      className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                    >\n                      <option value=\"member\">멤버 - 매물 관리 가능</option>\n                      <option value=\"admin\">\n                        관리자 - 팀원 관리 및 매물 관리 가능\n                      </option>\n                      <option value=\"viewer\">뷰어 - 매물 조회만 가능</option>\n                    </select>\n                  </div>\n                </>\n              )}\n            </div>\n\n            <div className=\"border-t border-gray-200 px-6 py-4 flex justify-end space-x-3\">\n              <button\n                onClick={() => setShowInviteModal(false)}\n                className=\"px-4 py-2 text-gray-700 bg-gray-100 rounded-lg hover:bg-gray-200 transition-colors\"\n              >\n                취소\n              </button>\n              <button\n                onClick={\n                  inviteType === \"email\"\n                    ? handleEmailInvite\n                    : handleAddExistingMember\n                }\n                disabled={\n                  actionLoading ||\n                  (inviteType === \"email\" ? !inviteEmail.trim() : !selectedUser)\n                }\n                className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n              >\n                {actionLoading\n                  ? \"처리중...\"\n                  : inviteType === \"email\"\n                    ? \"초대 발송\"\n                    : \"팀원 추가\"}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* 멤버 편집 모달 */}\n      {selectedMember && (\n        <MemberEditModal\n          member={selectedMember}\n          isOpen={showEditModal}\n          onClose={() => {\n            setShowEditModal(false);\n            setSelectedMember(null);\n          }}\n          onUpdate={handleMemberInfoUpdate}\n          onRoleChange={handleMemberRoleChange}\n          onStatusChange={handleMemberStatusChange}\n          currentUserRole={currentUserRole || \"viewer\"}\n          canEdit={canManageTeam || selectedMember.id === user?.id}\n        />\n      )}\n\n      {/* 팀 활동 로그 */}\n      <TeamActivityLog\n        isOpen={showActivityLog}\n        onClose={() => setShowActivityLog(false)}\n      />\n\n      {/* 초대 링크 모달 */}\n      {inviteLinkData && (\n        <InviteLinkModal\n          isOpen={showInviteLinkModal}\n          onClose={() => {\n            setShowInviteLinkModal(false);\n            setInviteLinkData(null);\n          }}\n          inviteData={inviteLinkData}\n        />\n      )}\n\n      {/* 팀원 삭제 확인 모달 */}\n      {showDeleteConfirm && memberToDelete && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-lg w-full max-w-md mx-4\">\n            <div className=\"border-b border-gray-200 px-6 py-4\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-2\">\n                  <div className=\"w-8 h-8 bg-red-100 rounded-full flex items-center justify-center\">\n                    <Trash2 className=\"w-4 h-4 text-red-600\" />\n                  </div>\n                  <h2 className=\"text-lg font-semibold text-gray-900\">\n                    팀원 제거 확인\n                  </h2>\n                </div>\n                <button\n                  onClick={() => {\n                    setShowDeleteConfirm(false);\n                    setMemberToDelete(null);\n                  }}\n                  className=\"text-gray-400 hover:text-gray-600\"\n                >\n                  <X className=\"w-5 h-5\" />\n                </button>\n              </div>\n            </div>\n\n            <div className=\"px-6 py-4\">\n              <div className=\"mb-4\">\n                <div className=\"flex items-center space-x-3 p-4 bg-red-50 rounded-lg mb-4\">\n                  <div className=\"w-10 h-10 bg-red-100 rounded-full flex items-center justify-center\">\n                    <User className=\"w-5 h-5 text-red-600\" />\n                  </div>\n                  <div>\n                    <h3 className=\"font-medium text-red-900\">\n                      {memberToDelete.name}\n                    </h3>\n                    <p className=\"text-sm text-red-700\">제거할 팀원</p>\n                  </div>\n                </div>\n\n                <div className=\"bg-yellow-50 border-l-4 border-yellow-400 p-4 mb-4\">\n                  <div className=\"flex\">\n                    <div className=\"flex-shrink-0\">\n                      <span className=\"text-yellow-400 text-lg\">⚠️</span>\n                    </div>\n                    <div className=\"ml-3\">\n                      <p className=\"text-sm text-yellow-800\">\n                        <strong>주의사항:</strong>\n                      </p>\n                      <ul className=\"mt-2 text-sm text-yellow-700 list-disc list-inside space-y-1\">\n                        <li>\n                          제거된 팀원은 더 이상 이 팀의 데이터에 접근할 수\n                          없습니다.\n                        </li>\n                        <li>이 작업은 되돌릴 수 없습니다.</li>\n                        <li>필요시 나중에 다시 초대할 수 있습니다.</li>\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n\n                <p className=\"text-gray-600 text-center\">\n                  <strong>{memberToDelete.name}님</strong>을 정말로 팀에서\n                  제거하시겠습니까?\n                </p>\n              </div>\n            </div>\n\n            <div className=\"border-t border-gray-200 px-6 py-4 flex justify-end space-x-3\">\n              <button\n                onClick={() => {\n                  setShowDeleteConfirm(false);\n                  setMemberToDelete(null);\n                }}\n                className=\"px-4 py-2 text-gray-700 bg-gray-100 rounded-lg hover:bg-gray-200 transition-colors\"\n                disabled={actionLoading}\n              >\n                취소\n              </button>\n              <button\n                onClick={handleConfirmRemoveMember}\n                disabled={actionLoading}\n                className=\"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors flex items-center space-x-2\"\n              >\n                {actionLoading ? (\n                  <>\n                    <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\n                    <span>제거중...</span>\n                  </>\n                ) : (\n                  <>\n                    <Trash2 className=\"w-4 h-4\" />\n                    <span>팀에서 제거</span>\n                  </>\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","// ============================================================================\n// 팀 관리 페이지\n// ============================================================================\n\nimport React from \"react\";\nimport { TeamManagement } from \"@/components/team/TeamManagement\";\n\nconst TeamPage: React.FC = () => {\n  return <TeamManagement />;\n};\n\nexport { TeamPage };\n","// ============================================================================\n// 데이터 가져오기/내보내기 서비스\n// ============================================================================\n\nimport { supabase } from \"./supabase\";\nimport { Property, CreatePropertyData, PropertyStatus } from \"@/types\";\n\nexport interface ImportResult {\n  success: number;\n  failed: number;\n  errors: ImportError[];\n  importedProperties: Property[];\n}\n\nexport interface ImportError {\n  row: number;\n  field?: string;\n  message: string;\n  data?: CreatePropertyData;\n}\n\nexport interface ExportOptions {\n  format: \"csv\" | \"excel\" | \"json\";\n  includeFields: string[];\n  filters?: {\n    dateRange?: \"all\" | \"thisMonth\" | \"lastMonth\" | \"custom\";\n    customDateFrom?: string;\n    customDateTo?: string;\n    propertyStatus?: \"all\" | PropertyStatus;\n    propertyType?: string;\n  };\n}\n\n/**\n * 매물 데이터 가져오기\n */\nexport const importProperties = async (\n  properties: CreatePropertyData[],\n  tenantId: string,\n  createdBy: string,\n): Promise<ImportResult> => {\n  const errors: ImportError[] = [];\n  const importedProperties: Property[] = [];\n\n  for (let i = 0; i < properties.length; i++) {\n    const property = properties[i];\n\n    try {\n      // 데이터 검증\n      const validationError = validatePropertyData(property, i + 1);\n      if (validationError) {\n        errors.push(validationError);\n        continue;\n      }\n\n      // Supabase에 매물 데이터 삽입\n      const { data, error } = await supabase\n        .from(\"properties\")\n        .insert({\n          tenant_id: tenantId,\n          created_by: createdBy,\n          ...property,\n          view_count: 0,\n          inquiry_count: 0,\n          is_featured: false,\n          is_urgent: false,\n          is_favorite: false,\n        })\n        .select()\n        .single();\n\n      if (error) {\n        errors.push({\n          row: i + 1,\n          message: `데이터베이스 오류: ${error.message}`,\n          data: property,\n        });\n        continue;\n      }\n\n      if (data) {\n        importedProperties.push(data as Property);\n      }\n    } catch (err) {\n      errors.push({\n        row: i + 1,\n        message: `처리 중 오류: ${err instanceof Error ? err.message : \"알 수 없는 오류\"}`,\n        data: property,\n      });\n    }\n  }\n\n  return {\n    success: importedProperties.length,\n    failed: properties.length - importedProperties.length,\n    errors,\n    importedProperties,\n  };\n};\n\n/**\n * 매물 데이터 내보내기\n */\nexport const exportProperties = async (\n  tenantId: string,\n  options: ExportOptions,\n): Promise<Property[]> => {\n  console.log(\"🔍 내보내기 요청:\", { tenantId, options });\n\n  let query = supabase.from(\"properties\").select(\"*\").eq(\"tenant_id\", tenantId);\n\n  // 먼저 전체 매물 수 확인\n  const { data: allProperties } = await supabase\n    .from(\"properties\")\n    .select(\"*\")\n    .eq(\"tenant_id\", tenantId);\n\n  console.log(\"📊 전체 매물 수:\", allProperties?.length || 0);\n  console.log(\"📊 전체 매물 샘플:\", allProperties?.slice(0, 3));\n\n  // 필터 적용\n  if (options.filters) {\n    const { filters } = options;\n    console.log(\"🔧 적용할 필터:\", filters);\n\n    // 매물 상태 필터\n    if (filters.propertyStatus && filters.propertyStatus !== \"all\") {\n      console.log(\"🏷️ 상태 필터 적용:\", filters.propertyStatus);\n      query = query.eq(\"status\", filters.propertyStatus);\n    }\n\n    // 매물 유형 필터\n    if (filters.propertyType && filters.propertyType !== \"all\") {\n      console.log(\"🏠 유형 필터 적용:\", filters.propertyType);\n      query = query.eq(\"type\", filters.propertyType);\n    }\n\n    // 날짜 범위 필터\n    if (filters.dateRange && filters.dateRange !== \"all\") {\n      const now = new Date();\n      console.log(\"📅 날짜 필터 적용:\", filters.dateRange);\n\n      switch (filters.dateRange) {\n        case \"thisMonth\":\n          const thisMonthStart = new Date(now.getFullYear(), now.getMonth(), 1);\n          console.log(\"📅 이번 달 시작:\", thisMonthStart.toISOString());\n          query = query.gte(\"created_at\", thisMonthStart.toISOString());\n          break;\n\n        case \"lastMonth\":\n          const lastMonthStart = new Date(\n            now.getFullYear(),\n            now.getMonth() - 1,\n            1,\n          );\n          const lastMonthEnd = new Date(now.getFullYear(), now.getMonth(), 0);\n          console.log(\"📅 지난 달:\", lastMonthStart.toISOString(), \"~\", lastMonthEnd.toISOString());\n          query = query\n            .gte(\"created_at\", lastMonthStart.toISOString())\n            .lte(\"created_at\", lastMonthEnd.toISOString());\n          break;\n\n        case \"custom\":\n          if (filters.customDateFrom) {\n            console.log(\"📅 사용자 지정 시작:\", filters.customDateFrom);\n            query = query.gte(\"created_at\", filters.customDateFrom);\n          }\n          if (filters.customDateTo) {\n            const endDate = filters.customDateTo + \"T23:59:59\";\n            console.log(\"📅 사용자 지정 끝:\", endDate);\n            query = query.lte(\"created_at\", endDate);\n          }\n          break;\n      }\n    }\n  }\n\n  // 생성일 기준 내림차순 정렬\n  query = query.order(\"created_at\", { ascending: false });\n\n  const { data, error } = await query;\n\n  console.log(\"📊 필터링된 매물 수:\", data?.length || 0);\n  console.log(\"📊 필터링된 매물 샘플:\", data?.slice(0, 3));\n\n  if (error) {\n    console.error(\"❌ 데이터베이스 오류:\", error);\n    throw new Error(`데이터 내보내기 실패: ${error.message}`);\n  }\n\n  return data || [];\n};\n\n/**\n * CSV 형식으로 데이터 변환\n */\nexport const formatAsCSV = (\n  properties: Property[],\n  includeFields: string[],\n): string => {\n  const fieldLabels: Record<string, string> = {\n    title: \"매물명\",\n    type: \"매물유형\",\n    transaction_type: \"거래유형\",\n    status: \"매물상태\",\n    address: \"주소\",\n    detailed_address: \"상세주소\",\n    area: \"면적(m²)\",\n    floor: \"층\",\n    total_floors: \"총층수\",\n    rooms: \"방수\",\n    bathrooms: \"화장실수\",\n    parking: \"주차가능\",\n    elevator: \"엘리베이터\",\n    price: \"매매가(만원)\",\n    deposit: \"보증금(만원)\",\n    monthly_rent: \"월세(만원)\",\n    maintenance_fee: \"관리비(만원)\",\n    landlord_name: \"임대인명\",\n    landlord_phone: \"임대인 연락처\",\n    landlord_email: \"임대인 이메일\",\n    exit_date: \"퇴실날짜\",\n    available_from: \"입주가능일\",\n    description: \"설명\",\n    view_count: \"조회수\",\n    inquiry_count: \"문의수\",\n    created_at: \"등록일\",\n    updated_at: \"수정일\",\n  };\n\n  // 헤더 생성\n  const headers = includeFields.map((field) => fieldLabels[field] || field);\n\n  // 데이터 행 생성\n  const rows = properties.map((property) => {\n    return includeFields.map((field) => {\n      const value = formatFieldValue(property, field);\n      // CSV에서 특수문자 이스케이프\n      return `\"${String(value).replace(/\"/g, '\"\"')}\"`;\n    });\n  });\n\n  // CSV 문자열 생성\n  return [headers, ...rows].map((row) => row.join(\",\")).join(\"\\n\");\n};\n\n/**\n * JSON 형식으로 데이터 변환\n */\nexport const formatAsJSON = (\n  properties: Property[],\n  includeFields: string[],\n): string => {\n  const fieldLabels: Record<string, string> = {\n    title: \"매물명\",\n    type: \"매물유형\",\n    transaction_type: \"거래유형\",\n    status: \"매물상태\",\n    address: \"주소\",\n    detailed_address: \"상세주소\",\n    area: \"면적\",\n    floor: \"층\",\n    total_floors: \"총층수\",\n    rooms: \"방수\",\n    bathrooms: \"화장실수\",\n    parking: \"주차가능\",\n    elevator: \"엘리베이터\",\n    price: \"매매가\",\n    deposit: \"보증금\",\n    monthly_rent: \"월세\",\n    maintenance_fee: \"관리비\",\n    landlord_name: \"임대인명\",\n    landlord_phone: \"임대인 연락처\",\n    landlord_email: \"임대인 이메일\",\n    exit_date: \"퇴실날짜\",\n    available_from: \"입주가능일\",\n    description: \"설명\",\n    view_count: \"조회수\",\n    inquiry_count: \"문의수\",\n    created_at: \"등록일\",\n    updated_at: \"수정일\",\n  };\n\n  interface ExportItem {\n    [key: string]: string | number | boolean | Date;\n  }\n\n  const exportData = properties.map((property) => {\n    const exportItem: ExportItem = {};\n    includeFields.forEach((field) => {\n      const label = fieldLabels[field] || field;\n      exportItem[label] = formatFieldValue(property, field);\n    });\n    return exportItem;\n  });\n\n  return JSON.stringify(\n    {\n      exportDate: new Date().toISOString(),\n      totalRecords: exportData.length,\n      data: exportData,\n    },\n    null,\n    2,\n  );\n};\n\n/**\n * 필드 값 포맷팅\n */\nconst formatFieldValue = (\n  property: Property,\n  fieldId: string,\n): string | number | boolean => {\n  const value = property[fieldId as keyof Property];\n\n  if (value === null || value === undefined) {\n    return \"\";\n  }\n\n  switch (fieldId) {\n    case \"parking\":\n    case \"elevator\":\n      return typeof value === \"boolean\" ? (value ? \"있음\" : \"없음\") : \"\";\n\n    case \"price\":\n    case \"deposit\":\n    case \"monthly_rent\":\n    case \"maintenance_fee\":\n      return typeof value === \"number\" ? value.toLocaleString() : \"\";\n\n    case \"created_at\":\n    case \"updated_at\":\n    case \"exit_date\":\n    case \"available_from\":\n      return typeof value === \"string\"\n        ? new Date(value).toLocaleDateString(\"ko-KR\")\n        : \"\";\n\n    default:\n      // 복잡한 타입(배열, 객체)은 문자열로 변환\n      if (typeof value === \"object\" && value !== null) {\n        return Array.isArray(value) ? value.join(\", \") : JSON.stringify(value);\n      }\n      return typeof value === \"string\" ||\n        typeof value === \"number\" ||\n        typeof value === \"boolean\"\n        ? value\n        : String(value);\n  }\n};\n\n/**\n * 매물 데이터 검증\n */\nconst validatePropertyData = (\n  data: CreatePropertyData,\n  row: number,\n): ImportError | null => {\n  const requiredFields = [\n    \"title\",\n    \"type\",\n    \"transaction_type\",\n    \"address\",\n    \"area\",\n    \"floor\",\n    \"total_floors\",\n    \"rooms\",\n    \"bathrooms\",\n  ];\n\n  for (const field of requiredFields) {\n    const value = data[field as keyof CreatePropertyData];\n    if (value === undefined || value === null || value === \"\") {\n      return {\n        row,\n        field,\n        message: `필수 필드 '${field}'가 누락되었습니다.`,\n      };\n    }\n  }\n\n  // 숫자 필드 검증\n  const numericFields: (keyof CreatePropertyData)[] = [\n    \"area\",\n    \"floor\",\n    \"total_floors\",\n    \"rooms\",\n    \"bathrooms\",\n    \"price\",\n    \"deposit\",\n    \"monthly_rent\",\n  ];\n  for (const field of numericFields) {\n    const value = data[field];\n    if (value !== undefined && value !== null && value !== \"\") {\n      if (typeof value !== \"number\" || isNaN(value) || value < 0) {\n        return {\n          row,\n          field,\n          message: `'${field}'는 유효한 양수여야 합니다.`,\n        };\n      }\n    }\n  }\n\n  // 매물 유형 검증\n  const validPropertyTypes = [\n    \"아파트\",\n    \"오피스텔\",\n    \"원룸\",\n    \"빌라\",\n    \"단독주택\",\n    \"상가\",\n    \"사무실\",\n    \"기타\",\n  ];\n  if (!validPropertyTypes.includes(data.type)) {\n    return {\n      row,\n      field: \"type\",\n      message: `매물 유형은 다음 중 하나여야 합니다: ${validPropertyTypes.join(\", \")}`,\n    };\n  }\n\n  // 거래 유형 검증\n  const validTransactionTypes = [\"매매\", \"전세\", \"월세\", \"단기임대\"];\n  if (!validTransactionTypes.includes(data.transaction_type)) {\n    return {\n      row,\n      field: \"transaction_type\",\n      message: `거래 유형은 다음 중 하나여야 합니다: ${validTransactionTypes.join(\", \")}`,\n    };\n  }\n\n  // 날짜 형식 검증\n  if (data.exit_date) {\n    const date = new Date(data.exit_date);\n    if (isNaN(date.getTime())) {\n      return {\n        row,\n        field: \"exit_date\",\n        message: `퇴실날짜는 유효한 날짜 형식이어야 합니다. (예: 2024-12-31)`,\n      };\n    }\n  }\n\n  return null;\n};\n\n/**\n * 파일 크기 검증\n */\nexport const validateFileSize = (\n  file: File,\n  maxSizeMB: number = 10,\n): boolean => {\n  const maxSizeBytes = maxSizeMB * 1024 * 1024;\n  return file.size <= maxSizeBytes;\n};\n\n/**\n * 파일 형식 검증\n */\nexport const validateFileFormat = (file: File): boolean => {\n  const allowedTypes = [\n    \"text/csv\",\n    \"application/vnd.ms-excel\",\n    \"text/tab-separated-values\",\n  ];\n  const allowedExtensions = [\".csv\", \".tsv\", \".txt\"];\n\n  return (\n    allowedTypes.includes(file.type) ||\n    allowedExtensions.some((ext) => file.name.toLowerCase().endsWith(ext))\n  );\n};\n\n/**\n * 템플릿 CSV 생성\n */\nexport const generateTemplateCSV = (): string => {\n  const headers = [\n    \"매물명\",\n    \"매물유형\",\n    \"거래유형\",\n    \"주소\",\n    \"상세주소\",\n    \"면적\",\n    \"층\",\n    \"총층수\",\n    \"방수\",\n    \"화장실수\",\n    \"주차\",\n    \"엘리베이터\",\n    \"매매가\",\n    \"보증금\",\n    \"월세\",\n    \"임대인명\",\n    \"연락처\",\n    \"퇴실일\",\n    \"설명\",\n  ];\n\n  const sampleData = [\n    \"강남 신축 아파트\",\n    \"아파트\",\n    \"전세\",\n    \"서울시 강남구 역삼동\",\n    \"123-45\",\n    \"84.5\",\n    \"15\",\n    \"25\",\n    \"3\",\n    \"2\",\n    \"있음\",\n    \"있음\",\n    \"\",\n    \"50000\",\n    \"\",\n    \"홍길동\",\n    \"010-1234-5678\",\n    \"2024-12-31\",\n    \"역세권 3분거리 신축아파트\",\n  ];\n\n  return [headers, sampleData]\n    .map((row) => row.map((cell) => `\"${cell}\"`).join(\",\"))\n    .join(\"\\n\");\n};\n","// ============================================================================\n// 데이터 가져오기 모달 컴포넌트\n// ============================================================================\n\nimport React, { useState, useRef } from \"react\";\nimport {\n  Upload,\n  Download,\n  FileText,\n  AlertCircle,\n  CheckCircle,\n} from \"lucide-react\";\nimport { Button, Modal, Loading } from \"@/components/ui\";\nimport { Property, CreatePropertyData } from \"@/types\";\nimport { useTenant } from \"@/contexts/TenantContext\";\nimport { useAuth } from \"@/contexts/AuthContext\";\nimport {\n  importProperties,\n  validateFileSize,\n  validateFileFormat,\n} from \"@/services/dataService\";\n\ninterface DataImportModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onImportComplete: (importedProperties: Property[]) => void;\n}\n\ninterface ImportResult {\n  success: number;\n  failed: number;\n  errors: ImportError[];\n  importedProperties: Property[];\n}\n\ninterface ImportError {\n  row: number;\n  field?: string;\n  message: string;\n  data?: any;\n}\n\ninterface ParsedProperty {\n  row: number;\n  data: CreatePropertyData;\n  errors: string[];\n}\n\nconst REQUIRED_FIELDS = [\n  \"title\",\n  \"type\",\n  \"transaction_type\",\n  \"address\",\n  \"area\",\n  \"floor\",\n  \"total_floors\",\n  \"rooms\",\n  \"bathrooms\",\n];\n\nconst FIELD_MAPPING = {\n  매물명: \"title\",\n  제목: \"title\",\n  매물유형: \"type\",\n  유형: \"type\",\n  거래유형: \"transaction_type\",\n  거래: \"transaction_type\",\n  주소: \"address\",\n  상세주소: \"detailed_address\",\n  면적: \"area\",\n  전용면적: \"area\",\n  층: \"floor\",\n  해당층: \"floor\",\n  총층수: \"total_floors\",\n  전체층: \"total_floors\",\n  방수: \"rooms\",\n  방: \"rooms\",\n  화장실수: \"bathrooms\",\n  화장실: \"bathrooms\",\n  주차: \"parking\",\n  주차가능: \"parking\",\n  엘리베이터: \"elevator\",\n  엘베: \"elevator\",\n  매매가: \"price\",\n  가격: \"price\",\n  보증금: \"deposit\",\n  월세: \"monthly_rent\",\n  월임대료: \"monthly_rent\",\n  임대인명: \"landlord_name\",\n  임대인: \"landlord_name\",\n  연락처: \"landlord_phone\",\n  전화번호: \"landlord_phone\",\n  퇴실일: \"exit_date\",\n  퇴실날짜: \"exit_date\",\n  설명: \"description\",\n  비고: \"description\",\n};\n\nconst PROPERTY_TYPES = [\n  \"아파트\",\n  \"오피스텔\",\n  \"원룸\",\n  \"빌라\",\n  \"단독주택\",\n  \"상가\",\n  \"사무실\",\n  \"기타\",\n];\nconst TRANSACTION_TYPES = [\"매매\", \"전세\", \"월세\", \"단기임대\"];\n\nexport const DataImportModal: React.FC<DataImportModalProps> = ({\n  isOpen,\n  onClose,\n  onImportComplete,\n}) => {\n  const { user } = useAuth();\n\n  // 기본값으로 user.id를 tenant.id로 사용\n  let tenant = user?.id ? { id: user.id, name: \"PropertyDesk\" } : null;\n  let tenantLoading = false;\n\n  // useTenant을 안전하게 호출해서 실제 테넌트 정보가 있으면 사용\n  try {\n    const tenantContext = useTenant();\n    if (tenantContext?.tenant?.id) {\n      tenant = tenantContext.tenant;\n      tenantLoading = tenantContext?.isLoading || false;\n    }\n  } catch (error) {\n    console.log(\"TenantContext 오류, 사용자 ID를 테넌트 ID로 사용:\", error);\n    // 이미 위에서 user.id를 설정했으므로 추가 처리 불필요\n  }\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const [step, setStep] = useState<\n    \"upload\" | \"preview\" | \"importing\" | \"complete\"\n  >(\"upload\");\n  const [file, setFile] = useState<File | null>(null);\n  const [parsedData, setParsedData] = useState<ParsedProperty[]>([]);\n  const [importResult, setImportResult] = useState<ImportResult | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const handleFileSelect = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const selectedFile = event.target.files?.[0];\n    if (selectedFile) {\n      // 파일 크기 검증\n      if (!validateFileSize(selectedFile, 10)) {\n        setError(\"파일 크기는 10MB를 초과할 수 없습니다.\");\n        return;\n      }\n\n      // 파일 형식 검증\n      if (!validateFileFormat(selectedFile)) {\n        setError(\"CSV 파일만 지원합니다.\");\n        return;\n      }\n\n      setFile(selectedFile);\n      setError(null);\n      parseFile(selectedFile);\n    }\n  };\n\n  const parseFile = async (file: File) => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      const text = await file.text();\n      let rows: string[][];\n\n      if (file.name.endsWith(\".csv\")) {\n        rows = parseCSV(text);\n      } else if (file.name.endsWith(\".tsv\") || file.name.endsWith(\".txt\")) {\n        rows = parseTSV(text);\n      } else {\n        throw new Error(\n          \"지원하지 않는 파일 형식입니다. CSV 파일만 지원합니다.\",\n        );\n      }\n\n      if (rows.length < 2) {\n        throw new Error(\n          \"데이터가 부족합니다. 헤더와 최소 1개의 데이터 행이 필요합니다.\",\n        );\n      }\n\n      const headers = rows[0].map((h) => h.trim());\n      const dataRows = rows.slice(1);\n\n      console.log(\"📊 파싱된 헤더:\", headers);\n      console.log(\"📊 데이터 행 수:\", dataRows.length);\n\n      const parsed = dataRows.map((row, index) =>\n        parsePropertyRow(row, headers, index + 2),\n      );\n      setParsedData(parsed);\n      setStep(\"preview\");\n    } catch (err) {\n      const message =\n        err instanceof Error\n          ? err.message\n          : \"파일 파싱 중 오류가 발생했습니다.\";\n      setError(message);\n      console.error(\"파일 파싱 오류:\", err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const parseCSV = (text: string): string[][] => {\n    const rows: string[][] = [];\n    const lines = text.split(/\\r?\\n/);\n\n    for (const line of lines) {\n      if (line.trim()) {\n        // 간단한 CSV 파싱 (따옴표 지원)\n        const row: string[] = [];\n        let current = \"\";\n        let inQuotes = false;\n\n        for (let i = 0; i < line.length; i++) {\n          const char = line[i];\n\n          if (char === '\"') {\n            inQuotes = !inQuotes;\n          } else if (char === \",\" && !inQuotes) {\n            row.push(current.trim());\n            current = \"\";\n          } else {\n            current += char;\n          }\n        }\n\n        row.push(current.trim());\n        rows.push(row);\n      }\n    }\n\n    return rows;\n  };\n\n  const parseTSV = (text: string): string[][] => {\n    return text\n      .split(/\\r?\\n/)\n      .filter((line) => line.trim())\n      .map((line) => line.split(\"\\t\").map((cell) => cell.trim()));\n  };\n\n  const parsePropertyRow = (\n    row: string[],\n    headers: string[],\n    rowNumber: number,\n  ): ParsedProperty => {\n    const errors: string[] = [];\n    const data: Partial<CreatePropertyData> = {\n      status: \"거래중\", // 기본값\n    };\n\n    // 헤더-데이터 매핑\n    headers.forEach((header, index) => {\n      const value = row[index]?.trim();\n      if (!value) return;\n\n      const mappedField = FIELD_MAPPING[header as keyof typeof FIELD_MAPPING];\n      if (!mappedField) return;\n\n      try {\n        switch (mappedField) {\n          case \"type\":\n            if (PROPERTY_TYPES.includes(value)) {\n              data.type = value as any;\n            } else {\n              errors.push(\n                `매물유형 '${value}'는 유효하지 않습니다. (${PROPERTY_TYPES.join(\", \")})`,\n              );\n            }\n            break;\n\n          case \"transaction_type\":\n            if (TRANSACTION_TYPES.includes(value)) {\n              data.transaction_type = value as any;\n            } else {\n              errors.push(\n                `거래유형 '${value}'는 유효하지 않습니다. (${TRANSACTION_TYPES.join(\", \")})`,\n              );\n            }\n            break;\n\n          case \"area\":\n          case \"floor\":\n          case \"total_floors\":\n          case \"rooms\":\n          case \"bathrooms\":\n          case \"price\":\n          case \"deposit\":\n          case \"monthly_rent\":\n            const numValue = parseFloat(value.replace(/[,\\s]/g, \"\"));\n            if (!isNaN(numValue) && numValue > 0) {\n              (data as any)[mappedField] = numValue;\n            } else {\n              errors.push(`${header} '${value}'는 유효한 숫자가 아닙니다.`);\n            }\n            break;\n\n          case \"parking\":\n          case \"elevator\":\n            const boolValue = [\n              \"true\",\n              \"1\",\n              \"yes\",\n              \"y\",\n              \"있음\",\n              \"가능\",\n              \"o\",\n              \"O\",\n            ].includes(value.toLowerCase());\n            (data as any)[mappedField] = boolValue;\n            break;\n\n          case \"exit_date\":\n            if (isValidDate(value)) {\n              data.exit_date = formatDate(value);\n            } else {\n              errors.push(\n                `퇴실일 '${value}'는 유효한 날짜 형식이 아닙니다. (YYYY-MM-DD 형식 사용)`,\n              );\n            }\n            break;\n\n          default:\n            (data as any)[mappedField] = value;\n            break;\n        }\n      } catch (err) {\n        errors.push(`${header} 처리 중 오류: ${err}`);\n      }\n    });\n\n    // 필수 필드 검증\n    REQUIRED_FIELDS.forEach((field) => {\n      if (!(data as any)[field]) {\n        errors.push(`필수 필드 '${field}'가 누락되었습니다.`);\n      }\n    });\n\n    return {\n      row: rowNumber,\n      data: data as CreatePropertyData,\n      errors,\n    };\n  };\n\n  const isValidDate = (dateString: string): boolean => {\n    // YYYY-MM-DD, YYYY/MM/DD, MM/DD/YYYY 등 다양한 형식 지원\n    const date = new Date(dateString);\n    return !isNaN(date.getTime());\n  };\n\n  const formatDate = (dateString: string): string => {\n    const date = new Date(dateString);\n    return date.toISOString().split(\"T\")[0];\n  };\n\n  const handleImport = async () => {\n    if (tenantLoading) {\n      console.log(\"테넌트 로딩 중입니다.\");\n      return;\n    }\n\n    if (!tenant?.id || !user?.id) {\n      setError(\"인증 정보가 없습니다.\");\n      return;\n    }\n\n    setStep(\"importing\");\n    setLoading(true);\n\n    try {\n      const validProperties = parsedData\n        .filter((p) => p.errors.length === 0)\n        .map((p) => p.data);\n\n      const result = await importProperties(\n        validProperties,\n        tenant.id,\n        user.id,\n      );\n\n      setImportResult(result);\n      setStep(\"complete\");\n\n      if (result.importedProperties.length > 0) {\n        onImportComplete(result.importedProperties);\n      }\n    } catch (err) {\n      const message =\n        err instanceof Error ? err.message : \"가져오기 중 오류가 발생했습니다.\";\n      setError(message);\n      console.error(\"Import error:\", err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const downloadTemplate = () => {\n    import(\"@/services/dataService\").then(({ generateTemplateCSV }) => {\n      const csvContent = generateTemplateCSV();\n      const blob = new Blob([\"\\ufeff\" + csvContent], {\n        type: \"text/csv;charset=utf-8;\",\n      });\n      const link = document.createElement(\"a\");\n      link.href = URL.createObjectURL(blob);\n      link.download = \"매물_가져오기_템플릿.csv\";\n      link.click();\n      URL.revokeObjectURL(link.href);\n    });\n  };\n\n  const resetModal = () => {\n    setStep(\"upload\");\n    setFile(null);\n    setParsedData([]);\n    setImportResult(null);\n    setError(null);\n    setLoading(false);\n    if (fileInputRef.current) {\n      fileInputRef.current.value = \"\";\n    }\n  };\n\n  const handleClose = () => {\n    resetModal();\n    onClose();\n  };\n\n  const renderContent = () => {\n    switch (step) {\n      case \"upload\":\n        return (\n          <div className=\"space-y-6\">\n            <div className=\"text-center\">\n              <Upload className=\"mx-auto h-12 w-12 text-gray-400 mb-4\" />\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\n                매물 데이터 가져오기\n              </h3>\n              <p className=\"text-gray-600\">\n                CSV 파일을 업로드하여 여러 매물을 한번에 등록하세요\n              </p>\n            </div>\n\n            <div className=\"space-y-4\">\n              <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-6 text-center hover:border-blue-400 transition-colors\">\n                <input\n                  ref={fileInputRef}\n                  type=\"file\"\n                  accept=\".csv,.tsv,.txt\"\n                  onChange={handleFileSelect}\n                  className=\"hidden\"\n                />\n                <Button\n                  onClick={() => fileInputRef.current?.click()}\n                  leftIcon={<FileText size={20} />}\n                  size=\"lg\"\n                  disabled={loading}\n                >\n                  {loading ? \"파일 분석 중...\" : \"CSV 파일 선택\"}\n                </Button>\n                <p className=\"text-sm text-gray-500 mt-2\">\n                  CSV 파일만 지원합니다 (최대 10MB)\n                </p>\n              </div>\n\n              <div className=\"flex justify-center\">\n                <Button\n                  variant=\"outline\"\n                  onClick={downloadTemplate}\n                  leftIcon={<Download size={18} />}\n                >\n                  템플릿 다운로드\n                </Button>\n              </div>\n            </div>\n\n            {file && (\n              <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n                <div className=\"flex items-center space-x-3\">\n                  <FileText className=\"h-8 w-8 text-blue-600\" />\n                  <div>\n                    <p className=\"font-medium text-blue-900\">{file.name}</p>\n                    <p className=\"text-sm text-blue-600\">\n                      크기: {(file.size / 1024).toFixed(1)}KB\n                    </p>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {error && (\n              <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\n                <div className=\"flex items-start space-x-3\">\n                  <AlertCircle className=\"h-5 w-5 text-red-600 mt-0.5\" />\n                  <div>\n                    <p className=\"font-medium text-red-900\">오류</p>\n                    <p className=\"text-sm text-red-600\">{error}</p>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {loading && (\n              <div className=\"text-center py-4\">\n                <Loading size=\"md\" text=\"파일을 분석하고 있습니다...\" />\n              </div>\n            )}\n          </div>\n        );\n\n      case \"preview\":\n        const validProperties = parsedData.filter((p) => p.errors.length === 0);\n        const invalidProperties = parsedData.filter((p) => p.errors.length > 0);\n\n        return (\n          <div className=\"space-y-6\">\n            <div className=\"text-center\">\n              <CheckCircle className=\"mx-auto h-12 w-12 text-green-600 mb-4\" />\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\n                데이터 미리보기\n              </h3>\n              <p className=\"text-gray-600\">\n                {parsedData.length}개 행을 분석했습니다\n              </p>\n            </div>\n\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div className=\"bg-green-50 border border-green-200 rounded-lg p-4 text-center\">\n                <div className=\"text-2xl font-bold text-green-600\">\n                  {validProperties.length}\n                </div>\n                <div className=\"text-sm text-green-800\">\n                  가져올 수 있는 매물\n                </div>\n              </div>\n              <div className=\"bg-red-50 border border-red-200 rounded-lg p-4 text-center\">\n                <div className=\"text-2xl font-bold text-red-600\">\n                  {invalidProperties.length}\n                </div>\n                <div className=\"text-sm text-red-800\">오류가 있는 매물</div>\n              </div>\n            </div>\n\n            {invalidProperties.length > 0 && (\n              <div className=\"space-y-2\">\n                <h4 className=\"font-medium text-red-900\">오류 내역:</h4>\n                <div className=\"bg-red-50 border border-red-200 rounded-lg p-4 max-h-40 overflow-y-auto\">\n                  {invalidProperties.slice(0, 10).map((property, index) => (\n                    <div key={index} className=\"text-sm text-red-800 mb-2\">\n                      <strong>행 {property.row}:</strong>{\" \"}\n                      {property.errors.join(\", \")}\n                    </div>\n                  ))}\n                  {invalidProperties.length > 10 && (\n                    <div className=\"text-sm text-red-600\">\n                      ...외 {invalidProperties.length - 10}개 오류\n                    </div>\n                  )}\n                </div>\n              </div>\n            )}\n\n            <div className=\"flex justify-between space-x-3\">\n              <Button variant=\"outline\" onClick={() => setStep(\"upload\")}>\n                다시 선택\n              </Button>\n              <Button\n                onClick={handleImport}\n                disabled={\n                  validProperties.length === 0 || loading || tenantLoading\n                }\n                leftIcon={\n                  loading ? <Loading size=\"sm\" /> : <Upload size={18} />\n                }\n              >\n                {tenantLoading\n                  ? \"테넌트 정보 로딩 중...\"\n                  : `${validProperties.length}개 매물 가져오기`}\n              </Button>\n            </div>\n          </div>\n        );\n\n      case \"importing\":\n        return (\n          <div className=\"space-y-6 text-center py-8\">\n            <Loading size=\"lg\" />\n            <div>\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\n                매물을 가져오는 중...\n              </h3>\n              <p className=\"text-gray-600\">\n                잠시만 기다려주세요. 매물 데이터를 처리하고 있습니다.\n              </p>\n            </div>\n          </div>\n        );\n\n      case \"complete\":\n        return (\n          <div className=\"space-y-6\">\n            <div className=\"text-center\">\n              <CheckCircle className=\"mx-auto h-12 w-12 text-green-600 mb-4\" />\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\n                가져오기 완료\n              </h3>\n            </div>\n\n            {importResult && (\n              <div className=\"space-y-4\">\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div className=\"bg-green-50 border border-green-200 rounded-lg p-4 text-center\">\n                    <div className=\"text-2xl font-bold text-green-600\">\n                      {importResult.success}\n                    </div>\n                    <div className=\"text-sm text-green-800\">성공</div>\n                  </div>\n                  <div className=\"bg-red-50 border border-red-200 rounded-lg p-4 text-center\">\n                    <div className=\"text-2xl font-bold text-red-600\">\n                      {importResult.failed}\n                    </div>\n                    <div className=\"text-sm text-red-800\">실패</div>\n                  </div>\n                </div>\n\n                {importResult.errors.length > 0 && (\n                  <div className=\"space-y-2\">\n                    <h4 className=\"font-medium text-red-900\">오류 내역:</h4>\n                    <div className=\"bg-red-50 border border-red-200 rounded-lg p-4 max-h-40 overflow-y-auto\">\n                      {importResult.errors.slice(0, 10).map((error, index) => (\n                        <div key={index} className=\"text-sm text-red-800 mb-2\">\n                          <strong>행 {error.row}:</strong> {error.message}\n                        </div>\n                      ))}\n                      {importResult.errors.length > 10 && (\n                        <div className=\"text-sm text-red-600\">\n                          ...외 {importResult.errors.length - 10}개 오류\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                )}\n              </div>\n            )}\n\n            <div className=\"flex justify-end\">\n              <Button onClick={handleClose}>완료</Button>\n            </div>\n          </div>\n        );\n\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={handleClose}\n      title=\"데이터 가져오기\"\n      size=\"lg\"\n    >\n      {renderContent()}\n    </Modal>\n  );\n};\n","// ============================================================================\n// 데이터 내보내기 모달 컴포넌트\n// ============================================================================\n\nimport React, { useState } from \"react\";\nimport { Download, FileText, AlertCircle } from \"lucide-react\";\nimport { Button, Modal, Loading, Select } from \"@/components/ui\";\nimport { Property } from \"@/types\";\nimport { useTenant } from \"@/contexts/TenantContext\";\nimport { useAuth } from \"@/contexts/AuthContext\";\nimport { useProperties } from \"@/hooks/useProperties\";\nimport {\n  formatAsCSV,\n  formatAsJSON,\n} from \"@/services/dataService\";\n\ninterface DataExportModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n}\n\ninterface ExportOptions {\n  format: \"csv\" | \"excel\" | \"json\";\n  includeFields: string[];\n  dateRange: \"all\" | \"thisMonth\" | \"lastMonth\" | \"custom\";\n  customDateFrom?: string;\n  customDateTo?: string;\n  propertyStatus: \"all\" | \"거래중\" | \"거래완료\";\n  propertyType: \"all\" | \"아파트\" | \"오피스텔\" | \"원룸\" | \"빌라\" | \"기타\";\n}\n\nconst DEFAULT_EXPORT_OPTIONS: ExportOptions = {\n  format: \"csv\",\n  includeFields: [\n    \"title\",\n    \"type\",\n    \"transaction_type\",\n    \"status\",\n    \"address\",\n    \"area\",\n    \"floor\",\n    \"total_floors\",\n    \"rooms\",\n    \"bathrooms\",\n    \"parking\",\n    \"elevator\",\n    \"price\",\n    \"deposit\",\n    \"monthly_rent\",\n    \"landlord_name\",\n    \"landlord_phone\",\n    \"exit_date\",\n    \"created_at\",\n  ],\n  dateRange: \"all\",\n  propertyStatus: \"all\",\n  propertyType: \"all\",\n};\n\nconst AVAILABLE_FIELDS = [\n  { id: \"title\", label: \"매물명\", required: true },\n  { id: \"type\", label: \"매물유형\", required: true },\n  { id: \"transaction_type\", label: \"거래유형\", required: true },\n  { id: \"status\", label: \"매물상태\", required: false },\n  { id: \"address\", label: \"주소\", required: true },\n  { id: \"detailed_address\", label: \"상세주소\", required: false },\n  { id: \"area\", label: \"면적(m²)\", required: true },\n  { id: \"floor\", label: \"층\", required: true },\n  { id: \"total_floors\", label: \"총층수\", required: true },\n  { id: \"rooms\", label: \"방수\", required: true },\n  { id: \"bathrooms\", label: \"화장실수\", required: true },\n  { id: \"parking\", label: \"주차가능\", required: false },\n  { id: \"elevator\", label: \"엘리베이터\", required: false },\n  { id: \"price\", label: \"매매가(만원)\", required: false },\n  { id: \"deposit\", label: \"보증금(만원)\", required: false },\n  { id: \"monthly_rent\", label: \"월세(만원)\", required: false },\n  { id: \"maintenance_fee\", label: \"관리비(만원)\", required: false },\n  { id: \"landlord_name\", label: \"임대인명\", required: false },\n  { id: \"landlord_phone\", label: \"임대인 연락처\", required: false },\n  { id: \"landlord_email\", label: \"임대인 이메일\", required: false },\n  { id: \"exit_date\", label: \"퇴실날짜\", required: false },\n  { id: \"available_from\", label: \"입주가능일\", required: false },\n  { id: \"description\", label: \"설명\", required: false },\n  { id: \"view_count\", label: \"조회수\", required: false },\n  { id: \"inquiry_count\", label: \"문의수\", required: false },\n  { id: \"created_at\", label: \"등록일\", required: false },\n  { id: \"updated_at\", label: \"수정일\", required: false },\n];\n\nexport const DataExportModal: React.FC<DataExportModalProps> = ({\n  isOpen,\n  onClose,\n}) => {\n  const { user } = useAuth();\n\n  // 기본값으로 user.id를 tenant.id로 사용\n  let tenant = user?.id ? { id: user.id, name: \"PropertyDesk\" } : null;\n  let tenantLoading = false;\n\n  // useTenant을 안전하게 호출해서 실제 테넌트 정보가 있으면 사용\n  try {\n    const tenantContext = useTenant();\n    if (tenantContext?.tenant?.id) {\n      tenant = tenantContext.tenant;\n      tenantLoading = tenantContext?.isLoading || false;\n    }\n  } catch (error) {\n    console.log(\"TenantContext 오류, 사용자 ID를 테넌트 ID로 사용:\", error);\n    // 이미 위에서 user.id를 설정했으므로 추가 처리 불필요\n  }\n\n  const { properties } = useProperties();\n  const [exportOptions, setExportOptions] = useState<ExportOptions>(\n    DEFAULT_EXPORT_OPTIONS,\n  );\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  // 테넌트 정보 디버깅\n  console.log(\"DataExportModal - 테넌트 정보:\", {\n    tenant: tenant?.id,\n    tenantName: tenant?.name,\n    tenantLoading,\n    isOpen,\n    userId: user?.id,\n  });\n\n  const updateExportOptions = (updates: Partial<ExportOptions>) => {\n    setExportOptions((prev) => ({ ...prev, ...updates }));\n  };\n\n  const getFilteredProperties = (): Property[] => {\n    // 현재 메모리에 있는 매물 데이터로 미리보기 제공\n    // 실제 내보내기는 handleExport에서 서비스를 통해 처리\n    if (!properties) return [];\n\n    return properties.filter((property) => {\n      // 매물 상태 필터\n      if (\n        exportOptions.propertyStatus !== \"all\" &&\n        property.status !== exportOptions.propertyStatus\n      ) {\n        return false;\n      }\n\n      // 매물 유형 필터\n      if (\n        exportOptions.propertyType !== \"all\" &&\n        property.type !== exportOptions.propertyType\n      ) {\n        return false;\n      }\n\n      // 날짜 범위 필터\n      if (exportOptions.dateRange !== \"all\") {\n        const createdAt = new Date(property.created_at);\n        const today = new Date();\n\n        switch (exportOptions.dateRange) {\n          case \"thisMonth\":\n            if (\n              createdAt.getMonth() !== today.getMonth() ||\n              createdAt.getFullYear() !== today.getFullYear()\n            ) {\n              return false;\n            }\n            break;\n\n          case \"lastMonth\":\n            const lastMonth = new Date(\n              today.getFullYear(),\n              today.getMonth() - 1,\n            );\n            if (\n              createdAt.getMonth() !== lastMonth.getMonth() ||\n              createdAt.getFullYear() !== lastMonth.getFullYear()\n            ) {\n              return false;\n            }\n            break;\n\n          case \"custom\":\n            if (\n              exportOptions.customDateFrom &&\n              createdAt < new Date(exportOptions.customDateFrom)\n            ) {\n              return false;\n            }\n            if (\n              exportOptions.customDateTo &&\n              createdAt > new Date(exportOptions.customDateTo + \"T23:59:59\")\n            ) {\n              return false;\n            }\n            break;\n        }\n      }\n\n      return true;\n    });\n  };\n\n  const downloadFile = (\n    content: string,\n    filename: string,\n    mimeType: string,\n  ) => {\n    const blob = new Blob([\"\\ufeff\" + content], {\n      type: `${mimeType};charset=utf-8;`,\n    });\n    const link = document.createElement(\"a\");\n    link.href = URL.createObjectURL(blob);\n    link.download = filename;\n    link.click();\n    URL.revokeObjectURL(link.href);\n  };\n\n  const handleExport = async () => {\n    // 테넌트 로딩 중이면 대기\n    if (tenantLoading) {\n      console.log(\"테넌트 로딩 중입니다.\");\n      return;\n    }\n\n    if (!tenant?.id) {\n      console.log(\"테넌트 정보 확인:\", { tenant });\n      setError(\n        \"테넌트 정보가 없습니다. 페이지를 새로고침 후 다시 시도해주세요.\",\n      );\n      return;\n    }\n\n    setLoading(true);\n    setError(null);\n\n    try {\n      console.log(\"내보내기 시작:\", {\n        tenant: tenant?.id,\n        options: exportOptions,\n      });\n\n      // 현재 메모리에 있는 매물 데이터를 기반으로 내보내기\n      // (useProperties에서 가져온 데이터와 동일한 소스)\n      const filteredProperties = getFilteredProperties();\n      console.log(\"내보낼 매물 수:\", filteredProperties.length);\n\n      if (filteredProperties.length === 0) {\n        setError(\n          \"선택한 조건에 맞는 매물이 없습니다. 필터 조건을 확인해보세요.\",\n        );\n        return;\n      }\n\n      const timestamp = new Date()\n        .toISOString()\n        .slice(0, 19)\n        .replace(/[:-]/g, \"\")\n        .replace(\"T\", \"_\");\n      let filename: string;\n      let content: string;\n      let mimeType: string;\n\n      switch (exportOptions.format) {\n        case \"csv\":\n        case \"excel\":\n          content = formatAsCSV(\n            filteredProperties,\n            exportOptions.includeFields,\n          );\n          filename = `매물데이터_${timestamp}.csv`;\n          mimeType = \"text/csv\";\n          break;\n\n        case \"json\":\n          content = formatAsJSON(\n            filteredProperties,\n            exportOptions.includeFields,\n          );\n          filename = `매물데이터_${timestamp}.json`;\n          mimeType = \"application/json\";\n          break;\n\n        default:\n          throw new Error(\"지원하지 않는 파일 형식입니다.\");\n      }\n\n      downloadFile(content, filename, mimeType);\n\n      // 성공 후 모달 닫기\n      setTimeout(() => {\n        onClose();\n      }, 1000);\n    } catch (err) {\n      const message =\n        err instanceof Error ? err.message : \"내보내기 중 오류가 발생했습니다.\";\n      setError(message);\n      console.error(\"Export error:\", err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const filteredProperties = getFilteredProperties();\n\n  // 테넌트 로딩 중일 때 로딩 화면 표시\n  if (tenantLoading) {\n    return (\n      <Modal\n        isOpen={isOpen}\n        onClose={onClose}\n        title=\"데이터 내보내기\"\n        size=\"lg\"\n      >\n        <div className=\"flex flex-col items-center justify-center py-12 space-y-4\">\n          <Loading size=\"lg\" />\n          <p className=\"text-gray-600\">테넌트 정보를 불러오는 중...</p>\n        </div>\n      </Modal>\n    );\n  }\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose} title=\"데이터 내보내기\" size=\"lg\">\n      <div className=\"space-y-6\">\n        <div className=\"text-center\">\n          <Download className=\"mx-auto h-12 w-12 text-blue-600 mb-4\" />\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\n            매물 데이터 내보내기\n          </h3>\n          <p className=\"text-gray-600\">\n            필요한 매물 정보를 선택하여 파일로 내보내세요\n          </p>\n        </div>\n\n        <div className=\"space-y-6\">\n          {/* 파일 형식 선택 */}\n          <div className=\"space-y-3\">\n            <label className=\"block text-sm font-semibold text-gray-900\">\n              파일 형식\n            </label>\n            <div className=\"grid grid-cols-3 gap-3\">\n              {[\n                { value: \"csv\", label: \"CSV\", desc: \"엑셀에서 열기 가능\" },\n                { value: \"json\", label: \"JSON\", desc: \"프로그래밍용\" },\n                { value: \"excel\", label: \"Excel\", desc: \"마이크로소프트 엑셀\" },\n              ].map((format) => (\n                <button\n                  key={format.value}\n                  onClick={() =>\n                    updateExportOptions({ format: format.value as any })\n                  }\n                  className={`p-3 border-2 rounded-lg text-center transition-all ${\n                    exportOptions.format === format.value\n                      ? \"border-blue-500 bg-blue-50 text-blue-900\"\n                      : \"border-gray-200 hover:border-gray-300\"\n                  }`}\n                >\n                  <div className=\"font-medium\">{format.label}</div>\n                  <div className=\"text-xs text-gray-500\">{format.desc}</div>\n                </button>\n              ))}\n            </div>\n          </div>\n\n          {/* 날짜 범위 선택 */}\n          <div className=\"space-y-3\">\n            <label className=\"block text-sm font-semibold text-gray-900\">\n              날짜 범위\n            </label>\n            <Select\n              value={exportOptions.dateRange}\n              onChange={(e) =>\n                updateExportOptions({ dateRange: e.target.value as any })\n              }\n              options={[\n                { value: \"all\", label: \"전체 기간\" },\n                { value: \"thisMonth\", label: \"이번 달\" },\n                { value: \"lastMonth\", label: \"지난 달\" },\n                { value: \"custom\", label: \"사용자 지정\" },\n              ]}\n            />\n\n            {exportOptions.dateRange === \"custom\" && (\n              <div className=\"grid grid-cols-2 gap-3 mt-3\">\n                <div>\n                  <label className=\"block text-xs font-medium text-gray-700 mb-1\">\n                    시작일\n                  </label>\n                  <input\n                    type=\"date\"\n                    value={exportOptions.customDateFrom || \"\"}\n                    onChange={(e) =>\n                      updateExportOptions({ customDateFrom: e.target.value })\n                    }\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-xs font-medium text-gray-700 mb-1\">\n                    종료일\n                  </label>\n                  <input\n                    type=\"date\"\n                    value={exportOptions.customDateTo || \"\"}\n                    onChange={(e) =>\n                      updateExportOptions({ customDateTo: e.target.value })\n                    }\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                  />\n                </div>\n              </div>\n            )}\n          </div>\n\n          {/* 필터 옵션 */}\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div className=\"space-y-2\">\n              <label className=\"block text-sm font-semibold text-gray-900\">\n                매물 상태\n              </label>\n              <Select\n                value={exportOptions.propertyStatus}\n                onChange={(e) =>\n                  updateExportOptions({ propertyStatus: e.target.value as any })\n                }\n                options={[\n                  { value: \"all\", label: \"전체\" },\n                  { value: \"거래중\", label: \"거래중\" },\n                  { value: \"거래완료\", label: \"거래완료\" },\n                ]}\n              />\n            </div>\n\n            <div className=\"space-y-2\">\n              <label className=\"block text-sm font-semibold text-gray-900\">\n                매물 유형\n              </label>\n              <Select\n                value={exportOptions.propertyType}\n                onChange={(e) =>\n                  updateExportOptions({ propertyType: e.target.value as any })\n                }\n                options={[\n                  { value: \"all\", label: \"전체\" },\n                  { value: \"아파트\", label: \"아파트\" },\n                  { value: \"오피스텔\", label: \"오피스텔\" },\n                  { value: \"원룸\", label: \"원룸\" },\n                  { value: \"빌라\", label: \"빌라\" },\n                  { value: \"기타\", label: \"기타\" },\n                ]}\n              />\n            </div>\n          </div>\n\n          {/* 포함할 필드 선택 */}\n          <div className=\"space-y-3\">\n            <label className=\"block text-sm font-semibold text-gray-900\">\n              포함할 정보 선택\n            </label>\n            <div className=\"bg-gray-50 rounded-lg p-4 max-h-48 overflow-y-auto\">\n              <div className=\"grid grid-cols-2 gap-2\">\n                {AVAILABLE_FIELDS.map((field) => (\n                  <label\n                    key={field.id}\n                    className=\"flex items-center space-x-2 cursor-pointer\"\n                  >\n                    <input\n                      type=\"checkbox\"\n                      checked={exportOptions.includeFields.includes(field.id)}\n                      disabled={field.required}\n                      onChange={(e) => {\n                        if (e.target.checked) {\n                          updateExportOptions({\n                            includeFields: [\n                              ...exportOptions.includeFields,\n                              field.id,\n                            ],\n                          });\n                        } else {\n                          updateExportOptions({\n                            includeFields: exportOptions.includeFields.filter(\n                              (id) => id !== field.id,\n                            ),\n                          });\n                        }\n                      }}\n                      className=\"rounded text-blue-600\"\n                    />\n                    <span\n                      className={`text-sm ${field.required ? \"font-medium text-gray-900\" : \"text-gray-700\"}`}\n                    >\n                      {field.label}\n                      {field.required && (\n                        <span className=\"text-red-500 ml-1\">*</span>\n                      )}\n                    </span>\n                  </label>\n                ))}\n              </div>\n            </div>\n            <p className=\"text-xs text-gray-500\">\n              * 표시는 필수 필드로 항상 포함됩니다\n            </p>\n          </div>\n\n          {/* 미리보기 정보 */}\n          <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n            <div className=\"flex items-start space-x-3\">\n              <FileText className=\"h-5 w-5 text-blue-600 mt-0.5\" />\n              <div>\n                <p className=\"font-medium text-blue-900\">내보내기 미리보기</p>\n                <div className=\"text-sm text-blue-800 mt-1 space-y-1\">\n                  <p>• 총 매물 수: {filteredProperties.length}개</p>\n                  <p>• 선택된 필드: {exportOptions.includeFields.length}개</p>\n                  <p>• 파일 형식: {exportOptions.format.toUpperCase()}</p>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {error && (\n            <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\n              <div className=\"flex items-start space-x-3\">\n                <AlertCircle className=\"h-5 w-5 text-red-600 mt-0.5\" />\n                <div>\n                  <p className=\"font-medium text-red-900\">오류</p>\n                  <p className=\"text-sm text-red-600\">{error}</p>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n\n        <div className=\"flex justify-between space-x-3\">\n          <Button variant=\"outline\" onClick={onClose}>\n            취소\n          </Button>\n          <Button\n            onClick={handleExport}\n            disabled={\n              loading ||\n              tenantLoading ||\n              !tenant?.id ||\n              filteredProperties.length === 0\n            }\n            leftIcon={loading ? <Loading size=\"sm\" /> : <Download size={18} />}\n          >\n            {loading\n              ? \"내보내는 중...\"\n              : tenantLoading\n                ? \"테넌트 정보 로딩 중...\"\n                : !tenant?.id\n                  ? \"테넌트 정보 없음\"\n                  : `${filteredProperties.length}개 매물 내보내기`}\n          </Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n","// ============================================================================\n// 설정 페이지\n// ============================================================================\n\nimport React, { useState } from \"react\";\nimport {\n  Save,\n  Upload,\n  Download,\n  Bell,\n  Shield,\n  CreditCard,\n  Palette,\n  RefreshCw,\n} from \"lucide-react\";\nimport { Button, Input, Badge, Modal, InstallButton } from \"@/components/ui\";\nimport { useTenant } from \"@/contexts/TenantContext\";\nimport { useProperties } from \"@/hooks/useProperties\";\nimport { supabase } from \"@/services/supabase\";\nimport { DataImportModal } from \"@/components/data/DataImportModal\";\nimport { DataExportModal } from \"@/components/data/DataExportModal\";\n\nconst SettingsPage: React.FC = () => {\n  const { tenant } = useTenant();\n  const { refreshProperties } = useProperties();\n  const [activeTab, setActiveTab] = useState(\"general\");\n  const [resetModalOpen, setResetModalOpen] = useState(false);\n  const [resetLoading, setResetLoading] = useState(false);\n  const [importModalOpen, setImportModalOpen] = useState(false);\n  const [exportModalOpen, setExportModalOpen] = useState(false);\n\n  const tabs = [\n    { id: \"general\", label: \"일반 설정\", icon: Shield },\n    { id: \"billing\", label: \"결제 및 요금제\", icon: CreditCard },\n    { id: \"branding\", label: \"브랜딩\", icon: Palette },\n    { id: \"notifications\", label: \"알림 설정\", icon: Bell },\n  ];\n\n  const planOptions = [\n    { value: \"starter\", label: \"스타터 (19,000원/월)\", price: 19000 },\n    { value: \"professional\", label: \"프로페셔널 (39,000원/월)\", price: 39000 },\n    { value: \"business\", label: \"비즈니스 (69,000원/월)\", price: 69000 },\n    { value: \"enterprise\", label: \"엔터프라이즈 (99,000원/월)\", price: 99000 },\n  ];\n\n  const handleResetSampleData = async () => {\n    if (!tenant?.id) {\n      alert(\"테넌트 정보가 없습니다.\");\n      return;\n    }\n\n    try {\n      setResetLoading(true);\n      console.log(\"🧹 샘플 데이터 초기화 시작:\", tenant.id);\n\n      // 1. 로컬 저장소에서 매물 상태 정보 모두 삭제\n      console.log(\"🗑️ 로컬 저장소 상태 정보 삭제 중...\");\n      const keys = Object.keys(localStorage);\n      keys.forEach((key) => {\n        if (key.startsWith(\"property_status_\")) {\n          localStorage.removeItem(key);\n          console.log(\"삭제된 키:\", key);\n        }\n      });\n\n      // 2. 현재 매물 개수 확인\n      const { data: properties, error: fetchError } = await supabase\n        .from(\"properties\")\n        .select(\"id\")\n        .eq(\"tenant_id\", tenant.id);\n\n      if (fetchError) {\n        console.error(\"❌ 매물 조회 실패:\", fetchError);\n        throw new Error(`매물 조회 실패: ${fetchError.message}`);\n      }\n\n      console.log(\"📊 삭제할 매물 개수:\", properties?.length || 0);\n\n      if (!properties || properties.length === 0) {\n        alert(\"삭제할 매물이 없습니다.\");\n        setResetModalOpen(false);\n        return;\n      }\n\n      // 3. 매물 데이터 삭제 (Supabase)\n      console.log(\"🗑️ Supabase에서 매물 데이터 삭제 중...\");\n      const { error: deleteError } = await supabase\n        .from(\"properties\")\n        .delete()\n        .eq(\"tenant_id\", tenant.id);\n\n      if (deleteError) {\n        console.error(\"❌ 매물 삭제 실패:\", deleteError);\n        throw new Error(`매물 삭제 실패: ${deleteError.message}`);\n      }\n\n      console.log(\"✅ 매물 데이터 삭제 완료\");\n\n      // 4. 데이터 새로고침\n      console.log(\"🔄 데이터 새로고침 중...\");\n      await refreshProperties();\n\n      setResetModalOpen(false);\n      alert(\n        `✅ ${properties.length}개의 샘플 매물이 성공적으로 삭제되었습니다!`,\n      );\n    } catch (error) {\n      console.error(\"💥 초기화 실패:\", error);\n      const errorMessage =\n        error instanceof Error\n          ? error.message\n          : \"알 수 없는 오류가 발생했습니다.\";\n      alert(`❌ 데이터 초기화 실패: ${errorMessage}`);\n    } finally {\n      setResetLoading(false);\n    }\n  };\n\n  const handleImportComplete = (importedProperties: any[]) => {\n    console.log(\"가져오기 완료:\", importedProperties.length, \"개 매물\");\n    refreshProperties(); // 매물 목록 새로고침\n  };\n\n  const renderTabContent = () => {\n    switch (activeTab) {\n      case \"general\":\n        return (\n          <div className=\"space-y-8\">\n            {/* 기본 정보 - 전체 너비 활용 */}\n            <div className=\"bg-gray-50 rounded-xl p-6 sm:p-8\">\n              <div className=\"flex items-center justify-between mb-6\">\n                <h2 className=\"text-xl sm:text-2xl font-bold text-gray-900\">\n                  기본 정보\n                </h2>\n                <Button\n                  leftIcon={<Save size={18} />}\n                  size=\"lg\"\n                  className=\"h-12 px-6 text-base\"\n                >\n                  변경사항 저장\n                </Button>\n              </div>\n\n              <div className=\"space-y-6\">\n                <div className=\"grid grid-cols-1 xl:grid-cols-2 gap-6\">\n                  <div className=\"space-y-2\">\n                    <label className=\"block text-base sm:text-lg font-semibold text-gray-800 mb-3\">\n                      회사명\n                    </label>\n                    <Input\n                      defaultValue={tenant?.name || \"PropertyDesk\"}\n                      placeholder=\"회사명을 입력하세요\"\n                      className=\"text-base h-12 bg-white\"\n                    />\n                  </div>\n                  <div className=\"space-y-2\">\n                    <label className=\"block text-base sm:text-lg font-semibold text-gray-800 mb-3\">\n                      도메인 주소\n                    </label>\n                    <Input\n                      defaultValue={tenant?.slug || \"propertydesk\"}\n                      placeholder=\"도메인 주소\"\n                      readOnly\n                      className=\"bg-gray-100 text-base h-12\"\n                    />\n                  </div>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <label className=\"block text-base sm:text-lg font-semibold text-gray-800 mb-3\">\n                    회사 소개\n                  </label>\n                  <textarea\n                    className=\"w-full p-4 sm:p-5 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 resize-none text-base bg-white\"\n                    rows={4}\n                    placeholder=\"회사 소개를 입력하세요\"\n                    defaultValue=\"부동산 전문 관리 솔루션 PropertyDesk입니다.\"\n                  />\n                </div>\n\n                <div className=\"grid grid-cols-1 xl:grid-cols-2 gap-6\">\n                  <div className=\"space-y-2\">\n                    <label className=\"block text-base sm:text-lg font-semibold text-gray-800 mb-3\">\n                      대표 전화번호\n                    </label>\n                    <Input\n                      placeholder=\"02-1234-5678\"\n                      defaultValue=\"02-1234-5678\"\n                      className=\"text-base h-12 bg-white\"\n                    />\n                  </div>\n                  <div className=\"space-y-2\">\n                    <label className=\"block text-base sm:text-lg font-semibold text-gray-800 mb-3\">\n                      대표 이메일\n                    </label>\n                    <Input\n                      type=\"email\"\n                      placeholder=\"contact@propertydesk.com\"\n                      defaultValue=\"contact@propertydesk.com\"\n                      className=\"text-base h-12 bg-white\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* 앱 설치 - 전체 너비 활용 */}\n            <div className=\"bg-gradient-to-r from-blue-50 to-indigo-50 rounded-xl p-6 sm:p-8 border border-blue-200\">\n              <h2 className=\"text-xl sm:text-2xl font-bold text-gray-900 mb-6\">\n                앱 설치\n              </h2>\n\n              <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n                {/* 설치 버튼 영역 */}\n                <div className=\"lg:col-span-2 bg-white rounded-lg p-6 border border-blue-300\">\n                  <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between space-y-4 sm:space-y-0\">\n                    <div className=\"flex-1\">\n                      <h3 className=\"font-bold text-lg sm:text-xl text-gray-900 mb-3\">\n                        PC에 바로가기 만들기\n                      </h3>\n                      <p className=\"text-base sm:text-lg text-gray-700 leading-relaxed\">\n                        리체 매물장을 PC 바탕화면에 설치하여 더 편리하게\n                        사용하세요.\n                      </p>\n                    </div>\n                    <div className=\"flex-shrink-0\">\n                      <InstallButton />\n                    </div>\n                  </div>\n                </div>\n\n                {/* PWA 혜택 */}\n                <div className=\"bg-white rounded-lg p-6 border border-blue-300\">\n                  <h4 className=\"font-bold text-lg text-gray-900 mb-4\">\n                    💡 PWA 설치 혜택\n                  </h4>\n                  <ul className=\"space-y-3 text-base text-gray-700\">\n                    <li className=\"flex items-center space-x-2\">\n                      <span className=\"w-2 h-2 bg-blue-500 rounded-full\"></span>\n                      <span>브라우저 없이 독립 실행</span>\n                    </li>\n                    <li className=\"flex items-center space-x-2\">\n                      <span className=\"w-2 h-2 bg-blue-500 rounded-full\"></span>\n                      <span>더 빠른 로딩 속도</span>\n                    </li>\n                    <li className=\"flex items-center space-x-2\">\n                      <span className=\"w-2 h-2 bg-blue-500 rounded-full\"></span>\n                      <span>오프라인 일부 기능 사용</span>\n                    </li>\n                    <li className=\"flex items-center space-x-2\">\n                      <span className=\"w-2 h-2 bg-blue-500 rounded-full\"></span>\n                      <span>푸시 알림 수신 가능</span>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n\n            {/* 데이터 관리 - 전체 너비 활용 */}\n            <div className=\"bg-gray-50 rounded-xl p-6 sm:p-8\">\n              <h2 className=\"text-xl sm:text-2xl font-bold text-gray-900 mb-6\">\n                데이터 관리\n              </h2>\n\n              <div className=\"space-y-6\">\n                {/* 데이터 작업 버튼들 */}\n                <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-4\">\n                  <Button\n                    variant=\"outline\"\n                    leftIcon={<Upload size={20} />}\n                    size=\"lg\"\n                    onClick={() => setImportModalOpen(true)}\n                    className=\"h-16 text-base font-semibold bg-white hover:bg-green-50 border-2 hover:border-green-300\"\n                  >\n                    <div className=\"text-center\">\n                      <div>데이터 가져오기</div>\n                      <div className=\"text-xs text-gray-500 mt-1\">\n                        Excel, CSV 파일 지원\n                      </div>\n                    </div>\n                  </Button>\n                  <Button\n                    variant=\"outline\"\n                    leftIcon={<Download size={20} />}\n                    size=\"lg\"\n                    onClick={() => setExportModalOpen(true)}\n                    className=\"h-16 text-base font-semibold bg-white hover:bg-blue-50 border-2 hover:border-blue-300\"\n                  >\n                    <div className=\"text-center\">\n                      <div>데이터 내보내기</div>\n                      <div className=\"text-xs text-gray-500 mt-1\">\n                        백업 및 분석용\n                      </div>\n                    </div>\n                  </Button>\n                  <Button\n                    variant=\"destructive\"\n                    leftIcon={<RefreshCw size={20} />}\n                    onClick={() => setResetModalOpen(true)}\n                    size=\"lg\"\n                    className=\"h-16 text-base font-semibold\"\n                  >\n                    <div className=\"text-center\">\n                      <div>샘플 데이터 초기화</div>\n                      <div className=\"text-xs text-red-100 mt-1\">\n                        복구 불가능\n                      </div>\n                    </div>\n                  </Button>\n                </div>\n\n                {/* 안내 메시지들 */}\n                <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                  <div className=\"bg-blue-100 border-l-4 border-blue-500 rounded-lg p-6\">\n                    <div className=\"flex items-start space-x-3\">\n                      <div className=\"text-blue-600 text-2xl\">💡</div>\n                      <div>\n                        <h4 className=\"font-bold text-lg text-blue-900 mb-2\">\n                          샘플 데이터 초기화\n                        </h4>\n                        <p className=\"text-base text-blue-800 leading-relaxed\">\n                          회원가입 시 제공된 샘플 매물 데이터를 모두 삭제하여\n                          깨끗한 상태에서 시작할 수 있습니다.\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"bg-yellow-100 border-l-4 border-yellow-500 rounded-lg p-6\">\n                    <div className=\"flex items-start space-x-3\">\n                      <div className=\"text-yellow-600 text-2xl\">⚠️</div>\n                      <div>\n                        <h4 className=\"font-bold text-lg text-yellow-900 mb-2\">\n                          중요 주의사항\n                        </h4>\n                        <p className=\"text-base text-yellow-800 leading-relaxed\">\n                          초기화된 데이터는 복구할 수 없습니다. 실제 매물\n                          데이터를 등록하기 전에 진행해주세요.\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n\n      case \"billing\":\n        return (\n          <div className=\"space-y-8\">\n            {/* 현재 플랜 - 전체 너비 활용 */}\n            <div className=\"bg-gradient-to-r from-primary-50 via-blue-50 to-indigo-50 rounded-xl p-6 sm:p-8 border border-primary-200\">\n              <h2 className=\"text-xl sm:text-2xl font-bold text-gray-900 mb-6\">\n                현재 플랜\n              </h2>\n\n              {tenant && (\n                <div className=\"space-y-6\">\n                  {/* 플랜 정보 헤더 */}\n                  <div className=\"bg-white rounded-lg p-6 border border-primary-300 shadow-sm\">\n                    <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between space-y-4 lg:space-y-0\">\n                      <div className=\"flex-1\">\n                        <h3 className=\"text-2xl sm:text-3xl font-bold text-gray-900 mb-2\">\n                          {tenant.plan.charAt(0).toUpperCase() +\n                            tenant.plan.slice(1)}{\" \"}\n                          플랜\n                        </h3>\n                        <p className=\"text-base sm:text-lg text-gray-700\">\n                          매물 {tenant.limits.max_properties}개 · 팀원{\" \"}\n                          {tenant.limits.max_users}명 · 스토리지{\" \"}\n                          {tenant.limits.max_storage_gb}GB\n                        </p>\n                      </div>\n                      <div className=\"text-left lg:text-right\">\n                        <Badge\n                          variant=\"tenant\"\n                          size=\"lg\"\n                          className=\"text-base px-4 py-2\"\n                        >\n                          {tenant.status === \"trial\" ? \"체험 중\" : \"활성 상태\"}\n                        </Badge>\n                        {tenant.trial_ends_at && (\n                          <p className=\"text-sm sm:text-base text-gray-600 mt-2\">\n                            체험 종료:{\" \"}\n                            {new Date(\n                              tenant.trial_ends_at,\n                            ).toLocaleDateString()}\n                          </p>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* 사용량 통계 */}\n                  <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n                    <div className=\"text-center p-6 sm:p-8 bg-white rounded-lg border border-gray-200 shadow-sm\">\n                      <div className=\"text-3xl sm:text-4xl font-bold text-primary-600 mb-2\">\n                        156\n                      </div>\n                      <p className=\"text-base sm:text-lg font-semibold text-gray-800 mb-1\">\n                        사용 중인 매물\n                      </p>\n                      <p className=\"text-sm sm:text-base text-gray-500\">\n                        / {tenant.limits.max_properties}개 제한\n                      </p>\n                      <div className=\"mt-3 bg-gray-200 rounded-full h-2\">\n                        <div\n                          className=\"bg-primary-600 h-2 rounded-full\"\n                          style={{\n                            width: `${(156 / tenant.limits.max_properties) * 100}%`,\n                          }}\n                        ></div>\n                      </div>\n                    </div>\n                    <div className=\"text-center p-6 sm:p-8 bg-white rounded-lg border border-gray-200 shadow-sm\">\n                      <div className=\"text-3xl sm:text-4xl font-bold text-green-600 mb-2\">\n                        8\n                      </div>\n                      <p className=\"text-base sm:text-lg font-semibold text-gray-800 mb-1\">\n                        팀원 수\n                      </p>\n                      <p className=\"text-sm sm:text-base text-gray-500\">\n                        / {tenant.limits.max_users}명 제한\n                      </p>\n                      <div className=\"mt-3 bg-gray-200 rounded-full h-2\">\n                        <div\n                          className=\"bg-green-600 h-2 rounded-full\"\n                          style={{\n                            width: `${(8 / tenant.limits.max_users) * 100}%`,\n                          }}\n                        ></div>\n                      </div>\n                    </div>\n                    <div className=\"text-center p-6 sm:p-8 bg-white rounded-lg border border-gray-200 shadow-sm\">\n                      <div className=\"text-3xl sm:text-4xl font-bold text-blue-600 mb-2\">\n                        2.3\n                      </div>\n                      <p className=\"text-base sm:text-lg font-semibold text-gray-800 mb-1\">\n                        스토리지 사용량\n                      </p>\n                      <p className=\"text-sm sm:text-base text-gray-500\">\n                        / {tenant.limits.max_storage_gb}GB 제한\n                      </p>\n                      <div className=\"mt-3 bg-gray-200 rounded-full h-2\">\n                        <div\n                          className=\"bg-blue-600 h-2 rounded-full\"\n                          style={{\n                            width: `${(2.3 / tenant.limits.max_storage_gb) * 100}%`,\n                          }}\n                        ></div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n\n            {/* 플랜 변경 - 전체 너비 활용 */}\n            <div className=\"bg-gray-50 rounded-xl p-6 sm:p-8\">\n              <h2 className=\"text-xl sm:text-2xl font-bold text-gray-900 mb-6\">\n                플랜 변경\n              </h2>\n\n              <div className=\"grid grid-cols-1 xl:grid-cols-2 gap-6\">\n                {planOptions.map((plan) => (\n                  <div\n                    key={plan.value}\n                    className={`p-6 sm:p-8 border-2 rounded-xl cursor-pointer transition-all duration-200 bg-white ${\n                      tenant?.plan === plan.value\n                        ? \"border-primary-500 shadow-lg ring-2 ring-primary-100\"\n                        : \"border-gray-200 hover:border-primary-300 hover:shadow-md\"\n                    }`}\n                  >\n                    <div className=\"flex items-center justify-between mb-4\">\n                      <h3 className=\"font-bold text-xl sm:text-2xl text-gray-900\">\n                        {plan.label.split(\" (\")[0]}\n                      </h3>\n                      {tenant?.plan === plan.value && (\n                        <Badge\n                          variant=\"primary\"\n                          size=\"lg\"\n                          className=\"text-sm px-3 py-1\"\n                        >\n                          현재 플랜\n                        </Badge>\n                      )}\n                    </div>\n                    <div className=\"mb-6\">\n                      <span className=\"text-3xl sm:text-4xl font-bold text-gray-900\">\n                        {plan.price.toLocaleString()}원\n                      </span>\n                      <span className=\"text-lg text-gray-500 ml-1\">/월</span>\n                    </div>\n                    {tenant?.plan !== plan.value && (\n                      <Button\n                        size=\"lg\"\n                        variant=\"outline\"\n                        className=\"w-full h-12 text-base font-semibold\"\n                      >\n                        이 플랜으로 변경\n                      </Button>\n                    )}\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            {/* 결제 정보 - 전체 너비 활용 */}\n            <div className=\"bg-gray-50 rounded-xl p-6 sm:p-8\">\n              <h2 className=\"text-xl sm:text-2xl font-bold text-gray-900 mb-6\">\n                결제 정보\n              </h2>\n\n              <div className=\"space-y-6\">\n                {/* 등록된 카드 정보 */}\n                <div className=\"bg-white p-6 sm:p-8 rounded-lg border border-gray-200 shadow-sm\">\n                  <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between space-y-4 lg:space-y-0\">\n                    <div className=\"flex items-center space-x-4\">\n                      <div className=\"w-12 h-8 bg-gradient-to-r from-blue-600 to-purple-600 rounded flex items-center justify-center\">\n                        <CreditCard size={20} className=\"text-white\" />\n                      </div>\n                      <div>\n                        <div className=\"flex items-center space-x-3 mb-1\">\n                          <span className=\"font-bold text-lg text-gray-900\">\n                            등록된 카드\n                          </span>\n                          <Badge\n                            variant=\"success\"\n                            size=\"sm\"\n                            className=\"text-sm\"\n                          >\n                            활성\n                          </Badge>\n                        </div>\n                        <p className=\"text-gray-600 text-lg font-mono\">\n                          •••• •••• •••• 4567\n                        </p>\n                        <p className=\"text-base text-gray-500\">만료일: 12/25</p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                {/* 결제 관리 버튼들 */}\n                <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\n                  <Button\n                    variant=\"outline\"\n                    size=\"lg\"\n                    className=\"h-14 text-base font-semibold bg-white hover:bg-blue-50 border-2 hover:border-blue-300\"\n                  >\n                    <CreditCard size={20} className=\"mr-2\" />\n                    결제 수단 변경\n                  </Button>\n                  <Button\n                    variant=\"outline\"\n                    size=\"lg\"\n                    className=\"h-14 text-base font-semibold bg-white hover:bg-green-50 border-2 hover:border-green-300\"\n                  >\n                    <Download size={20} className=\"mr-2\" />\n                    결제 내역 보기\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n\n      case \"branding\":\n        return (\n          <div className=\"space-y-8\">\n            {/* 브랜드 설정 - 전체 너비 활용 */}\n            <div className=\"bg-gradient-to-r from-purple-50 to-pink-50 rounded-xl p-6 sm:p-8 border border-purple-200\">\n              <div className=\"flex items-center justify-between mb-6\">\n                <h2 className=\"text-xl sm:text-2xl font-bold text-gray-900\">\n                  브랜드 설정\n                </h2>\n                <Button\n                  leftIcon={<Save size={20} />}\n                  size=\"lg\"\n                  className=\"h-12 px-6 text-base\"\n                >\n                  브랜드 설정 저장\n                </Button>\n              </div>\n\n              <div className=\"grid grid-cols-1 xl:grid-cols-2 gap-8\">\n                {/* 로고 업로드 섹션 */}\n                <div className=\"bg-white rounded-lg p-6 sm:p-8 border border-purple-200 shadow-sm\">\n                  <label className=\"block text-lg sm:text-xl font-bold text-gray-800 mb-4\">\n                    로고 업로드\n                  </label>\n                  <div className=\"border-3 border-dashed border-purple-300 rounded-xl p-8 sm:p-10 text-center hover:border-purple-400 transition-colors cursor-pointer\">\n                    <Upload className=\"mx-auto h-16 w-16 sm:h-20 sm:w-20 text-purple-400 mb-4\" />\n                    <p className=\"text-base sm:text-lg text-gray-700 font-medium mb-2\">\n                      이미지를 드래그하거나 클릭하여 업로드\n                    </p>\n                    <p className=\"text-sm sm:text-base text-gray-500\">\n                      PNG, JPG 파일 / 최대 2MB\n                    </p>\n                  </div>\n                </div>\n\n                {/* 브랜드 컬러 섹션 */}\n                <div className=\"bg-white rounded-lg p-6 sm:p-8 border border-purple-200 shadow-sm\">\n                  <label className=\"block text-lg sm:text-xl font-bold text-gray-800 mb-4\">\n                    브랜드 컬러\n                  </label>\n                  <div className=\"space-y-6\">\n                    <div>\n                      <label className=\"block text-base sm:text-lg font-semibold text-gray-700 mb-3\">\n                        주 컬러\n                      </label>\n                      <div className=\"flex items-center space-x-4\">\n                        <input\n                          type=\"color\"\n                          defaultValue=\"#3b82f6\"\n                          className=\"w-16 h-16 sm:w-20 sm:h-20 rounded-lg border-2 border-gray-300 cursor-pointer\"\n                        />\n                        <Input\n                          defaultValue=\"#3b82f6\"\n                          placeholder=\"#3b82f6\"\n                          className=\"flex-1 text-base h-12 bg-gray-50\"\n                        />\n                      </div>\n                    </div>\n                    <div>\n                      <label className=\"block text-base sm:text-lg font-semibold text-gray-700 mb-3\">\n                        보조 컬러\n                      </label>\n                      <div className=\"flex items-center space-x-4\">\n                        <input\n                          type=\"color\"\n                          defaultValue=\"#1d4ed8\"\n                          className=\"w-16 h-16 sm:w-20 sm:h-20 rounded-lg border-2 border-gray-300 cursor-pointer\"\n                        />\n                        <Input\n                          defaultValue=\"#1d4ed8\"\n                          placeholder=\"#1d4ed8\"\n                          className=\"flex-1 text-base h-12 bg-gray-50\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* 미리보기 섹션 */}\n              <div className=\"mt-8 bg-white rounded-lg p-6 sm:p-8 border border-purple-200 shadow-sm\">\n                <h3 className=\"font-bold text-lg sm:text-xl text-gray-900 mb-4\">\n                  브랜드 미리보기\n                </h3>\n                <div className=\"bg-gradient-to-r from-primary-50 to-blue-50 rounded-lg p-6 sm:p-8 border border-primary-200\">\n                  <div className=\"flex items-center space-x-4\">\n                    <div className=\"w-16 h-16 sm:w-20 sm:h-20 bg-primary-600 rounded-full flex items-center justify-center text-white font-bold text-xl sm:text-2xl shadow-lg\">\n                      P\n                    </div>\n                    <div>\n                      <p className=\"font-bold text-xl sm:text-2xl text-gray-900\">\n                        PropertyDesk\n                      </p>\n                      <p className=\"text-base sm:text-lg text-gray-600 mt-1\">\n                        새로운 브랜드 스타일 적용\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n\n      case \"notifications\":\n        return (\n          <div className=\"space-y-8\">\n            {/* 알림 설정 - 전체 너비 활용 */}\n            <div className=\"bg-gradient-to-r from-green-50 to-teal-50 rounded-xl p-6 sm:p-8 border border-green-200\">\n              <div className=\"flex items-center justify-between mb-6\">\n                <h2 className=\"text-xl sm:text-2xl font-bold text-gray-900\">\n                  알림 설정\n                </h2>\n                <Button\n                  leftIcon={<Save size={20} />}\n                  size=\"lg\"\n                  className=\"h-12 px-6 text-base\"\n                >\n                  알림 설정 저장\n                </Button>\n              </div>\n\n              <div className=\"space-y-6\">\n                {/* 알림 항목들 */}\n                <div className=\"grid grid-cols-1 gap-4\">\n                  <div className=\"bg-white rounded-lg p-6 sm:p-8 border border-green-200 shadow-sm\">\n                    <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between space-y-4 lg:space-y-0\">\n                      <div className=\"flex items-start space-x-3\">\n                        <Bell className=\"w-6 h-6 text-green-600 mt-1\" />\n                        <div className=\"flex-1\">\n                          <h3 className=\"font-bold text-lg sm:text-xl text-gray-900 mb-1\">\n                            새로운 매물 등록\n                          </h3>\n                          <p className=\"text-base sm:text-lg text-gray-600\">\n                            매물이 새로 등록될 때 알림을 받습니다\n                          </p>\n                        </div>\n                      </div>\n                      <div className=\"flex items-center space-x-6\">\n                        <label className=\"flex items-center space-x-3 cursor-pointer\">\n                          <input\n                            type=\"checkbox\"\n                            defaultChecked\n                            className=\"rounded w-5 h-5 text-green-600\"\n                          />\n                          <span className=\"text-base font-medium\">이메일</span>\n                        </label>\n                        <label className=\"flex items-center space-x-3 cursor-pointer\">\n                          <input\n                            type=\"checkbox\"\n                            defaultChecked\n                            className=\"rounded w-5 h-5 text-green-600\"\n                          />\n                          <span className=\"text-base font-medium\">앱 알림</span>\n                        </label>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"bg-white rounded-lg p-6 sm:p-8 border border-green-200 shadow-sm\">\n                    <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between space-y-4 lg:space-y-0\">\n                      <div className=\"flex items-start space-x-3\">\n                        <Bell className=\"w-6 h-6 text-blue-600 mt-1\" />\n                        <div className=\"flex-1\">\n                          <h3 className=\"font-bold text-lg sm:text-xl text-gray-900 mb-1\">\n                            계약 완료\n                          </h3>\n                          <p className=\"text-base sm:text-lg text-gray-600\">\n                            계약이 완료될 때 알림을 받습니다\n                          </p>\n                        </div>\n                      </div>\n                      <div className=\"flex items-center space-x-6\">\n                        <label className=\"flex items-center space-x-3 cursor-pointer\">\n                          <input\n                            type=\"checkbox\"\n                            defaultChecked\n                            className=\"rounded w-5 h-5 text-blue-600\"\n                          />\n                          <span className=\"text-base font-medium\">이메일</span>\n                        </label>\n                        <label className=\"flex items-center space-x-3 cursor-pointer\">\n                          <input\n                            type=\"checkbox\"\n                            className=\"rounded w-5 h-5 text-blue-600\"\n                          />\n                          <span className=\"text-base font-medium\">앱 알림</span>\n                        </label>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"bg-white rounded-lg p-6 sm:p-8 border border-green-200 shadow-sm\">\n                    <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between space-y-4 lg:space-y-0\">\n                      <div className=\"flex items-start space-x-3\">\n                        <Bell className=\"w-6 h-6 text-purple-600 mt-1\" />\n                        <div className=\"flex-1\">\n                          <h3 className=\"font-bold text-lg sm:text-xl text-gray-900 mb-1\">\n                            팀원 초대\n                          </h3>\n                          <p className=\"text-base sm:text-lg text-gray-600\">\n                            새로운 팀원이 초대될 때 알림을 받습니다\n                          </p>\n                        </div>\n                      </div>\n                      <div className=\"flex items-center space-x-6\">\n                        <label className=\"flex items-center space-x-3 cursor-pointer\">\n                          <input\n                            type=\"checkbox\"\n                            defaultChecked\n                            className=\"rounded w-5 h-5 text-purple-600\"\n                          />\n                          <span className=\"text-base font-medium\">이메일</span>\n                        </label>\n                        <label className=\"flex items-center space-x-3 cursor-pointer\">\n                          <input\n                            type=\"checkbox\"\n                            defaultChecked\n                            className=\"rounded w-5 h-5 text-purple-600\"\n                          />\n                          <span className=\"text-base font-medium\">앱 알림</span>\n                        </label>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"bg-white rounded-lg p-6 sm:p-8 border border-green-200 shadow-sm\">\n                    <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between space-y-4 lg:space-y-0\">\n                      <div className=\"flex items-start space-x-3\">\n                        <Bell className=\"w-6 h-6 text-orange-600 mt-1\" />\n                        <div className=\"flex-1\">\n                          <h3 className=\"font-bold text-lg sm:text-xl text-gray-900 mb-1\">\n                            시스템 업데이트\n                          </h3>\n                          <p className=\"text-base sm:text-lg text-gray-600\">\n                            시스템 업데이트 및 유지보수 알림을 받습니다\n                          </p>\n                        </div>\n                      </div>\n                      <div className=\"flex items-center space-x-6\">\n                        <label className=\"flex items-center space-x-3 cursor-pointer\">\n                          <input\n                            type=\"checkbox\"\n                            defaultChecked\n                            className=\"rounded w-5 h-5 text-orange-600\"\n                          />\n                          <span className=\"text-base font-medium\">이메일</span>\n                        </label>\n                        <label className=\"flex items-center space-x-3 cursor-pointer\">\n                          <input\n                            type=\"checkbox\"\n                            className=\"rounded w-5 h-5 text-orange-600\"\n                          />\n                          <span className=\"text-base font-medium\">앱 알림</span>\n                        </label>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                {/* 알림 시간 설정 */}\n                <div className=\"bg-white rounded-lg p-6 sm:p-8 border border-green-200 shadow-sm\">\n                  <h3 className=\"font-bold text-lg sm:text-xl text-gray-900 mb-6\">\n                    알림 시간 설정\n                  </h3>\n                  <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                    <div>\n                      <label className=\"block text-base sm:text-lg font-semibold text-gray-800 mb-3\">\n                        알림 시작 시간\n                      </label>\n                      <Input\n                        type=\"time\"\n                        defaultValue=\"09:00\"\n                        className=\"text-base h-14 bg-gray-50 text-lg font-mono\"\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-base sm:text-lg font-semibold text-gray-800 mb-3\">\n                        알림 종료 시간\n                      </label>\n                      <Input\n                        type=\"time\"\n                        defaultValue=\"18:00\"\n                        className=\"text-base h-14 bg-gray-50 text-lg font-mono\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"mt-4 p-4 bg-blue-50 border border-blue-200 rounded-lg\">\n                    <p className=\"text-base text-blue-800\">\n                      💡 <strong>알림 시간 안내:</strong> 설정된 시간 외에는\n                      긴급하지 않은 알림이 발송되지 않습니다.\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className=\"max-w-none space-y-6\">\n      {/* 페이지 헤더 - 전체 너비 활용 */}\n      <div className=\"bg-white rounded-lg p-6 sm:p-8 shadow-sm border border-gray-200\">\n        <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between space-y-3 lg:space-y-0\">\n          <div>\n            <h1 className=\"text-2xl sm:text-3xl lg:text-4xl font-bold text-gray-900\">\n              설정\n            </h1>\n            <p className=\"text-base sm:text-lg text-gray-600 mt-2\">\n              시스템 설정을 관리하고 커스터마이징할 수 있습니다\n            </p>\n          </div>\n          <div className=\"flex items-center space-x-3\">\n            <Badge variant=\"success\" size=\"lg\" className=\"text-sm\">\n              {tenant?.status === \"trial\" ? \"체험 중\" : \"활성 상태\"}\n            </Badge>\n            <Badge variant=\"primary\" size=\"lg\" className=\"text-sm\">\n              {tenant?.plan || \"Professional\"} 플랜\n            </Badge>\n          </div>\n        </div>\n      </div>\n\n      {/* 탭 메뉴 - 전체 너비 최적화 */}\n      <div className=\"bg-white rounded-lg shadow-sm border border-gray-200\">\n        <div className=\"border-b border-gray-200\">\n          <nav className=\"flex overflow-x-auto px-6 sm:px-8 scrollbar-hide\">\n            {tabs.map((tab) => {\n              const Icon = tab.icon;\n              return (\n                <button\n                  key={tab.id}\n                  onClick={() => setActiveTab(tab.id)}\n                  className={`flex items-center space-x-2 py-5 px-4 sm:px-6 border-b-2 font-medium text-base sm:text-lg transition-colors whitespace-nowrap min-w-max touch-target ${\n                    activeTab === tab.id\n                      ? \"border-primary-500 text-primary-600 bg-primary-50\"\n                      : \"border-transparent text-gray-600 hover:text-gray-900 hover:border-gray-300 hover:bg-gray-50\"\n                  }`}\n                >\n                  <Icon size={22} className=\"flex-shrink-0\" />\n                  <span className=\"hidden sm:inline\">{tab.label}</span>\n                  <span className=\"sm:hidden text-sm font-medium\">\n                    {tab.label.split(\" \")[0]}\n                  </span>\n                </button>\n              );\n            })}\n          </nav>\n        </div>\n\n        {/* 컨텐츠 영역 - 전체 너비 활용 */}\n        <div className=\"px-6 sm:px-8 py-6 sm:py-8\">{renderTabContent()}</div>\n      </div>\n\n      {/* 샘플 데이터 초기화 확인 모달 */}\n      <Modal\n        isOpen={resetModalOpen}\n        onClose={() => setResetModalOpen(false)}\n        title=\"샘플 데이터 초기화\"\n      >\n        <div className=\"space-y-4\">\n          <div className=\"flex items-start space-x-3\">\n            <div className=\"flex-shrink-0\">\n              <RefreshCw className=\"h-6 w-6 text-red-600\" />\n            </div>\n            <div>\n              <h3 className=\"text-lg font-medium text-gray-900\">\n                정말로 샘플 데이터를 초기화하시겠습니까?\n              </h3>\n              <div className=\"mt-2 text-sm text-gray-600\">\n                <p>이 작업을 수행하면:</p>\n                <ul className=\"mt-2 list-disc list-inside space-y-1\">\n                  <li>모든 샘플 매물 데이터가 삭제됩니다</li>\n                  <li>매물 상태 정보가 초기화됩니다</li>\n                  <li>삭제된 데이터는 복구할 수 없습니다</li>\n                </ul>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-3\">\n            <p className=\"text-sm text-yellow-800\">\n              <strong>참고:</strong> 초기화 후에는 깨끗한 상태에서 실제 매물\n              데이터를 등록할 수 있습니다.\n            </p>\n          </div>\n\n          <div className=\"flex justify-end space-x-3 pt-4\">\n            <Button\n              variant=\"outline\"\n              onClick={() => setResetModalOpen(false)}\n              disabled={resetLoading}\n            >\n              취소\n            </Button>\n            <Button\n              variant=\"destructive\"\n              onClick={handleResetSampleData}\n              disabled={resetLoading}\n              leftIcon={\n                resetLoading ? (\n                  <RefreshCw size={16} className=\"animate-spin\" />\n                ) : (\n                  <RefreshCw size={16} />\n                )\n              }\n            >\n              {resetLoading ? \"초기화 중...\" : \"초기화 실행\"}\n            </Button>\n          </div>\n        </div>\n      </Modal>\n\n      {/* 데이터 가져오기 모달 */}\n      <DataImportModal\n        isOpen={importModalOpen}\n        onClose={() => setImportModalOpen(false)}\n        onImportComplete={handleImportComplete}\n      />\n\n      {/* 데이터 내보내기 모달 */}\n      <DataExportModal\n        isOpen={exportModalOpen}\n        onClose={() => setExportModalOpen(false)}\n      />\n    </div>\n  );\n};\n\nexport { SettingsPage };\n","// ============================================================================\n// 사용설명서 페이지 - 모든 기능 소개와 사용법 안내\n// ============================================================================\n\nimport React, { useState } from \"react\";\nimport {\n  BookOpen,\n  Home,\n  Plus,\n  Search,\n  Edit,\n  Settings,\n  Users,\n  CreditCard,\n  Bell,\n  Grid,\n  AlignLeft,\n  TrendingUp,\n  Building2,\n  Monitor,\n} from \"lucide-react\";\nimport { Card, CardHeader, CardTitle, CardContent } from \"@/components/ui\";\n\nconst UserGuidePage: React.FC = () => {\n  const [activeSection, setActiveSection] = useState(\"overview\");\n\n  const sections = [\n    { id: \"overview\", title: \"개요\", icon: Home },\n    { id: \"dashboard\", title: \"대시보드\", icon: TrendingUp },\n    { id: \"properties\", title: \"매물 관리\", icon: Building2 },\n    { id: \"team\", title: \"팀 관리\", icon: Users },\n    { id: \"settings\", title: \"설정\", icon: Settings },\n    { id: \"tips\", title: \"사용 팁\", icon: BookOpen },\n  ];\n\n  const renderSectionContent = () => {\n    switch (activeSection) {\n      case \"overview\":\n        return (\n          <div className=\"space-y-6\">\n            <div className=\"bg-gradient-to-r from-blue-50 to-indigo-50 rounded-lg p-4 sm:p-6 border border-blue-200\">\n              <h2 className=\"text-xl sm:text-2xl font-bold text-gray-900 mb-4\">\n                리체 매물장에 오신 것을 환영합니다! 🏠\n              </h2>\n              <p className=\"text-sm sm:text-base text-gray-700 mb-4\">\n                리체 매물장은 부동산 매물을 효율적으로 관리할 수 있는 전문 SaaS\n                플랫폼입니다. 매물 등록부터 계약 관리까지 모든 업무를 하나의\n                시스템에서 처리할 수 있습니다.\n              </p>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mt-6\">\n                <div className=\"bg-white p-4 sm:p-5 rounded-lg border border-blue-100\">\n                  <div className=\"flex items-center mb-2\">\n                    <Building2 className=\"w-5 h-5 text-blue-600 mr-2\" />\n                    <h3 className=\"font-semibold text-sm sm:text-base text-gray-900\">\n                      매물 관리\n                    </h3>\n                  </div>\n                  <p className=\"text-xs sm:text-sm text-gray-600\">\n                    매물 등록, 수정, 삭제 및 상태 관리\n                  </p>\n                </div>\n\n                <div className=\"bg-white p-4 rounded-lg border border-green-100\">\n                  <div className=\"flex items-center mb-2\">\n                    <TrendingUp className=\"w-5 h-5 text-green-600 mr-2\" />\n                    <h3 className=\"font-semibold text-gray-900\">실시간 통계</h3>\n                  </div>\n                  <p className=\"text-sm text-gray-600\">\n                    매물 현황 및 트렌드 분석\n                  </p>\n                </div>\n\n                <div className=\"bg-white p-4 rounded-lg border border-purple-100\">\n                  <div className=\"flex items-center mb-2\">\n                    <Users className=\"w-5 h-5 text-purple-600 mr-2\" />\n                    <h3 className=\"font-semibold text-gray-900\">팀 협업</h3>\n                  </div>\n                  <p className=\"text-sm text-gray-600\">\n                    팀원 초대 및 권한 관리\n                  </p>\n                </div>\n\n                <div className=\"bg-white p-4 rounded-lg border border-orange-100\">\n                  <div className=\"flex items-center mb-2\">\n                    <Monitor className=\"w-5 h-5 text-orange-600 mr-2\" />\n                    <h3 className=\"font-semibold text-gray-900\">PWA 지원</h3>\n                  </div>\n                  <p className=\"text-sm text-gray-600\">\n                    PC 앱으로 설치하여 사용\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center\">\n                  <BookOpen className=\"w-5 h-5 mr-2\" />\n                  주요 특징\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  <div>\n                    <h4 className=\"font-semibold text-gray-900 mb-3\">\n                      🎯 핵심 기능\n                    </h4>\n                    <ul className=\"space-y-2 text-sm text-gray-600\">\n                      <li>• 매물 등록 및 관리</li>\n                      <li>• 실시간 대시보드</li>\n                      <li>• 통계 및 차트 분석</li>\n                      <li>• 팀원 관리 및 권한 설정</li>\n                      <li>• 데이터 가져오기/내보내기</li>\n                      <li>• PWA 지원 (앱 설치 가능)</li>\n                    </ul>\n                  </div>\n\n                  <div>\n                    <h4 className=\"font-semibold text-gray-900 mb-3\">\n                      💡 편의 기능\n                    </h4>\n                    <ul className=\"space-y-2 text-sm text-gray-600\">\n                      <li>• 샘플 데이터 자동 입력</li>\n                      <li>• 다양한 검색 및 필터</li>\n                      <li>• 카드형/리스트형 보기 전환</li>\n                      <li>• 반응형 디자인 (모바일 지원)</li>\n                      <li>• 브랜딩 커스터마이징</li>\n                      <li>• 알림 설정</li>\n                    </ul>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        );\n\n      case \"dashboard\":\n        return (\n          <div className=\"space-y-6\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center\">\n                  <TrendingUp className=\"w-5 h-5 mr-2\" />\n                  대시보드 사용법\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div className=\"bg-gray-50 rounded-lg p-4\">\n                  <h4 className=\"font-semibold text-gray-900 mb-2\">\n                    📊 통계 카드\n                  </h4>\n                  <p className=\"text-sm text-gray-600 mb-3\">\n                    총 매물, 활성 매물, 팀원 수, 이번 달 등록 매물 수를 한눈에\n                    확인할 수 있습니다.\n                  </p>\n                  <div className=\"grid grid-cols-2 md:grid-cols-4 gap-2\">\n                    <div className=\"bg-white p-3 rounded border text-center\">\n                      <div className=\"text-blue-600 font-bold\">156</div>\n                      <div className=\"text-xs text-gray-500\">총 매물</div>\n                    </div>\n                    <div className=\"bg-white p-3 rounded border text-center\">\n                      <div className=\"text-green-600 font-bold\">142</div>\n                      <div className=\"text-xs text-gray-500\">활성 매물</div>\n                    </div>\n                    <div className=\"bg-white p-3 rounded border text-center\">\n                      <div className=\"text-purple-600 font-bold\">8</div>\n                      <div className=\"text-xs text-gray-500\">팀원</div>\n                    </div>\n                    <div className=\"bg-white p-3 rounded border text-center\">\n                      <div className=\"text-orange-600 font-bold\">23</div>\n                      <div className=\"text-xs text-gray-500\">이번 달</div>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"bg-gray-50 rounded-lg p-4\">\n                  <h4 className=\"font-semibold text-gray-900 mb-2\">\n                    📈 차트 분석\n                  </h4>\n                  <p className=\"text-sm text-gray-600 mb-3\">\n                    매물 트렌드와 유형별 분포를 시각적으로 확인할 수 있습니다.\n                  </p>\n                  <ul className=\"text-sm text-gray-600 space-y-1\">\n                    <li>\n                      • <strong>매물 트렌드 차트</strong>: 월별 매물 등록 추이\n                    </li>\n                    <li>\n                      • <strong>매물 유형 차트</strong>: 아파트, 오피스텔, 원룸,\n                      빌라 비율\n                    </li>\n                  </ul>\n                </div>\n\n                <div className=\"bg-gray-50 rounded-lg p-4\">\n                  <h4 className=\"font-semibold text-gray-900 mb-2\">\n                    🏠 최근 등록 매물\n                  </h4>\n                  <p className=\"text-sm text-gray-600\">\n                    최근에 등록된 매물 4개를 카드 형태로 보여줍니다. 매물 카드를\n                    클릭하면 상세 정보를 확인하고 편집/삭제할 수 있습니다.\n                  </p>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        );\n\n      case \"properties\":\n        return (\n          <div className=\"space-y-6\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center\">\n                  <Building2 className=\"w-5 h-5 mr-2\" />\n                  매물 관리 사용법\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-6\">\n                {/* 매물 등록 */}\n                <div className=\"border-l-4 border-blue-500 pl-4\">\n                  <h4 className=\"font-semibold text-gray-900 mb-2 flex items-center\">\n                    <Plus className=\"w-4 h-4 mr-2 text-blue-600\" />\n                    매물 등록하기\n                  </h4>\n                  <ol className=\"text-sm text-gray-600 space-y-1 list-decimal list-inside\">\n                    <li>우상단 \"매물 등록\" 버튼 클릭</li>\n                    <li>기본 정보 입력 (제목, 주소, 유형, 거래유형)</li>\n                    <li>상세 정보 입력 (면적, 층수, 룸 구조)</li>\n                    <li>가격 정보 입력 (매매가, 전세금, 월세)</li>\n                    <li>임대인 정보 및 기타 옵션 설정</li>\n                    <li>\"매물 등록\" 버튼으로 완료</li>\n                  </ol>\n                  <div className=\"mt-2 p-2 bg-blue-50 rounded text-xs text-blue-700\">\n                    💡 <strong>팁:</strong> \"샘플 데이터 입력\" 버튼을 사용하면\n                    예시 데이터가 자동으로 입력됩니다.\n                  </div>\n                </div>\n\n                {/* 검색 및 필터 */}\n                <div className=\"border-l-4 border-green-500 pl-4\">\n                  <h4 className=\"font-semibold text-gray-900 mb-2 flex items-center\">\n                    <Search className=\"w-4 h-4 mr-2 text-green-600\" />\n                    검색 및 필터링\n                  </h4>\n                  <div className=\"space-y-2 text-sm text-gray-600\">\n                    <p>\n                      <strong>검색:</strong> 매물명이나 주소로 실시간 검색 가능\n                    </p>\n                    <p>\n                      <strong>필터:</strong>\n                    </p>\n                    <ul className=\"ml-4 space-y-1\">\n                      <li>• 거래유형: 매매, 전세, 월세</li>\n                      <li>• 매물유형: 아파트, 오피스텔, 원룸, 빌라</li>\n                      <li>• 상태: 거래중, 거래완료</li>\n                    </ul>\n                  </div>\n                </div>\n\n                {/* 보기 모드 */}\n                <div className=\"border-l-4 border-purple-500 pl-4\">\n                  <h4 className=\"font-semibold text-gray-900 mb-2 flex items-center\">\n                    <Grid className=\"w-4 h-4 mr-2 text-purple-600\" />\n                    보기 모드 전환\n                  </h4>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm text-gray-600\">\n                    <div>\n                      <p className=\"flex items-center mb-1\">\n                        <Grid className=\"w-3 h-3 mr-1\" />\n                        <strong>카드형 보기</strong>\n                      </p>\n                      <p>매물을 카드 형태로 시각적으로 표시</p>\n                    </div>\n                    <div>\n                      <p className=\"flex items-center mb-1\">\n                        <AlignLeft className=\"w-3 h-3 mr-1\" />\n                        <strong>리스트형 보기</strong>\n                      </p>\n                      <p>매물을 테이블 형태로 간략하게 표시</p>\n                    </div>\n                  </div>\n                </div>\n\n                {/* 매물 관리 */}\n                <div className=\"border-l-4 border-orange-500 pl-4\">\n                  <h4 className=\"font-semibold text-gray-900 mb-2 flex items-center\">\n                    <Edit className=\"w-4 h-4 mr-2 text-orange-600\" />\n                    매물 편집 및 삭제\n                  </h4>\n                  <div className=\"space-y-2 text-sm text-gray-600\">\n                    <p>\n                      <strong>상세보기:</strong> 매물 카드 클릭 → 상세 정보 모달\n                      표시\n                    </p>\n                    <p>\n                      <strong>편집:</strong> 상세보기 모달에서 편집 버튼 클릭\n                    </p>\n                    <p>\n                      <strong>삭제:</strong> 상세보기 모달에서 삭제 버튼 클릭\n                      (확인 필요)\n                    </p>\n                  </div>\n                  <div className=\"mt-2 p-2 bg-orange-50 rounded text-xs text-orange-700\">\n                    ⚠️ <strong>주의:</strong> 삭제된 매물은 복구할 수 없습니다.\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        );\n\n      case \"team\":\n        return (\n          <div className=\"space-y-6\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center\">\n                  <Users className=\"w-5 h-5 mr-2\" />팀 관리 사용법\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-4\">\n                  <p className=\"text-sm text-yellow-800\">\n                    <strong>🚧 개발 예정:</strong> 팀 관리 기능은 현재 개발\n                    중입니다. 향후 업데이트를 통해 팀원 초대, 권한 관리, 역할\n                    설정 등의 기능을 제공할 예정입니다.\n                  </p>\n                </div>\n\n                <div className=\"space-y-4\">\n                  <h4 className=\"font-semibold text-gray-900\">예정된 기능:</h4>\n                  <ul className=\"space-y-2 text-sm text-gray-600\">\n                    <li>• 팀원 초대 및 관리</li>\n                    <li>• 권한 설정 (관리자, 일반 사용자)</li>\n                    <li>• 역할별 접근 제어</li>\n                    <li>• 팀원 활동 로그</li>\n                    <li>• 협업 도구 연동</li>\n                  </ul>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        );\n\n      case \"settings\":\n        return (\n          <div className=\"space-y-6\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center\">\n                  <Settings className=\"w-5 h-5 mr-2\" />\n                  설정 사용법\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-6\">\n                {/* 일반 설정 */}\n                <div className=\"border-l-4 border-blue-500 pl-4\">\n                  <h4 className=\"font-semibold text-gray-900 mb-2 flex items-center\">\n                    <Settings className=\"w-4 h-4 mr-2 text-blue-600\" />\n                    일반 설정\n                  </h4>\n                  <ul className=\"text-sm text-gray-600 space-y-1\">\n                    <li>\n                      • <strong>기본 정보:</strong> 회사명, 도메인, 연락처 설정\n                    </li>\n                    <li>\n                      • <strong>PWA 설치:</strong> PC에 앱으로 설치하여 사용\n                    </li>\n                    <li>\n                      • <strong>데이터 관리:</strong> 가져오기/내보내기, 샘플\n                      데이터 초기화\n                    </li>\n                  </ul>\n                </div>\n\n                {/* 요금제 관리 */}\n                <div className=\"border-l-4 border-green-500 pl-4\">\n                  <h4 className=\"font-semibold text-gray-900 mb-2 flex items-center\">\n                    <CreditCard className=\"w-4 h-4 mr-2 text-green-600\" />\n                    결제 및 요금제\n                  </h4>\n                  <ul className=\"text-sm text-gray-600 space-y-1\">\n                    <li>\n                      • <strong>현재 플랜:</strong> 사용 중인 요금제 및 제한사항\n                      확인\n                    </li>\n                    <li>\n                      • <strong>플랜 변경:</strong> 스타터, 프로페셔널,\n                      비즈니스, 엔터프라이즈\n                    </li>\n                    <li>\n                      • <strong>결제 정보:</strong> 결제 수단 관리 및 결제 내역\n                      확인\n                    </li>\n                  </ul>\n                </div>\n\n                {/* 브랜딩 */}\n                <div className=\"border-l-4 border-purple-500 pl-4\">\n                  <h4 className=\"font-semibold text-gray-900 mb-2 flex items-center\">\n                    <MonitorIcon className=\"w-4 h-4 mr-2 text-purple-600\" />\n                    브랜딩\n                  </h4>\n                  <ul className=\"text-sm text-gray-600 space-y-1\">\n                    <li>\n                      • <strong>로고 업로드:</strong> 회사 로고 설정 (PNG, JPG\n                      최대 2MB)\n                    </li>\n                    <li>\n                      • <strong>브랜드 컬러:</strong> 주 컬러와 보조 컬러 설정\n                    </li>\n                    <li>\n                      • <strong>미리보기:</strong> 적용된 브랜드 스타일 확인\n                    </li>\n                  </ul>\n                </div>\n\n                {/* 알림 설정 */}\n                <div className=\"border-l-4 border-orange-500 pl-4\">\n                  <h4 className=\"font-semibold text-gray-900 mb-2 flex items-center\">\n                    <Bell className=\"w-4 h-4 mr-2 text-orange-600\" />\n                    알림 설정\n                  </h4>\n                  <ul className=\"text-sm text-gray-600 space-y-1\">\n                    <li>\n                      • <strong>이메일 알림:</strong> 새 매물, 계약 완료, 팀원\n                      초대 등\n                    </li>\n                    <li>\n                      • <strong>앱 알림:</strong> 실시간 푸시 알림 설정\n                    </li>\n                    <li>\n                      • <strong>알림 시간:</strong> 알림 수신 시간대 설정\n                    </li>\n                  </ul>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        );\n\n      case \"tips\":\n        return (\n          <div className=\"space-y-6\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center\">\n                  <BookOpen className=\"w-5 h-5 mr-2\" />\n                  사용 팁 및 노하우\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-6\">\n                <div className=\"bg-gradient-to-r from-yellow-50 to-orange-50 rounded-lg p-4 border border-yellow-200\">\n                  <h4 className=\"font-semibold text-gray-900 mb-3 flex items-center\">\n                    💡 효율적인 매물 관리 팁\n                  </h4>\n                  <ul className=\"space-y-2 text-sm text-gray-700\">\n                    <li>\n                      • <strong>일관된 제목 규칙:</strong> \"지역명 + 매물유형 +\n                      특징\" 형태로 작성\n                    </li>\n                    <li>\n                      • <strong>상세한 주소 입력:</strong> 정확한 위치 정보로\n                      고객 신뢰도 향상\n                    </li>\n                    <li>\n                      • <strong>퇴실예정일 활용:</strong> 임차인 관리 및 계약\n                      갱신 준비\n                    </li>\n                    <li>\n                      • <strong>정기적인 상태 업데이트:</strong> 매물 상태를\n                      실시간으로 관리\n                    </li>\n                  </ul>\n                </div>\n\n                <div className=\"bg-gradient-to-r from-blue-50 to-indigo-50 rounded-lg p-4 border border-blue-200\">\n                  <h4 className=\"font-semibold text-gray-900 mb-3 flex items-center\">\n                    🚀 생산성 향상 방법\n                  </h4>\n                  <ul className=\"space-y-2 text-sm text-gray-700\">\n                    <li>\n                      • <strong>PWA 설치:</strong> 바탕화면에서 바로 접근하여\n                      업무 효율성 증대\n                    </li>\n                    <li>\n                      • <strong>샘플 데이터 활용:</strong> 새 매물 등록 시 기존\n                      정보를 참고하여 빠른 입력\n                    </li>\n                    <li>\n                      • <strong>필터 활용:</strong> 원하는 조건의 매물을 빠르게\n                      찾기\n                    </li>\n                    <li>\n                      • <strong>리스트형 보기:</strong> 많은 매물을 한 번에\n                      비교할 때 유용\n                    </li>\n                  </ul>\n                </div>\n\n                <div className=\"bg-gradient-to-r from-green-50 to-emerald-50 rounded-lg p-4 border border-green-200\">\n                  <h4 className=\"font-semibold text-gray-900 mb-3 flex items-center\">\n                    🔧 유용한 단축키 및 기능\n                  </h4>\n                  <ul className=\"space-y-2 text-sm text-gray-700\">\n                    <li>\n                      • <strong>빠른 검색:</strong> 검색창에서 실시간으로 결과\n                      확인\n                    </li>\n                    <li>\n                      • <strong>카드 클릭:</strong> 매물 카드를 클릭하여 바로\n                      상세보기\n                    </li>\n                    <li>\n                      • <strong>모달에서 편집:</strong> 상세보기에서 바로 편집\n                      모드로 전환\n                    </li>\n                    <li>\n                      • <strong>초기화 기능:</strong> 설정에서 샘플 데이터 일괄\n                      삭제\n                    </li>\n                  </ul>\n                </div>\n\n                <div className=\"bg-gradient-to-r from-purple-50 to-pink-50 rounded-lg p-4 border border-purple-200\">\n                  <h4 className=\"font-semibold text-gray-900 mb-3 flex items-center\">\n                    📱 모바일 사용 팁\n                  </h4>\n                  <ul className=\"space-y-2 text-sm text-gray-700\">\n                    <li>\n                      • <strong>반응형 디자인:</strong> 모바일에서도 모든 기능\n                      완벽 지원\n                    </li>\n                    <li>\n                      • <strong>터치 최적화:</strong> 버튼과 링크가 터치하기\n                      쉽게 설계됨\n                    </li>\n                    <li>\n                      • <strong>빠른 로딩:</strong> 모바일 환경에 최적화된 성능\n                    </li>\n                    <li>\n                      • <strong>홈 화면 추가:</strong> 브라우저에서 홈 화면에\n                      추가하여 앱처럼 사용\n                    </li>\n                  </ul>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        );\n\n      default:\n        return null;\n    }\n  };\n\n  // MonitorIcon 컴포넌트 정의 (임시)\n  const MonitorIcon = Monitor;\n\n  return (\n    <div className=\"space-y-6\">\n      {/* 페이지 헤더 */}\n      <div className=\"bg-gradient-to-r from-blue-50 to-indigo-50 rounded-lg p-4 sm:p-6 border border-blue-200\">\n        <h1 className=\"text-xl sm:text-2xl font-bold text-gray-900 flex items-center\">\n          <BookOpen className=\"w-5 h-5 sm:w-6 sm:h-6 mr-2 sm:mr-3 text-blue-600\" />\n          사용설명서\n        </h1>\n        <p className=\"text-sm sm:text-base text-gray-600 mt-2\">\n          리체 매물장의 모든 기능과 사용법을 자세히 안내해드립니다.\n        </p>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-6\">\n        {/* 좌측 메뉴 */}\n        <div className=\"lg:col-span-1\">\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"text-lg\">목차</CardTitle>\n            </CardHeader>\n            <CardContent className=\"p-0\">\n              <nav className=\"space-y-1\">\n                {sections.map((section) => {\n                  const Icon = section.icon;\n                  return (\n                    <button\n                      key={section.id}\n                      onClick={() => setActiveSection(section.id)}\n                      className={`w-full flex items-center space-x-3 px-4 py-4 text-sm sm:text-base font-medium transition-colors touch-target ${\n                        activeSection === section.id\n                          ? \"bg-blue-50 text-blue-700 border-r-2 border-blue-500\"\n                          : \"text-gray-600 hover:text-gray-900 hover:bg-gray-50\"\n                      }`}\n                    >\n                      <Icon className=\"w-4 h-4 sm:w-5 sm:h-5 flex-shrink-0\" />\n                      <span className=\"text-left\">{section.title}</span>\n                    </button>\n                  );\n                })}\n              </nav>\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* 우측 콘텐츠 */}\n        <div className=\"lg:col-span-3\">{renderSectionContent()}</div>\n      </div>\n\n      {/* 하단 개발회사 정보 */}\n      <div className=\"bg-gray-50 border border-gray-200 rounded-lg p-4 sm:p-6 text-center\">\n        <div className=\"space-y-2\">\n          <p className=\"text-sm sm:text-base text-gray-600\">\n            <strong>개발회사:</strong> 리체부동산\n          </p>\n          <p className=\"text-sm sm:text-base text-gray-600\">\n            <strong>대표:</strong> 김선미 공인중개사\n          </p>\n        </div>\n        <div className=\"mt-4 pt-4 border-t border-gray-300\">\n          <p className=\"text-xs sm:text-sm text-gray-500\">\n            © 2024 리체부동산. All rights reserved.\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport { UserGuidePage };\n","// ============================================================================\n// 팀 초대 수락 컴포넌트\n// ============================================================================\n\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport { Check, X, Users, Building, Mail, Clock } from \"lucide-react\";\nimport { supabase } from \"@/services/supabase\";\nimport { useAuth } from \"@/contexts/AuthContext\";\n\ninterface InvitationData {\n  id: string;\n  email: string;\n  role: string;\n  status: string;\n  expires_at: string;\n  tenant_id: string;\n  inviter_id: string;\n  tenant?: {\n    name: string;\n  };\n  inviter?: {\n    name: string;\n  };\n}\n\nexport const InvitationAccept: React.FC = () => {\n  const [searchParams] = useSearchParams();\n  const { user } = useAuth();\n  const navigate = useNavigate();\n  const [invitation, setInvitation] = useState<InvitationData | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [processing, setProcessing] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const token = searchParams.get(\"token\");\n\n  useEffect(() => {\n    if (token) {\n      loadInvitation();\n    } else {\n      setError(\"유효하지 않은 초대 링크입니다.\");\n      setLoading(false);\n    }\n  }, [token]);\n\n  const loadInvitation = async () => {\n    try {\n      const { data, error } = await supabase\n        .from(\"team_invitations\")\n        .select(\n          `\n          id,\n          email,\n          role,\n          status,\n          expires_at,\n          tenant_id,\n          inviter_id\n        `,\n        )\n        .eq(\"invitation_token\", token)\n        .eq(\"status\", \"pending\")\n        .single();\n\n      if (error || !data) {\n        setError(\"초대를 찾을 수 없거나 이미 처리된 초대입니다.\");\n        return;\n      }\n\n      // 만료 확인\n      if (new Date(data.expires_at) < new Date()) {\n        setError(\"만료된 초대입니다.\");\n        return;\n      }\n\n      // 사용자 이메일 확인 (로그인한 사용자의 이메일과 일치하는지)\n      if (user?.email !== data.email) {\n        setError(\"초대받은 이메일과 로그인한 계정이 다릅니다.\");\n        return;\n      }\n\n      // 팀과 초대자 정보 추가로 가져오기\n      const [tenantResponse, inviterResponse] = await Promise.all([\n        supabase\n          .from(\"tenants\")\n          .select(\"name\")\n          .eq(\"id\", data.tenant_id)\n          .single(),\n        supabase\n          .from(\"user_profiles\")\n          .select(\"name\")\n          .eq(\"id\", data.inviter_id)\n          .single(),\n      ]);\n\n      const invitationWithDetails = {\n        ...data,\n        tenant: { name: tenantResponse.data?.name || \"알 수 없는 팀\" },\n        inviter: { name: inviterResponse.data?.name || \"알 수 없는 사용자\" },\n      };\n\n      setInvitation(invitationWithDetails);\n    } catch (error) {\n      console.error(\"초대 정보 로드 실패:\", error);\n      setError(\"초대 정보를 불러오는데 실패했습니다.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleAccept = async () => {\n    if (!invitation || !user) return;\n\n    try {\n      setProcessing(true);\n\n      // 초대 상태를 'accepted'로 변경\n      const { error: inviteError } = await supabase\n        .from(\"team_invitations\")\n        .update({\n          status: \"accepted\",\n          updated_at: new Date().toISOString(),\n        })\n        .eq(\"id\", invitation.id);\n\n      if (inviteError) throw inviteError;\n\n      // 초대 데이터에서 tenant_id 직접 사용\n\n      const { error: profileError } = await supabase\n        .from(\"user_profiles\")\n        .update({\n          tenant_id: invitation.tenant_id,\n          role: invitation.role,\n          joined_at: new Date().toISOString(),\n          status: \"active\",\n        })\n        .eq(\"id\", user.id);\n\n      if (profileError) throw profileError;\n\n      // 활동 로그 기록\n      await supabase.from(\"team_activity_logs\").insert({\n        tenant_id: invitation.tenant_id,\n        user_id: user.id,\n        action: \"invitation_accepted\",\n        details: {\n          invitation_id: invitation.id,\n          role: invitation.role,\n        },\n      });\n\n      alert(\"팀 초대를 수락했습니다! 잠시 후 대시보드로 이동합니다.\");\n\n      // 대시보드로 리다이렉트\n      setTimeout(() => {\n        navigate(\"/\");\n      }, 1000);\n    } catch (error: any) {\n      console.error(\"초대 수락 실패:\", error);\n      setError(error.message || \"초대 수락에 실패했습니다.\");\n    } finally {\n      setProcessing(false);\n    }\n  };\n\n  const handleDecline = async () => {\n    if (!invitation) return;\n\n    if (!confirm(\"정말로 초대를 거절하시겠습니까?\")) return;\n\n    try {\n      setProcessing(true);\n\n      // 초대 상태를 'declined'로 변경\n      const { error } = await supabase\n        .from(\"team_invitations\")\n        .update({\n          status: \"declined\",\n          updated_at: new Date().toISOString(),\n        })\n        .eq(\"id\", invitation.id);\n\n      if (error) throw error;\n\n      alert(\"초대를 거절했습니다.\");\n      navigate(\"/\");\n    } catch (error: any) {\n      console.error(\"초대 거절 실패:\", error);\n      setError(error.message || \"초대 거절에 실패했습니다.\");\n    } finally {\n      setProcessing(false);\n    }\n  };\n\n  const getRoleLabel = (role: string) => {\n    const labels = {\n      owner: \"팀 소유자\",\n      admin: \"관리자\",\n      member: \"멤버\",\n      viewer: \"뷰어\",\n    };\n    return labels[role as keyof typeof labels] || role;\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500 mx-auto mb-4\"></div>\n          <p className=\"text-gray-600\">초대 정보를 확인하는 중...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"bg-white rounded-lg shadow-lg p-8 max-w-md w-full mx-4\">\n          <div className=\"text-center\">\n            <div className=\"w-16 h-16 bg-red-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n              <X className=\"w-8 h-8 text-red-600\" />\n            </div>\n            <h2 className=\"text-xl font-semibold text-gray-900 mb-2\">\n              오류가 발생했습니다\n            </h2>\n            <p className=\"text-gray-600 mb-6\">{error}</p>\n            <button\n              onClick={() => navigate(\"/\")}\n              className=\"bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-colors\"\n            >\n              대시보드로 이동\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (!invitation) {\n    return null;\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n      <div className=\"bg-white rounded-lg shadow-lg p-8 max-w-md w-full mx-4\">\n        <div className=\"text-center mb-6\">\n          <div className=\"w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n            <Users className=\"w-8 h-8 text-blue-600\" />\n          </div>\n          <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">팀 초대</h2>\n          <p className=\"text-gray-600\">팀에 합류하도록 초대되었습니다</p>\n        </div>\n\n        <div className=\"space-y-4 mb-6\">\n          <div className=\"flex items-center space-x-3 p-3 bg-gray-50 rounded-lg\">\n            <Building className=\"w-5 h-5 text-gray-500\" />\n            <div>\n              <p className=\"text-sm text-gray-600\">팀</p>\n              <p className=\"font-medium text-gray-900\">\n                {invitation.tenant?.name || \"알 수 없는 팀\"}\n              </p>\n            </div>\n          </div>\n\n          <div className=\"flex items-center space-x-3 p-3 bg-gray-50 rounded-lg\">\n            <Mail className=\"w-5 h-5 text-gray-500\" />\n            <div>\n              <p className=\"text-sm text-gray-600\">초대자</p>\n              <p className=\"font-medium text-gray-900\">\n                {invitation.inviter?.name || \"알 수 없는 사용자\"}\n              </p>\n            </div>\n          </div>\n\n          <div className=\"flex items-center space-x-3 p-3 bg-gray-50 rounded-lg\">\n            <Users className=\"w-5 h-5 text-gray-500\" />\n            <div>\n              <p className=\"text-sm text-gray-600\">역할</p>\n              <p className=\"font-medium text-gray-900\">\n                {getRoleLabel(invitation.role)}\n              </p>\n            </div>\n          </div>\n\n          <div className=\"flex items-center space-x-3 p-3 bg-gray-50 rounded-lg\">\n            <Clock className=\"w-5 h-5 text-gray-500\" />\n            <div>\n              <p className=\"text-sm text-gray-600\">만료일</p>\n              <p className=\"font-medium text-gray-900\">\n                {new Date(invitation.expires_at).toLocaleDateString(\"ko-KR\")}\n              </p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"flex space-x-3\">\n          <button\n            onClick={handleDecline}\n            disabled={processing}\n            className=\"flex-1 bg-gray-100 text-gray-700 px-4 py-3 rounded-lg hover:bg-gray-200 transition-colors disabled:opacity-50 disabled:cursor-not-allowed font-medium\"\n          >\n            거절\n          </button>\n          <button\n            onClick={handleAccept}\n            disabled={processing}\n            className=\"flex-1 bg-blue-600 text-white px-4 py-3 rounded-lg hover:bg-blue-700 transition-colors disabled:opacity-50 disabled:cursor-not-allowed font-medium flex items-center justify-center space-x-2\"\n          >\n            {processing ? (\n              <div className=\"animate-spin rounded-full h-5 w-5 border-b-2 border-white\"></div>\n            ) : (\n              <>\n                <Check className=\"w-5 h-5\" />\n                <span>수락</span>\n              </>\n            )}\n          </button>\n        </div>\n\n        <p className=\"text-xs text-gray-500 text-center mt-4\">\n          초대를 수락하면 현재 팀에서 나가고 새로운 팀으로 이동됩니다.\n        </p>\n      </div>\n    </div>\n  );\n};\n","// ============================================================================\n// PropertyDesk SaaS - 메인 애플리케이션 컴포넌트\n// ============================================================================\n\nimport React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Navigate,\n} from \"react-router-dom\";\nimport { AuthProvider } from \"@/contexts/AuthContext\";\nimport { TenantProvider } from \"@/contexts/TenantContext\";\nimport { AuthGuard } from \"@/components/auth\";\nimport { AppLayout } from \"@/components/layout\";\nimport { ErrorBoundary } from \"@/components/common/ErrorBoundary\";\nimport { InstallPrompt } from \"@/components/ui/InstallPrompt\";\nimport { DashboardPage } from \"@/pages/DashboardPage\";\nimport { PropertiesPageNew } from \"@/pages/PropertiesPageNew\";\nimport SchedulePage from \"@/pages/SchedulePage\";\nimport { TeamPage } from \"@/pages/TeamPage\";\nimport { SettingsPage } from \"@/pages/SettingsPage\";\nimport { UserGuidePage } from \"@/pages/UserGuidePage\";\nimport { InvitationAccept } from \"@/components/team/InvitationAccept\";\nimport \"@/styles/globals.css\";\n\nfunction App() {\n  return (\n    <ErrorBoundary>\n      <AuthProvider>\n        <TenantProvider>\n          <Router>\n            <Routes>\n              {/* 팀 초대 수락 페이지 - AuthGuard 없이 접근 가능 */}\n              <Route path=\"/team/invite\" element={<InvitationAccept />} />\n\n              {/* 인증이 필요한 페이지들 */}\n              <Route\n                path=\"/*\"\n                element={\n                  <AuthGuard>\n                    <AppLayout>\n                      <Routes>\n                        <Route path=\"/\" element={<DashboardPage />} />\n                        <Route\n                          path=\"/properties\"\n                          element={<PropertiesPageNew />}\n                        />\n                        <Route path=\"/schedule\" element={<SchedulePage />} />\n                        <Route path=\"/team\" element={<TeamPage />} />\n                        <Route path=\"/settings\" element={<SettingsPage />} />\n                        <Route path=\"/guide\" element={<UserGuidePage />} />\n\n                        {/* 테넌트별 라우팅 */}\n                        <Route\n                          path=\"/tenant/:tenantSlug/*\"\n                          element={<TenantRoutes />}\n                        />\n\n                        {/* 404 처리 */}\n                        <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\n                      </Routes>\n\n                      {/* PWA 설치 프롬프트 */}\n                      <InstallPrompt />\n                    </AppLayout>\n                  </AuthGuard>\n                }\n              />\n            </Routes>\n        </Router>\n      </TenantProvider>\n    </AuthProvider>\n    </ErrorBoundary>\n  );\n}\n\n// 테넌트별 라우팅 처리\nconst TenantRoutes: React.FC = () => {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<DashboardPage />} />\n      <Route path=\"/properties\" element={<PropertiesPageNew />} />\n      <Route path=\"/schedule\" element={<SchedulePage />} />\n      <Route path=\"/team\" element={<TeamPage />} />\n      <Route path=\"/settings\" element={<SettingsPage />} />\n      <Route path=\"/guide\" element={<UserGuidePage />} />\n    </Routes>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App.tsx\";\nimport \"./styles/globals.css\";\n\nReactDOM.createRoot(document.getElementById(\"root\")!).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n);\n"],"file":"assets/index-B9ABu-MC.js"}